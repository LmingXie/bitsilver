# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2013-2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2019 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2019 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2015-2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The BitSilver Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bitsilver
pkgincludedir = $(includedir)/bitsilver
pkglibdir = $(libdir)/bitsilver
pkglibexecdir = $(libexecdir)/bitsilver
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-w64-mingw32
am__append_1 = $(LIBBITSILVER_CRYPTO_SSE41)
am__append_2 = $(LIBBITSILVER_CRYPTO_AVX2)
am__append_3 = $(LIBBITSILVER_CRYPTO_SHANI)
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8)
noinst_PROGRAMS = $(am__EXEEXT_10)
TESTS = $(am__EXEEXT_8)
am__append_4 = bitsilverd
am__append_5 = bitsilver-cli
am__append_6 = bitsilver-tx
am__append_7 = bitsilver-wallet
am__append_8 = wallet/init.cpp
#am__append_9 = dummywallet.cpp
am__append_10 = crypto/sha256_sse4.cpp
#am__append_11 = compat/glibc_compat.cpp
#am__append_12 = $(COMPAT_LDFLAGS)
am__append_13 = bitsilverd-res.rc
am__append_14 = bitsilver-cli-res.rc
am__append_15 = bitsilver-tx-res.rc
am__append_16 = bitsilver-wallet-res.rc
#am__append_17 = compat/glibc_compat.cpp
am__append_18 = $(LIBCRC32C_INT)
am__append_19 = -DHAVE_SSE42=1
#am__append_20 = -DHAVE_SSE42=0
#am__append_21 = -DHAVE_ARM64_CRC32C=1
am__append_22 = -DHAVE_ARM64_CRC32C=0
#am__append_23 = -DBYTE_ORDER_BIG_ENDIAN=1
am__append_24 = -DBYTE_ORDER_BIG_ENDIAN=0
am__append_25 = $(LIBCRC32C_SSE42_INT)
am__append_26 = $(LIBCRC32C_SSE42_INT)
#am__append_27 = $(LIBCRC32C_ARM_CRC_INT)
#am__append_28 = $(LIBCRC32C_ARM_CRC_INT)
am__append_29 = $(LIBLEVELDB_INT) \
	$(LIBMEMENV_INT)
am__append_30 = $(LIBLEVELDB_INT) $(LIBCRC32C)
am__append_31 = $(LIBMEMENV_INT)
am__append_32 = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv
#am__append_33 = -DLEVELDB_IS_BIG_ENDIAN=1
am__append_34 = -DLEVELDB_IS_BIG_ENDIAN=0
am__append_35 = -DLEVELDB_PLATFORM_WINDOWS -D_UNICODE -DUNICODE -D__USE_MINGW_ANSI_STDIO=1
#am__append_36 = -DLEVELDB_PLATFORM_POSIX
am__append_37 = leveldb/util/env_windows.cc
#am__append_38 = leveldb/util/env_posix.cc
#am__append_39 = $(FUZZ_TARGETS:=)
am__append_40 = test/test_bitsilver
#am__append_41 = \
#  test/key_properties.cpp

#am__append_42 = \
#  test/gen/crypto_gen.cpp \
#  test/gen/crypto_gen.h

am__append_43 = \
  wallet/test/db_tests.cpp \
  wallet/test/psbt_wallet_tests.cpp \
  wallet/test/wallet_tests.cpp \
  wallet/test/wallet_crypto_tests.cpp \
  wallet/test/coinselector_tests.cpp \
  wallet/test/init_tests.cpp \
  wallet/test/ismine_tests.cpp \
  wallet/test/scriptpubkeyman_tests.cpp

am__append_44 = \
  wallet/test/wallet_test_fixture.cpp \
  wallet/test/wallet_test_fixture.h \
  wallet/test/init_test_fixture.cpp \
  wallet/test/init_test_fixture.h

am__append_45 = $(LIBBITSILVER_WALLET)
am__append_46 = $(LIBBITSILVER_ZMQ) $(ZMQ_LIBS)
am__append_47 = $(CLEAN_BITSILVER_TEST)
am__append_48 = bench/bench_bitsilver
am__append_49 = $(LIBBITSILVER_ZMQ) $(ZMQ_LIBS)
am__append_50 = bench/coin_selection.cpp \
	bench/wallet_balance.cpp
am__append_51 = $(CLEAN_BITSILVER_BENCH)
am__append_52 = qt/bitsilver-qt
am__append_53 = qt/libbitsilverqt.a
am__append_54 = $(BITSILVER_QT_WINDOWS_CPP)
am__append_55 = $(BITSILVER_QT_WALLET_CPP)
#am__append_56 = $(BITSILVER_MM)
am__append_57 = $(BITSILVER_RC)
am__append_58 = $(LIBBITSILVER_UTIL) $(LIBBITSILVER_WALLET)
am__append_59 = $(LIBBITSILVER_ZMQ) $(ZMQ_LIBS)
am__append_60 = $(CLEAN_QT)
am__append_61 = qt/test/test_bitsilver-qt
am__append_62 = qt/test/test_bitsilver-qt
am__append_63 = \
  qt/test/moc_addressbooktests.cpp \
  qt/test/moc_wallettests.cpp

am__append_64 = \
  qt/test/addressbooktests.cpp \
  qt/test/wallettests.cpp \
  wallet/test/wallet_test_fixture.cpp

am__append_65 = $(LIBBITSILVER_UTIL) $(LIBBITSILVER_WALLET)
am__append_66 = $(LIBBITSILVER_ZMQ) $(ZMQ_LIBS)
am__append_67 = $(CLEAN_BITSILVER_QT_TEST)
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitsilver_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/bitsilver_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitsilver_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitsilver-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
crc32c_libcrc32c_a_AR = $(AR) $(ARFLAGS)
crc32c_libcrc32c_a_LIBADD =
am__crc32c_libcrc32c_a_SOURCES_DIST = crc32c/include/crc32c/crc32c.h \
	crc32c/src/crc32c_arm64.h \
	crc32c/src/crc32c_arm64_linux_check.h \
	crc32c/src/crc32c_internal.h crc32c/src/crc32c_prefetch.h \
	crc32c/src/crc32c_read_le.h crc32c/src/crc32c_round_up.h \
	crc32c/src/crc32c_sse42_check.h crc32c/src/crc32c_sse42.h \
	crc32c/src/crc32c.cc crc32c/src/crc32c_portable.cc
am__dirstamp = $(am__leading_dot)dirstamp
am_crc32c_libcrc32c_a_OBJECTS = crc32c/src/crc32c_libcrc32c_a-crc32c.$(OBJEXT) \
	crc32c/src/crc32c_libcrc32c_a-crc32c_portable.$(OBJEXT)
crc32c_libcrc32c_a_OBJECTS = $(am_crc32c_libcrc32c_a_OBJECTS)
crc32c_libcrc32c_arm_crc_a_AR = $(AR) $(ARFLAGS)
crc32c_libcrc32c_arm_crc_a_LIBADD =
am__crc32c_libcrc32c_arm_crc_a_SOURCES_DIST =  \
	crc32c/src/crc32c_arm64.cc
#am_crc32c_libcrc32c_arm_crc_a_OBJECTS = crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.$(OBJEXT)
crc32c_libcrc32c_arm_crc_a_OBJECTS =  \
	$(am_crc32c_libcrc32c_arm_crc_a_OBJECTS)
crc32c_libcrc32c_sse42_a_AR = $(AR) $(ARFLAGS)
crc32c_libcrc32c_sse42_a_LIBADD =
am__crc32c_libcrc32c_sse42_a_SOURCES_DIST =  \
	crc32c/src/crc32c_sse42.cc
am_crc32c_libcrc32c_sse42_a_OBJECTS = crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.$(OBJEXT)
crc32c_libcrc32c_sse42_a_OBJECTS =  \
	$(am_crc32c_libcrc32c_sse42_a_OBJECTS)
crypto_libbitsilver_crypto_avx2_a_AR = $(AR) $(ARFLAGS)
crypto_libbitsilver_crypto_avx2_a_LIBADD =
am_crypto_libbitsilver_crypto_avx2_a_OBJECTS = crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.$(OBJEXT)
crypto_libbitsilver_crypto_avx2_a_OBJECTS =  \
	$(am_crypto_libbitsilver_crypto_avx2_a_OBJECTS)
crypto_libbitsilver_crypto_base_a_AR = $(AR) $(ARFLAGS)
crypto_libbitsilver_crypto_base_a_LIBADD =
am__crypto_libbitsilver_crypto_base_a_SOURCES_DIST = crypto/aes.cpp \
	crypto/aes.h crypto/chacha_poly_aead.h \
	crypto/chacha_poly_aead.cpp crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/hkdf_sha256_32.cpp \
	crypto/hkdf_sha256_32.h crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/poly1305.h crypto/poly1305.cpp \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/siphash.cpp \
	crypto/siphash.h crypto/sha256_sse4.cpp
am__objects_1 = crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.$(OBJEXT)
am_crypto_libbitsilver_crypto_base_a_OBJECTS =  \
	crypto/crypto_libbitsilver_crypto_base_a-aes.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-chacha20.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-poly1305.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-ripemd160.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-sha1.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-sha256.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-sha512.$(OBJEXT) \
	crypto/crypto_libbitsilver_crypto_base_a-siphash.$(OBJEXT) \
	$(am__objects_1)
crypto_libbitsilver_crypto_base_a_OBJECTS =  \
	$(am_crypto_libbitsilver_crypto_base_a_OBJECTS)
crypto_libbitsilver_crypto_shani_a_AR = $(AR) $(ARFLAGS)
crypto_libbitsilver_crypto_shani_a_LIBADD =
am_crypto_libbitsilver_crypto_shani_a_OBJECTS = crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.$(OBJEXT)
crypto_libbitsilver_crypto_shani_a_OBJECTS =  \
	$(am_crypto_libbitsilver_crypto_shani_a_OBJECTS)
crypto_libbitsilver_crypto_sse41_a_AR = $(AR) $(ARFLAGS)
crypto_libbitsilver_crypto_sse41_a_LIBADD =
am_crypto_libbitsilver_crypto_sse41_a_OBJECTS = crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.$(OBJEXT)
crypto_libbitsilver_crypto_sse41_a_OBJECTS =  \
	$(am_crypto_libbitsilver_crypto_sse41_a_OBJECTS)
leveldb_libleveldb_a_AR = $(AR) $(ARFLAGS)
leveldb_libleveldb_a_LIBADD =
am__leveldb_libleveldb_a_SOURCES_DIST = leveldb/port/port_stdcxx.h \
	leveldb/port/port.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h leveldb/util/arena.h \
	leveldb/util/random.h leveldb/util/posix_logger.h \
	leveldb/util/hash.h leveldb/util/histogram.h \
	leveldb/util/coding.h leveldb/util/testutil.h \
	leveldb/util/mutexlock.h leveldb/util/logging.h \
	leveldb/util/no_destructor.h leveldb/util/testharness.h \
	leveldb/util/windows_logger.h leveldb/db/builder.cc \
	leveldb/db/c.cc leveldb/db/dbformat.cc leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc leveldb/db/memtable.cc \
	leveldb/db/repair.cc leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc leveldb/table/block_builder.cc \
	leveldb/table/block.cc leveldb/table/filter_block.cc \
	leveldb/table/format.cc leveldb/table/iterator.cc \
	leveldb/table/merger.cc leveldb/table/table_builder.cc \
	leveldb/table/table.cc leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc leveldb/util/bloom.cc \
	leveldb/util/cache.cc leveldb/util/coding.cc \
	leveldb/util/comparator.cc leveldb/util/crc32c.cc \
	leveldb/util/env.cc leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc leveldb/util/histogram.cc \
	leveldb/util/logging.cc leveldb/util/options.cc \
	leveldb/util/status.cc leveldb/util/env_windows.cc \
	leveldb/util/env_posix.cc
am__objects_2 = leveldb/util/leveldb_libleveldb_a-env_windows.$(OBJEXT)
#am__objects_3 = leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT)
am_leveldb_libleveldb_a_OBJECTS = leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
leveldb_libleveldb_a_OBJECTS = $(am_leveldb_libleveldb_a_OBJECTS)
leveldb_libmemenv_a_AR = $(AR) $(ARFLAGS)
leveldb_libmemenv_a_LIBADD =
am__leveldb_libmemenv_a_SOURCES_DIST =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
am_leveldb_libmemenv_a_OBJECTS = leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT)
leveldb_libmemenv_a_OBJECTS = $(am_leveldb_libmemenv_a_OBJECTS)
libbitsilver_cli_a_AR = $(AR) $(ARFLAGS)
libbitsilver_cli_a_LIBADD =
am__objects_4 =
am_libbitsilver_cli_a_OBJECTS =  \
	compat/libbitsilver_cli_a-stdin.$(OBJEXT) \
	rpc/libbitsilver_cli_a-client.$(OBJEXT) $(am__objects_4)
libbitsilver_cli_a_OBJECTS = $(am_libbitsilver_cli_a_OBJECTS)
libbitsilver_common_a_AR = $(AR) $(ARFLAGS)
libbitsilver_common_a_LIBADD =
am_libbitsilver_common_a_OBJECTS =  \
	libbitsilver_common_a-base58.$(OBJEXT) \
	libbitsilver_common_a-bech32.$(OBJEXT) \
	libbitsilver_common_a-bloom.$(OBJEXT) \
	libbitsilver_common_a-chainparams.$(OBJEXT) \
	libbitsilver_common_a-coins.$(OBJEXT) \
	libbitsilver_common_a-compressor.$(OBJEXT) \
	libbitsilver_common_a-core_read.$(OBJEXT) \
	libbitsilver_common_a-core_write.$(OBJEXT) \
	libbitsilver_common_a-key.$(OBJEXT) \
	libbitsilver_common_a-key_io.$(OBJEXT) \
	libbitsilver_common_a-merkleblock.$(OBJEXT) \
	libbitsilver_common_a-netaddress.$(OBJEXT) \
	libbitsilver_common_a-netbase.$(OBJEXT) \
	libbitsilver_common_a-net_permissions.$(OBJEXT) \
	libbitsilver_common_a-outputtype.$(OBJEXT) \
	policy/libbitsilver_common_a-feerate.$(OBJEXT) \
	policy/libbitsilver_common_a-policy.$(OBJEXT) \
	libbitsilver_common_a-protocol.$(OBJEXT) \
	libbitsilver_common_a-psbt.$(OBJEXT) \
	rpc/libbitsilver_common_a-rawtransaction_util.$(OBJEXT) \
	rpc/libbitsilver_common_a-util.$(OBJEXT) \
	libbitsilver_common_a-scheduler.$(OBJEXT) \
	script/libbitsilver_common_a-descriptor.$(OBJEXT) \
	script/libbitsilver_common_a-sign.$(OBJEXT) \
	script/libbitsilver_common_a-signingprovider.$(OBJEXT) \
	script/libbitsilver_common_a-standard.$(OBJEXT) \
	libbitsilver_common_a-versionbitsinfo.$(OBJEXT) \
	libbitsilver_common_a-warnings.$(OBJEXT) $(am__objects_4)
libbitsilver_common_a_OBJECTS = $(am_libbitsilver_common_a_OBJECTS)
libbitsilver_consensus_a_AR = $(AR) $(ARFLAGS)
libbitsilver_consensus_a_LIBADD =
am_libbitsilver_consensus_a_OBJECTS =  \
	libbitsilver_consensus_a-arith_uint256.$(OBJEXT) \
	consensus/libbitsilver_consensus_a-merkle.$(OBJEXT) \
	consensus/libbitsilver_consensus_a-tx_check.$(OBJEXT) \
	libbitsilver_consensus_a-hash.$(OBJEXT) \
	primitives/libbitsilver_consensus_a-block.$(OBJEXT) \
	primitives/libbitsilver_consensus_a-transaction.$(OBJEXT) \
	libbitsilver_consensus_a-pubkey.$(OBJEXT) \
	script/libbitsilver_consensus_a-bitsilverconsensus.$(OBJEXT) \
	script/libbitsilver_consensus_a-interpreter.$(OBJEXT) \
	script/libbitsilver_consensus_a-script.$(OBJEXT) \
	script/libbitsilver_consensus_a-script_error.$(OBJEXT) \
	libbitsilver_consensus_a-uint256.$(OBJEXT) \
	util/libbitsilver_consensus_a-strencodings.$(OBJEXT)
libbitsilver_consensus_a_OBJECTS =  \
	$(am_libbitsilver_consensus_a_OBJECTS)
libbitsilver_server_a_AR = $(AR) $(ARFLAGS)
libbitsilver_server_a_LIBADD =
am__libbitsilver_server_a_SOURCES_DIST = addrdb.cpp addrman.cpp \
	banman.cpp blockencodings.cpp blockfilter.cpp chain.cpp \
	consensus/tx_verify.cpp flatfile.cpp httprpc.cpp \
	httpserver.cpp index/base.cpp index/blockfilterindex.cpp \
	index/txindex.cpp interfaces/chain.cpp interfaces/node.cpp \
	init.cpp dbwrapper.cpp miner.cpp net.cpp net_processing.cpp \
	node/coin.cpp node/coinstats.cpp node/context.cpp \
	node/psbt.cpp node/transaction.cpp noui.cpp policy/fees.cpp \
	policy/rbf.cpp policy/settings.cpp pow.cpp rest.cpp \
	rpc/blockchain.cpp rpc/mining.cpp rpc/misc.cpp rpc/net.cpp \
	rpc/rawtransaction.cpp rpc/server.cpp script/sigcache.cpp \
	shutdown.cpp timedata.cpp torcontrol.cpp txdb.cpp \
	txmempool.cpp ui_interface.cpp validation.cpp \
	validationinterface.cpp versionbits.cpp addrdb.h addrman.h \
	attributes.h banman.h base58.h bech32.h bloom.h \
	blockencodings.h blockfilter.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkqueue.h \
	clientversion.h coins.h compat.h compat/assumptions.h \
	compat/byteswap.h compat/cpuid.h compat/endian.h \
	compat/sanity.h compressor.h consensus/consensus.h \
	consensus/tx_check.h consensus/tx_verify.h core_io.h \
	core_memusage.h cuckoocache.h flatfile.h fs.h httprpc.h \
	httpserver.h index/base.h index/blockfilterindex.h \
	index/txindex.h indirectmap.h init.h interfaces/chain.h \
	interfaces/handler.h interfaces/node.h interfaces/wallet.h \
	key.h key_io.h dbwrapper.h limitedmap.h logging.h \
	logging/timer.h memusage.h merkleblock.h miner.h net.h \
	net_permissions.h net_processing.h net_types.h netaddress.h \
	netbase.h netmessagemaker.h node/coin.h node/coinstats.h \
	node/context.h node/psbt.h node/transaction.h \
	node/utxo_snapshot.h noui.h optional.h outputtype.h \
	policy/feerate.h policy/fees.h policy/policy.h policy/rbf.h \
	policy/settings.h pow.h protocol.h psbt.h random.h randomenv.h \
	reverse_iterator.h rpc/blockchain.h rpc/client.h \
	rpc/protocol.h rpc/rawtransaction_util.h rpc/register.h \
	rpc/request.h rpc/server.h rpc/util.h scheduler.h \
	script/descriptor.h script/keyorigin.h script/sigcache.h \
	script/sign.h script/signingprovider.h script/standard.h \
	shutdown.h streams.h support/allocators/secure.h \
	support/allocators/zeroafterfree.h support/cleanse.h \
	support/events.h support/lockedpool.h sync.h threadsafety.h \
	threadinterrupt.h timedata.h torcontrol.h txdb.h txmempool.h \
	ui_interface.h undo.h util/asmap.h util/bip32.h \
	util/bytevectorhash.h util/check.h util/error.h util/fees.h \
	util/spanparsing.h util/system.h util/macros.h util/memory.h \
	util/message.h util/moneystr.h util/rbf.h util/settings.h \
	util/string.h util/threadnames.h util/time.h \
	util/translation.h util/url.h util/vector.h validation.h \
	validationinterface.h versionbits.h versionbitsinfo.h \
	walletinitinterface.h wallet/coincontrol.h wallet/crypter.h \
	wallet/db.h wallet/feebumper.h wallet/fees.h wallet/ismine.h \
	wallet/load.h wallet/rpcwallet.h wallet/scriptpubkeyman.h \
	wallet/wallet.h wallet/walletdb.h wallet/wallettool.h \
	wallet/walletutil.h wallet/coinselection.h warnings.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h wallet/init.cpp dummywallet.cpp
am__objects_5 = wallet/libbitsilver_server_a-init.$(OBJEXT)
#am__objects_6 = libbitsilver_server_a-dummywallet.$(OBJEXT)
am_libbitsilver_server_a_OBJECTS =  \
	libbitsilver_server_a-addrdb.$(OBJEXT) \
	libbitsilver_server_a-addrman.$(OBJEXT) \
	libbitsilver_server_a-banman.$(OBJEXT) \
	libbitsilver_server_a-blockencodings.$(OBJEXT) \
	libbitsilver_server_a-blockfilter.$(OBJEXT) \
	libbitsilver_server_a-chain.$(OBJEXT) \
	consensus/libbitsilver_server_a-tx_verify.$(OBJEXT) \
	libbitsilver_server_a-flatfile.$(OBJEXT) \
	libbitsilver_server_a-httprpc.$(OBJEXT) \
	libbitsilver_server_a-httpserver.$(OBJEXT) \
	index/libbitsilver_server_a-base.$(OBJEXT) \
	index/libbitsilver_server_a-blockfilterindex.$(OBJEXT) \
	index/libbitsilver_server_a-txindex.$(OBJEXT) \
	interfaces/libbitsilver_server_a-chain.$(OBJEXT) \
	interfaces/libbitsilver_server_a-node.$(OBJEXT) \
	libbitsilver_server_a-init.$(OBJEXT) \
	libbitsilver_server_a-dbwrapper.$(OBJEXT) \
	libbitsilver_server_a-miner.$(OBJEXT) \
	libbitsilver_server_a-net.$(OBJEXT) \
	libbitsilver_server_a-net_processing.$(OBJEXT) \
	node/libbitsilver_server_a-coin.$(OBJEXT) \
	node/libbitsilver_server_a-coinstats.$(OBJEXT) \
	node/libbitsilver_server_a-context.$(OBJEXT) \
	node/libbitsilver_server_a-psbt.$(OBJEXT) \
	node/libbitsilver_server_a-transaction.$(OBJEXT) \
	libbitsilver_server_a-noui.$(OBJEXT) \
	policy/libbitsilver_server_a-fees.$(OBJEXT) \
	policy/libbitsilver_server_a-rbf.$(OBJEXT) \
	policy/libbitsilver_server_a-settings.$(OBJEXT) \
	libbitsilver_server_a-pow.$(OBJEXT) \
	libbitsilver_server_a-rest.$(OBJEXT) \
	rpc/libbitsilver_server_a-blockchain.$(OBJEXT) \
	rpc/libbitsilver_server_a-mining.$(OBJEXT) \
	rpc/libbitsilver_server_a-misc.$(OBJEXT) \
	rpc/libbitsilver_server_a-net.$(OBJEXT) \
	rpc/libbitsilver_server_a-rawtransaction.$(OBJEXT) \
	rpc/libbitsilver_server_a-server.$(OBJEXT) \
	script/libbitsilver_server_a-sigcache.$(OBJEXT) \
	libbitsilver_server_a-shutdown.$(OBJEXT) \
	libbitsilver_server_a-timedata.$(OBJEXT) \
	libbitsilver_server_a-torcontrol.$(OBJEXT) \
	libbitsilver_server_a-txdb.$(OBJEXT) \
	libbitsilver_server_a-txmempool.$(OBJEXT) \
	libbitsilver_server_a-ui_interface.$(OBJEXT) \
	libbitsilver_server_a-validation.$(OBJEXT) \
	libbitsilver_server_a-validationinterface.$(OBJEXT) \
	libbitsilver_server_a-versionbits.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6)
libbitsilver_server_a_OBJECTS = $(am_libbitsilver_server_a_OBJECTS)
libbitsilver_util_a_AR = $(AR) $(ARFLAGS)
libbitsilver_util_a_LIBADD =
am__libbitsilver_util_a_SOURCES_DIST = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp \
	compat/glibc_sanity_fdelt.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	interfaces/handler.cpp logging.cpp random.cpp randomenv.cpp \
	rpc/request.cpp support/cleanse.cpp sync.cpp \
	threadinterrupt.cpp util/asmap.cpp util/bip32.cpp \
	util/bytevectorhash.cpp util/error.cpp util/fees.cpp \
	util/system.cpp util/message.cpp util/moneystr.cpp \
	util/rbf.cpp util/settings.cpp util/threadnames.cpp \
	util/spanparsing.cpp util/strencodings.cpp util/string.cpp \
	util/time.cpp util/url.cpp addrdb.h addrman.h attributes.h \
	banman.h base58.h bech32.h bloom.h blockencodings.h \
	blockfilter.h chain.h chainparams.h chainparamsbase.h \
	chainparamsseeds.h checkqueue.h clientversion.h coins.h \
	compat.h compat/assumptions.h compat/byteswap.h compat/cpuid.h \
	compat/endian.h compat/sanity.h compressor.h \
	consensus/consensus.h consensus/tx_check.h \
	consensus/tx_verify.h core_io.h core_memusage.h cuckoocache.h \
	flatfile.h fs.h httprpc.h httpserver.h index/base.h \
	index/blockfilterindex.h index/txindex.h indirectmap.h init.h \
	interfaces/chain.h interfaces/handler.h interfaces/node.h \
	interfaces/wallet.h key.h key_io.h dbwrapper.h limitedmap.h \
	logging.h logging/timer.h memusage.h merkleblock.h miner.h \
	net.h net_permissions.h net_processing.h net_types.h \
	netaddress.h netbase.h netmessagemaker.h node/coin.h \
	node/coinstats.h node/context.h node/psbt.h node/transaction.h \
	node/utxo_snapshot.h noui.h optional.h outputtype.h \
	policy/feerate.h policy/fees.h policy/policy.h policy/rbf.h \
	policy/settings.h pow.h protocol.h psbt.h random.h randomenv.h \
	reverse_iterator.h rpc/blockchain.h rpc/client.h \
	rpc/protocol.h rpc/rawtransaction_util.h rpc/register.h \
	rpc/request.h rpc/server.h rpc/util.h scheduler.h \
	script/descriptor.h script/keyorigin.h script/sigcache.h \
	script/sign.h script/signingprovider.h script/standard.h \
	shutdown.h streams.h support/allocators/secure.h \
	support/allocators/zeroafterfree.h support/cleanse.h \
	support/events.h support/lockedpool.h sync.h threadsafety.h \
	threadinterrupt.h timedata.h torcontrol.h txdb.h txmempool.h \
	ui_interface.h undo.h util/asmap.h util/bip32.h \
	util/bytevectorhash.h util/check.h util/error.h util/fees.h \
	util/spanparsing.h util/system.h util/macros.h util/memory.h \
	util/message.h util/moneystr.h util/rbf.h util/settings.h \
	util/string.h util/threadnames.h util/time.h \
	util/translation.h util/url.h util/vector.h validation.h \
	validationinterface.h versionbits.h versionbitsinfo.h \
	walletinitinterface.h wallet/coincontrol.h wallet/crypter.h \
	wallet/db.h wallet/feebumper.h wallet/fees.h wallet/ismine.h \
	wallet/load.h wallet/rpcwallet.h wallet/scriptpubkeyman.h \
	wallet/wallet.h wallet/walletdb.h wallet/wallettool.h \
	wallet/walletutil.h wallet/coinselection.h warnings.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h compat/glibc_compat.cpp
#am__objects_7 = compat/libbitsilver_util_a-glibc_compat.$(OBJEXT)
am_libbitsilver_util_a_OBJECTS =  \
	support/libbitsilver_util_a-lockedpool.$(OBJEXT) \
	libbitsilver_util_a-chainparamsbase.$(OBJEXT) \
	libbitsilver_util_a-clientversion.$(OBJEXT) \
	compat/libbitsilver_util_a-glibc_sanity_fdelt.$(OBJEXT) \
	compat/libbitsilver_util_a-glibc_sanity.$(OBJEXT) \
	compat/libbitsilver_util_a-glibcxx_sanity.$(OBJEXT) \
	compat/libbitsilver_util_a-strnlen.$(OBJEXT) \
	libbitsilver_util_a-fs.$(OBJEXT) \
	interfaces/libbitsilver_util_a-handler.$(OBJEXT) \
	libbitsilver_util_a-logging.$(OBJEXT) \
	libbitsilver_util_a-random.$(OBJEXT) \
	libbitsilver_util_a-randomenv.$(OBJEXT) \
	rpc/libbitsilver_util_a-request.$(OBJEXT) \
	support/libbitsilver_util_a-cleanse.$(OBJEXT) \
	libbitsilver_util_a-sync.$(OBJEXT) \
	libbitsilver_util_a-threadinterrupt.$(OBJEXT) \
	util/libbitsilver_util_a-asmap.$(OBJEXT) \
	util/libbitsilver_util_a-bip32.$(OBJEXT) \
	util/libbitsilver_util_a-bytevectorhash.$(OBJEXT) \
	util/libbitsilver_util_a-error.$(OBJEXT) \
	util/libbitsilver_util_a-fees.$(OBJEXT) \
	util/libbitsilver_util_a-system.$(OBJEXT) \
	util/libbitsilver_util_a-message.$(OBJEXT) \
	util/libbitsilver_util_a-moneystr.$(OBJEXT) \
	util/libbitsilver_util_a-rbf.$(OBJEXT) \
	util/libbitsilver_util_a-settings.$(OBJEXT) \
	util/libbitsilver_util_a-threadnames.$(OBJEXT) \
	util/libbitsilver_util_a-spanparsing.$(OBJEXT) \
	util/libbitsilver_util_a-strencodings.$(OBJEXT) \
	util/libbitsilver_util_a-string.$(OBJEXT) \
	util/libbitsilver_util_a-time.$(OBJEXT) \
	util/libbitsilver_util_a-url.$(OBJEXT) $(am__objects_4) \
	$(am__objects_7)
nodist_libbitsilver_util_a_OBJECTS =
libbitsilver_util_a_OBJECTS = $(am_libbitsilver_util_a_OBJECTS) \
	$(nodist_libbitsilver_util_a_OBJECTS)
libbitsilver_wallet_a_AR = $(AR) $(ARFLAGS)
libbitsilver_wallet_a_LIBADD =
am_libbitsilver_wallet_a_OBJECTS =  \
	interfaces/libbitsilver_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-coincontrol.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-crypter.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-db.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-feebumper.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-fees.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-load.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-rpcdump.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-rpcwallet.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-scriptpubkeyman.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-walletdb.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-walletutil.$(OBJEXT) \
	wallet/libbitsilver_wallet_a-coinselection.$(OBJEXT) \
	$(am__objects_4)
libbitsilver_wallet_a_OBJECTS = $(am_libbitsilver_wallet_a_OBJECTS)
libbitsilver_wallet_tool_a_AR = $(AR) $(ARFLAGS)
libbitsilver_wallet_tool_a_LIBADD =
am_libbitsilver_wallet_tool_a_OBJECTS =  \
	wallet/libbitsilver_wallet_tool_a-wallettool.$(OBJEXT) \
	$(am__objects_4)
libbitsilver_wallet_tool_a_OBJECTS =  \
	$(am_libbitsilver_wallet_tool_a_OBJECTS)
libbitsilver_zmq_a_AR = $(AR) $(ARFLAGS)
libbitsilver_zmq_a_LIBADD =
am__libbitsilver_zmq_a_SOURCES_DIST = zmq/zmqabstractnotifier.cpp \
	zmq/zmqnotificationinterface.cpp zmq/zmqpublishnotifier.cpp \
	zmq/zmqrpc.cpp
am_libbitsilver_zmq_a_OBJECTS = zmq/libbitsilver_zmq_a-zmqabstractnotifier.$(OBJEXT) \
	zmq/libbitsilver_zmq_a-zmqnotificationinterface.$(OBJEXT) \
	zmq/libbitsilver_zmq_a-zmqpublishnotifier.$(OBJEXT) \
	zmq/libbitsilver_zmq_a-zmqrpc.$(OBJEXT)
libbitsilver_zmq_a_OBJECTS = $(am_libbitsilver_zmq_a_OBJECTS)
libtest_util_a_AR = $(AR) $(ARFLAGS)
libtest_util_a_LIBADD =
am_libtest_util_a_OBJECTS =  \
	test/util/libtest_util_a-blockfilter.$(OBJEXT) \
	test/util/libtest_util_a-logging.$(OBJEXT) \
	test/util/libtest_util_a-mining.$(OBJEXT) \
	test/util/libtest_util_a-setup_common.$(OBJEXT) \
	test/util/libtest_util_a-str.$(OBJEXT) \
	test/util/libtest_util_a-transaction_utils.$(OBJEXT) \
	test/util/libtest_util_a-wallet.$(OBJEXT) $(am__objects_4)
libtest_util_a_OBJECTS = $(am_libtest_util_a_OBJECTS)
qt_libbitsilverqt_a_AR = $(AR) $(ARFLAGS)
qt_libbitsilverqt_a_LIBADD =
am__qt_libbitsilverqt_a_SOURCES_DIST = qt/bantablemodel.cpp \
	qt/bitsilver.cpp qt/bitsilveraddressvalidator.cpp \
	qt/bitsilveramountfield.cpp qt/bitsilvergui.cpp \
	qt/bitsilverunits.cpp qt/clientmodel.cpp qt/csvmodelwriter.cpp \
	qt/guiutil.cpp qt/intro.cpp qt/modaloverlay.cpp \
	qt/networkstyle.cpp qt/notificator.cpp qt/optionsdialog.cpp \
	qt/optionsmodel.cpp qt/peertablemodel.cpp qt/platformstyle.cpp \
	qt/qvalidatedlineedit.cpp qt/qvaluecombobox.cpp \
	qt/rpcconsole.cpp qt/splashscreen.cpp \
	qt/trafficgraphwidget.cpp qt/utilitydialog.cpp \
	qt/winshutdownmonitor.cpp qt/addressbookpage.cpp \
	qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \
	qt/coincontroldialog.cpp qt/coincontroltreewidget.cpp \
	qt/createwalletdialog.cpp qt/editaddressdialog.cpp \
	qt/openuridialog.cpp qt/overviewpage.cpp qt/paymentserver.cpp \
	qt/qrimagewidget.cpp qt/receivecoinsdialog.cpp \
	qt/receiverequestdialog.cpp qt/recentrequeststablemodel.cpp \
	qt/sendcoinsdialog.cpp qt/sendcoinsentry.cpp \
	qt/signverifymessagedialog.cpp qt/transactiondesc.cpp \
	qt/transactiondescdialog.cpp qt/transactionfilterproxy.cpp \
	qt/transactionrecord.cpp qt/transactiontablemodel.cpp \
	qt/transactionview.cpp qt/walletcontroller.cpp \
	qt/walletframe.cpp qt/walletmodel.cpp \
	qt/walletmodeltransaction.cpp qt/walletview.cpp \
	qt/addressbookpage.h qt/addresstablemodel.h \
	qt/askpassphrasedialog.h qt/bantablemodel.h \
	qt/bitsilveraddressvalidator.h qt/bitsilveramountfield.h \
	qt/bitsilver.h qt/bitsilvergui.h qt/bitsilverunits.h \
	qt/clientmodel.h qt/coincontroldialog.h \
	qt/coincontroltreewidget.h qt/createwalletdialog.h \
	qt/csvmodelwriter.h qt/editaddressdialog.h qt/guiconstants.h \
	qt/guiutil.h qt/intro.h qt/macdockiconhandler.h \
	qt/macnotificationhandler.h qt/macos_appnap.h \
	qt/modaloverlay.h qt/networkstyle.h qt/notificator.h \
	qt/openuridialog.h qt/optionsdialog.h qt/optionsmodel.h \
	qt/overviewpage.h qt/paymentserver.h qt/peertablemodel.h \
	qt/platformstyle.h qt/qrimagewidget.h qt/qvalidatedlineedit.h \
	qt/qvaluecombobox.h qt/receivecoinsdialog.h \
	qt/receiverequestdialog.h qt/recentrequeststablemodel.h \
	qt/rpcconsole.h qt/sendcoinsdialog.h qt/sendcoinsentry.h \
	qt/sendcoinsrecipient.h qt/signverifymessagedialog.h \
	qt/splashscreen.h qt/trafficgraphwidget.h qt/transactiondesc.h \
	qt/transactiondescdialog.h qt/transactionfilterproxy.h \
	qt/transactionrecord.h qt/transactiontablemodel.h \
	qt/transactionview.h qt/utilitydialog.h qt/walletcontroller.h \
	qt/walletframe.h qt/walletmodel.h qt/walletmodeltransaction.h \
	qt/walletview.h qt/winshutdownmonitor.h \
	qt/forms/addressbookpage.ui qt/forms/askpassphrasedialog.ui \
	qt/forms/coincontroldialog.ui qt/forms/createwalletdialog.ui \
	qt/forms/editaddressdialog.ui qt/forms/helpmessagedialog.ui \
	qt/forms/intro.ui qt/forms/modaloverlay.ui \
	qt/forms/openuridialog.ui qt/forms/optionsdialog.ui \
	qt/forms/overviewpage.ui qt/forms/receivecoinsdialog.ui \
	qt/forms/receiverequestdialog.ui qt/forms/debugwindow.ui \
	qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \
	qt/forms/signverifymessagedialog.ui \
	qt/forms/transactiondescdialog.ui qt/bitsilver.qrc \
	qt/bitsilver_locale.qrc qt/locale/bitsilver_ar.ts \
	qt/locale/bitsilver_be_BY.ts qt/locale/bitsilver_ca.ts \
	qt/locale/bitsilver_cs.ts qt/locale/bitsilver_cs_CZ.ts \
	qt/locale/bitsilver_cy.ts qt/locale/bitsilver_da.ts \
	qt/locale/bitsilver_de.ts qt/locale/bitsilver_de_DE.ts \
	qt/locale/bitsilver_el.ts qt/locale/bitsilver_el_GR.ts \
	qt/locale/bitsilver_en.ts qt/locale/bitsilver_en_AU.ts \
	qt/locale/bitsilver_en_GB.ts qt/locale/bitsilver_eo.ts \
	qt/locale/bitsilver_es.ts qt/locale/bitsilver_es_CL.ts \
	qt/locale/bitsilver_es_CO.ts qt/locale/bitsilver_es_DO.ts \
	qt/locale/bitsilver_es_ES.ts qt/locale/bitsilver_es_MX.ts \
	qt/locale/bitsilver_es_VE.ts qt/locale/bitsilver_et.ts \
	qt/locale/bitsilver_et_EE.ts qt/locale/bitsilver_eu.ts \
	qt/locale/bitsilver_fa.ts qt/locale/bitsilver_fi.ts \
	qt/locale/bitsilver_fil.ts qt/locale/bitsilver_fr.ts \
	qt/locale/bitsilver_fr_CA.ts qt/locale/bitsilver_fr_FR.ts \
	qt/locale/bitsilver_gl.ts qt/locale/bitsilver_he.ts \
	qt/locale/bitsilver_he_IL.ts qt/locale/bitsilver_hi.ts \
	qt/locale/bitsilver_hr.ts qt/locale/bitsilver_hu.ts \
	qt/locale/bitsilver_hu_HU.ts qt/locale/bitsilver_id.ts \
	qt/locale/bitsilver_id_ID.ts qt/locale/bitsilver_is.ts \
	qt/locale/bitsilver_it.ts qt/locale/bitsilver_it_IT.ts \
	qt/locale/bitsilver_ja.ts qt/locale/bitsilver_ka.ts \
	qt/locale/bitsilver_kk.ts qt/locale/bitsilver_km.ts \
	qt/locale/bitsilver_ko.ts qt/locale/bitsilver_ku_IQ.ts \
	qt/locale/bitsilver_ky.ts qt/locale/bitsilver_la.ts \
	qt/locale/bitsilver_lt.ts qt/locale/bitsilver_lv.ts \
	qt/locale/bitsilver_lv_LV.ts qt/locale/bitsilver_mk.ts \
	qt/locale/bitsilver_ml.ts qt/locale/bitsilver_mn.ts \
	qt/locale/bitsilver_mr_IN.ts qt/locale/bitsilver_ms.ts \
	qt/locale/bitsilver_ms_MY.ts qt/locale/bitsilver_nb.ts \
	qt/locale/bitsilver_ne.ts qt/locale/bitsilver_nl.ts \
	qt/locale/bitsilver_nl_NL.ts qt/locale/bitsilver_pam.ts \
	qt/locale/bitsilver_pl.ts qt/locale/bitsilver_pt.ts \
	qt/locale/bitsilver_pt_BR.ts qt/locale/bitsilver_pt_PT.ts \
	qt/locale/bitsilver_ro.ts qt/locale/bitsilver_ro_RO.ts \
	qt/locale/bitsilver_ru.ts qt/locale/bitsilver_ru_RU.ts \
	qt/locale/bitsilver_si.ts qt/locale/bitsilver_sk.ts \
	qt/locale/bitsilver_sk_SK.ts qt/locale/bitsilver_sl.ts \
	qt/locale/bitsilver_sl_SI.ts qt/locale/bitsilver_sn.ts \
	qt/locale/bitsilver_sr.ts qt/locale/bitsilver_sr@latin.ts \
	qt/locale/bitsilver_sv.ts qt/locale/bitsilver_szl.ts \
	qt/locale/bitsilver_ta.ts qt/locale/bitsilver_te.ts \
	qt/locale/bitsilver_th.ts qt/locale/bitsilver_tr.ts \
	qt/locale/bitsilver_tr_TR.ts qt/locale/bitsilver_uk.ts \
	qt/locale/bitsilver_uk_UA.ts qt/locale/bitsilver_ur.ts \
	qt/locale/bitsilver_uz@Cyrl.ts qt/locale/bitsilver_vi.ts \
	qt/locale/bitsilver_vi_VN.ts qt/locale/bitsilver_yo.ts \
	qt/locale/bitsilver_zh-Hans.ts qt/locale/bitsilver_zh_CN.ts \
	qt/locale/bitsilver_zh_HK.ts qt/locale/bitsilver_zh_TW.ts \
	qt/res/icons/add.png qt/res/icons/address-book.png \
	qt/res/icons/bitsilver.ico qt/res/icons/bitsilver_testnet.ico \
	qt/res/icons/bitsilver.png qt/res/icons/chevron.png \
	qt/res/icons/clock1.png qt/res/icons/clock2.png \
	qt/res/icons/clock3.png qt/res/icons/clock4.png \
	qt/res/icons/clock5.png qt/res/icons/connect0.png \
	qt/res/icons/connect1.png qt/res/icons/connect2.png \
	qt/res/icons/connect3.png qt/res/icons/connect4.png \
	qt/res/icons/edit.png qt/res/icons/editcopy.png \
	qt/res/icons/editpaste.png qt/res/icons/export.png \
	qt/res/icons/eye.png qt/res/icons/eye_minus.png \
	qt/res/icons/eye_plus.png qt/res/icons/fontbigger.png \
	qt/res/icons/fontsmaller.png qt/res/icons/hd_disabled.png \
	qt/res/icons/hd_enabled.png qt/res/icons/history.png \
	qt/res/icons/lock_closed.png qt/res/icons/lock_open.png \
	qt/res/icons/network_disabled.png qt/res/icons/overview.png \
	qt/res/icons/proxy.png qt/res/icons/receive.png \
	qt/res/icons/remove.png qt/res/icons/send.png \
	qt/res/icons/synced.png qt/res/icons/transaction0.png \
	qt/res/icons/transaction2.png \
	qt/res/icons/transaction_abandoned.png \
	qt/res/icons/transaction_conflicted.png \
	qt/res/icons/tx_inout.png qt/res/icons/tx_input.png \
	qt/res/icons/tx_output.png qt/res/icons/tx_mined.png \
	qt/res/icons/warning.png $(wildcard \
	$(srcdir)/qt/res/movies/spinner-*.png) \
	qt/macdockiconhandler.mm qt/macnotificationhandler.mm \
	qt/macos_appnap.mm
am__objects_8 = qt/qt_libbitsilverqt_a-bantablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-bitsilver.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-bitsilveramountfield.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-bitsilvergui.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-bitsilverunits.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-clientmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-csvmodelwriter.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-guiutil.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-intro.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-modaloverlay.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-networkstyle.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-notificator.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-optionsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-optionsmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-peertablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-platformstyle.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-qvaluecombobox.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-rpcconsole.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-splashscreen.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-trafficgraphwidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-utilitydialog.$(OBJEXT)
am__objects_9 = qt/qt_libbitsilverqt_a-winshutdownmonitor.$(OBJEXT)
am__objects_10 =  \
	$(am__objects_9)
am__objects_11 = qt/qt_libbitsilverqt_a-addressbookpage.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-addresstablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-askpassphrasedialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-coincontroldialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-coincontroltreewidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-createwalletdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-editaddressdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-openuridialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-overviewpage.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-paymentserver.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-qrimagewidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-receivecoinsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-receiverequestdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-recentrequeststablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-sendcoinsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-sendcoinsentry.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-signverifymessagedialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactiondesc.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactiondescdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactionfilterproxy.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactionrecord.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactiontablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-transactionview.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-walletcontroller.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-walletframe.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-walletmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-walletmodeltransaction.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-walletview.$(OBJEXT)
am__objects_12 =  \
	$(am__objects_11)
am__objects_13 = $(am__objects_8) $(am__objects_10) \
	$(am__objects_12)
am__objects_14 = qt/qt_libbitsilverqt_a-macdockiconhandler.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-macnotificationhandler.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-macos_appnap.$(OBJEXT)
#am__objects_15 =  \
#	$(am__objects_14)
am_qt_libbitsilverqt_a_OBJECTS = $(am__objects_13) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_4) $(am__objects_4) \
	$(am__objects_15)
am__objects_16 = qt/qt_libbitsilverqt_a-moc_addressbookpage.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_addresstablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_createwalletdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bantablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bitsilver.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bitsilvergui.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_bitsilverunits.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_clientmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_coincontroldialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_csvmodelwriter.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_editaddressdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_guiutil.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_intro.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_macdockiconhandler.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_macnotificationhandler.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_modaloverlay.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_notificator.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_openuridialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_optionsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_optionsmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_overviewpage.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_peertablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_paymentserver.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_qrimagewidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_qvaluecombobox.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_receiverequestdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_rpcconsole.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_sendcoinsentry.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_splashscreen.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_transactiondesc.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_transactiondescdialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_transactiontablemodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_transactionview.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_utilitydialog.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_walletcontroller.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_walletframe.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_walletmodel.$(OBJEXT) \
	qt/qt_libbitsilverqt_a-moc_walletview.$(OBJEXT)
am__objects_17 = qt/qt_libbitsilverqt_a-qrc_bitsilver.$(OBJEXT)
am__objects_18 = qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.$(OBJEXT)
nodist_qt_libbitsilverqt_a_OBJECTS =  \
	$(am__objects_16) $(am__objects_4) \
	$(am__objects_17) $(am__objects_18)
qt_libbitsilverqt_a_OBJECTS = $(am_qt_libbitsilverqt_a_OBJECTS) \
	$(nodist_qt_libbitsilverqt_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libbitsilverconsensus_la_DEPENDENCIES =  \
	$(LIBSECP256K1)
am__libbitsilverconsensus_la_SOURCES_DIST = support/cleanse.cpp \
	crypto/aes.cpp crypto/aes.h crypto/chacha_poly_aead.h \
	crypto/chacha_poly_aead.cpp crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/hkdf_sha256_32.cpp \
	crypto/hkdf_sha256_32.h crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/poly1305.h crypto/poly1305.cpp \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/siphash.cpp \
	crypto/siphash.h crypto/sha256_sse4.cpp amount.h \
	arith_uint256.cpp arith_uint256.h consensus/merkle.cpp \
	consensus/merkle.h consensus/params.h consensus/tx_check.cpp \
	consensus/validation.h hash.cpp hash.h prevector.h \
	primitives/block.cpp primitives/block.h \
	primitives/transaction.cpp primitives/transaction.h pubkey.cpp \
	pubkey.h script/bitsilverconsensus.cpp script/interpreter.cpp \
	script/interpreter.h script/script.cpp script/script.h \
	script/script_error.cpp script/script_error.h serialize.h \
	span.h tinyformat.h uint256.cpp uint256.h \
	util/strencodings.cpp util/strencodings.h version.h \
	compat/glibc_compat.cpp
am__objects_19 =  \
	crypto/libbitsilverconsensus_la-sha256_sse4.lo
am__objects_20 = crypto/libbitsilverconsensus_la-aes.lo \
	crypto/libbitsilverconsensus_la-chacha_poly_aead.lo \
	crypto/libbitsilverconsensus_la-chacha20.lo \
	crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo \
	crypto/libbitsilverconsensus_la-hmac_sha256.lo \
	crypto/libbitsilverconsensus_la-hmac_sha512.lo \
	crypto/libbitsilverconsensus_la-poly1305.lo \
	crypto/libbitsilverconsensus_la-ripemd160.lo \
	crypto/libbitsilverconsensus_la-sha1.lo \
	crypto/libbitsilverconsensus_la-sha256.lo \
	crypto/libbitsilverconsensus_la-sha512.lo \
	crypto/libbitsilverconsensus_la-siphash.lo $(am__objects_19)
am__objects_21 = libbitsilverconsensus_la-arith_uint256.lo \
	consensus/libbitsilverconsensus_la-merkle.lo \
	consensus/libbitsilverconsensus_la-tx_check.lo \
	libbitsilverconsensus_la-hash.lo \
	primitives/libbitsilverconsensus_la-block.lo \
	primitives/libbitsilverconsensus_la-transaction.lo \
	libbitsilverconsensus_la-pubkey.lo \
	script/libbitsilverconsensus_la-bitsilverconsensus.lo \
	script/libbitsilverconsensus_la-interpreter.lo \
	script/libbitsilverconsensus_la-script.lo \
	script/libbitsilverconsensus_la-script_error.lo \
	libbitsilverconsensus_la-uint256.lo \
	util/libbitsilverconsensus_la-strencodings.lo
#am__objects_22 = compat/libbitsilverconsensus_la-glibc_compat.lo
am_libbitsilverconsensus_la_OBJECTS = support/libbitsilverconsensus_la-cleanse.lo \
	$(am__objects_20) $(am__objects_21) \
	$(am__objects_22)
libbitsilverconsensus_la_OBJECTS =  \
	$(am_libbitsilverconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbitsilverconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbitsilverconsensus_la_LDFLAGS) $(LDFLAGS) -o $@
am_libbitsilverconsensus_la_rpath = -rpath \
	$(libdir)
am__EXEEXT_1 = bitsilverd$(EXEEXT)
am__EXEEXT_2 = bitsilver-cli$(EXEEXT)
am__EXEEXT_3 = bitsilver-tx$(EXEEXT)
am__EXEEXT_4 = bitsilver-wallet$(EXEEXT)
am__EXEEXT_5 = test/test_bitsilver$(EXEEXT)
am__EXEEXT_6 = bench/bench_bitsilver$(EXEEXT)
am__EXEEXT_7 = qt/bitsilver-qt$(EXEEXT)
am__EXEEXT_8 =  \
	qt/test/test_bitsilver-qt$(EXEEXT)
am__EXEEXT_9 =  \
	test/fuzz/addr_info_deserialize$(EXEEXT) \
	test/fuzz/address_deserialize$(EXEEXT) \
	test/fuzz/addrman_deserialize$(EXEEXT) \
	test/fuzz/asmap$(EXEEXT) \
	test/fuzz/banentry_deserialize$(EXEEXT) \
	test/fuzz/base_encode_decode$(EXEEXT) \
	test/fuzz/bech32$(EXEEXT) \
	test/fuzz/block$(EXEEXT) \
	test/fuzz/block_deserialize$(EXEEXT) \
	test/fuzz/block_file_info_deserialize$(EXEEXT) \
	test/fuzz/block_filter_deserialize$(EXEEXT) \
	test/fuzz/block_header_and_short_txids_deserialize$(EXEEXT) \
	test/fuzz/blockheader_deserialize$(EXEEXT) \
	test/fuzz/blocklocator_deserialize$(EXEEXT) \
	test/fuzz/blockmerkleroot$(EXEEXT) \
	test/fuzz/blocktransactions_deserialize$(EXEEXT) \
	test/fuzz/blocktransactionsrequest_deserialize$(EXEEXT) \
	test/fuzz/blockundo_deserialize$(EXEEXT) \
	test/fuzz/bloom_filter$(EXEEXT) \
	test/fuzz/bloomfilter_deserialize$(EXEEXT) \
	test/fuzz/coins_deserialize$(EXEEXT) \
	test/fuzz/decode_tx$(EXEEXT) \
	test/fuzz/descriptor_parse$(EXEEXT) \
	test/fuzz/diskblockindex_deserialize$(EXEEXT) \
	test/fuzz/eval_script$(EXEEXT) \
	test/fuzz/fee_rate_deserialize$(EXEEXT) \
	test/fuzz/flat_file_pos_deserialize$(EXEEXT) \
	test/fuzz/float$(EXEEXT) \
	test/fuzz/hex$(EXEEXT) \
	test/fuzz/integer$(EXEEXT) \
	test/fuzz/inv_deserialize$(EXEEXT) \
	test/fuzz/key$(EXEEXT) \
	test/fuzz/key_io$(EXEEXT) \
	test/fuzz/key_origin_info_deserialize$(EXEEXT) \
	test/fuzz/locale$(EXEEXT) \
	test/fuzz/merkle_block_deserialize$(EXEEXT) \
	test/fuzz/messageheader_deserialize$(EXEEXT) \
	test/fuzz/netaddr_deserialize$(EXEEXT) \
	test/fuzz/netaddress$(EXEEXT) \
	test/fuzz/out_point_deserialize$(EXEEXT) \
	test/fuzz/p2p_transport_deserializer$(EXEEXT) \
	test/fuzz/parse_hd_keypath$(EXEEXT) \
	test/fuzz/parse_iso8601$(EXEEXT) \
	test/fuzz/parse_numbers$(EXEEXT) \
	test/fuzz/parse_script$(EXEEXT) \
	test/fuzz/parse_univalue$(EXEEXT) \
	test/fuzz/partial_merkle_tree_deserialize$(EXEEXT) \
	test/fuzz/partially_signed_transaction_deserialize$(EXEEXT) \
	test/fuzz/prefilled_transaction_deserialize$(EXEEXT) \
	test/fuzz/process_message$(EXEEXT) \
	test/fuzz/process_message_addr$(EXEEXT) \
	test/fuzz/process_message_block$(EXEEXT) \
	test/fuzz/process_message_blocktxn$(EXEEXT) \
	test/fuzz/process_message_cmpctblock$(EXEEXT) \
	test/fuzz/process_message_feefilter$(EXEEXT) \
	test/fuzz/process_message_filteradd$(EXEEXT) \
	test/fuzz/process_message_filterclear$(EXEEXT) \
	test/fuzz/process_message_filterload$(EXEEXT) \
	test/fuzz/process_message_getaddr$(EXEEXT) \
	test/fuzz/process_message_getblocks$(EXEEXT) \
	test/fuzz/process_message_getblocktxn$(EXEEXT) \
	test/fuzz/process_message_getdata$(EXEEXT) \
	test/fuzz/process_message_getheaders$(EXEEXT) \
	test/fuzz/process_message_headers$(EXEEXT) \
	test/fuzz/process_message_inv$(EXEEXT) \
	test/fuzz/process_message_mempool$(EXEEXT) \
	test/fuzz/process_message_notfound$(EXEEXT) \
	test/fuzz/process_message_ping$(EXEEXT) \
	test/fuzz/process_message_pong$(EXEEXT) \
	test/fuzz/process_message_sendcmpct$(EXEEXT) \
	test/fuzz/process_message_sendheaders$(EXEEXT) \
	test/fuzz/process_message_tx$(EXEEXT) \
	test/fuzz/process_message_verack$(EXEEXT) \
	test/fuzz/process_message_version$(EXEEXT) \
	test/fuzz/psbt$(EXEEXT) \
	test/fuzz/psbt_input_deserialize$(EXEEXT) \
	test/fuzz/psbt_output_deserialize$(EXEEXT) \
	test/fuzz/pub_key_deserialize$(EXEEXT) \
	test/fuzz/rolling_bloom_filter$(EXEEXT) \
	test/fuzz/script$(EXEEXT) \
	test/fuzz/script_deserialize$(EXEEXT) \
	test/fuzz/script_flags$(EXEEXT) \
	test/fuzz/script_ops$(EXEEXT) \
	test/fuzz/scriptnum_ops$(EXEEXT) \
	test/fuzz/service_deserialize$(EXEEXT) \
	test/fuzz/snapshotmetadata_deserialize$(EXEEXT) \
	test/fuzz/spanparsing$(EXEEXT) \
	test/fuzz/strprintf$(EXEEXT) \
	test/fuzz/sub_net_deserialize$(EXEEXT) \
	test/fuzz/transaction$(EXEEXT) \
	test/fuzz/tx_in$(EXEEXT) \
	test/fuzz/tx_in_deserialize$(EXEEXT) \
	test/fuzz/tx_out$(EXEEXT) \
	test/fuzz/txoutcompressor_deserialize$(EXEEXT) \
	test/fuzz/txundo_deserialize$(EXEEXT) \
	test/fuzz/uint160_deserialize$(EXEEXT) \
	test/fuzz/uint256_deserialize$(EXEEXT)
#am__EXEEXT_10 = $(am__EXEEXT_9)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__bench_bench_bitsilver_SOURCES_DIST = bench/data/block413567.raw \
	bench/bench_bitsilver.cpp bench/bench.cpp bench/bench.h \
	bench/block_assemble.cpp bench/checkblock.cpp \
	bench/checkqueue.cpp bench/data.h bench/data.cpp \
	bench/duplicate_inputs.cpp bench/examples.cpp \
	bench/rollingbloom.cpp bench/chacha20.cpp \
	bench/chacha_poly_aead.cpp bench/crypto_hash.cpp \
	bench/ccoins_caching.cpp bench/gcs_filter.cpp \
	bench/merkle_root.cpp bench/mempool_eviction.cpp \
	bench/mempool_stress.cpp bench/rpc_blockchain.cpp \
	bench/rpc_mempool.cpp bench/util_time.cpp \
	bench/verify_script.cpp bench/base58.cpp bench/bech32.cpp \
	bench/lockedpool.cpp bench/poly1305.cpp bench/prevector.cpp \
	bench/coin_selection.cpp bench/wallet_balance.cpp
am__objects_23 = bench/bench_bench_bitsilver-coin_selection.$(OBJEXT) \
	bench/bench_bench_bitsilver-wallet_balance.$(OBJEXT)
am_bench_bench_bitsilver_OBJECTS =  \
	$(am__objects_4) \
	bench/bench_bench_bitsilver-bench_bitsilver.$(OBJEXT) \
	bench/bench_bench_bitsilver-bench.$(OBJEXT) \
	bench/bench_bench_bitsilver-block_assemble.$(OBJEXT) \
	bench/bench_bench_bitsilver-checkblock.$(OBJEXT) \
	bench/bench_bench_bitsilver-checkqueue.$(OBJEXT) \
	bench/bench_bench_bitsilver-data.$(OBJEXT) \
	bench/bench_bench_bitsilver-duplicate_inputs.$(OBJEXT) \
	bench/bench_bench_bitsilver-examples.$(OBJEXT) \
	bench/bench_bench_bitsilver-rollingbloom.$(OBJEXT) \
	bench/bench_bench_bitsilver-chacha20.$(OBJEXT) \
	bench/bench_bench_bitsilver-chacha_poly_aead.$(OBJEXT) \
	bench/bench_bench_bitsilver-crypto_hash.$(OBJEXT) \
	bench/bench_bench_bitsilver-ccoins_caching.$(OBJEXT) \
	bench/bench_bench_bitsilver-gcs_filter.$(OBJEXT) \
	bench/bench_bench_bitsilver-merkle_root.$(OBJEXT) \
	bench/bench_bench_bitsilver-mempool_eviction.$(OBJEXT) \
	bench/bench_bench_bitsilver-mempool_stress.$(OBJEXT) \
	bench/bench_bench_bitsilver-rpc_blockchain.$(OBJEXT) \
	bench/bench_bench_bitsilver-rpc_mempool.$(OBJEXT) \
	bench/bench_bench_bitsilver-util_time.$(OBJEXT) \
	bench/bench_bench_bitsilver-verify_script.$(OBJEXT) \
	bench/bench_bench_bitsilver-base58.$(OBJEXT) \
	bench/bench_bench_bitsilver-bech32.$(OBJEXT) \
	bench/bench_bench_bitsilver-lockedpool.$(OBJEXT) \
	bench/bench_bench_bitsilver-poly1305.$(OBJEXT) \
	bench/bench_bench_bitsilver-prevector.$(OBJEXT) \
	$(am__objects_23)
am__objects_24 = $(am__objects_4)
nodist_bench_bench_bitsilver_OBJECTS =  \
	$(am__objects_24)
bench_bench_bitsilver_OBJECTS = $(am_bench_bench_bitsilver_OBJECTS) \
	$(nodist_bench_bench_bitsilver_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_30)
am__DEPENDENCIES_2 = $(am__append_31)
am__DEPENDENCIES_3 =
#am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3)
am__DEPENDENCIES_4 = univalue/libunivalue.la
am__DEPENDENCIES_5 =  \
	$(LIBBITSILVER_ZMQ) \
	$(am__DEPENDENCIES_3)
bench_bench_bitsilver_DEPENDENCIES =  \
	$(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_WALLET) \
	$(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBTEST_UTIL) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bench_bench_bitsilver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) \
	$(bench_bench_bitsilver_LDFLAGS) $(LDFLAGS) -o $@
am__bitsilver_cli_SOURCES_DIST = bitsilver-cli.cpp \
	bitsilver-cli-res.rc
am__objects_25 = bitsilver-cli-res.$(OBJEXT)
am_bitsilver_cli_OBJECTS = bitsilver_cli-bitsilver-cli.$(OBJEXT) \
	$(am__objects_25)
bitsilver_cli_OBJECTS = $(am_bitsilver_cli_OBJECTS)
bitsilver_cli_DEPENDENCIES = $(LIBBITSILVER_CLI) $(am__DEPENDENCIES_4) \
	$(LIBBITSILVER_UTIL) $(LIBBITSILVER_CRYPTO) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bitsilver_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bitsilver_cli_CXXFLAGS) $(CXXFLAGS) $(bitsilver_cli_LDFLAGS) \
	$(LDFLAGS) -o $@
am__bitsilver_tx_SOURCES_DIST = bitsilver-tx.cpp bitsilver-tx-res.rc
am__objects_26 = bitsilver-tx-res.$(OBJEXT)
am_bitsilver_tx_OBJECTS = bitsilver_tx-bitsilver-tx.$(OBJEXT) \
	$(am__objects_26)
bitsilver_tx_OBJECTS = $(am_bitsilver_tx_OBJECTS)
bitsilver_tx_DEPENDENCIES = $(am__DEPENDENCIES_4) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) $(LIBBITSILVER_CRYPTO) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3)
bitsilver_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitsilver_tx_CXXFLAGS) \
	$(CXXFLAGS) $(bitsilver_tx_LDFLAGS) $(LDFLAGS) -o $@
am__bitsilver_wallet_SOURCES_DIST = bitsilver-wallet.cpp \
	bitsilver-wallet-res.rc
am__objects_27 = bitsilver-wallet-res.$(OBJEXT)
am_bitsilver_wallet_OBJECTS =  \
	bitsilver_wallet-bitsilver-wallet.$(OBJEXT) $(am__objects_27)
bitsilver_wallet_OBJECTS = $(am_bitsilver_wallet_OBJECTS)
bitsilver_wallet_DEPENDENCIES = $(LIBBITSILVER_WALLET_TOOL) \
	$(LIBBITSILVER_WALLET) $(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_CONSENSUS) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CRYPTO) $(LIBBITSILVER_ZMQ) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
bitsilver_wallet_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bitsilver_wallet_CXXFLAGS) $(CXXFLAGS) \
	$(bitsilver_wallet_LDFLAGS) $(LDFLAGS) -o $@
am__bitsilverd_SOURCES_DIST = bitsilverd.cpp bitsilverd-res.rc
am__objects_28 = bitsilverd-res.$(OBJEXT)
am_bitsilverd_OBJECTS = bitsilverd-bitsilverd.$(OBJEXT) \
	$(am__objects_28)
bitsilverd_OBJECTS = $(am_bitsilverd_OBJECTS)
bitsilverd_DEPENDENCIES = $(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_WALLET) $(LIBBITSILVER_COMMON) \
	$(am__DEPENDENCIES_4) $(LIBBITSILVER_UTIL) $(LIBBITSILVER_ZMQ) \
	$(LIBBITSILVER_CONSENSUS) $(LIBBITSILVER_CRYPTO) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bitsilverd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitsilverd_CXXFLAGS) \
	$(CXXFLAGS) $(bitsilverd_LDFLAGS) $(LDFLAGS) -o $@
am__qt_bitsilver_qt_SOURCES_DIST = qt/main.cpp \
	qt/res/bitsilver-qt-res.rc
am__objects_29 = qt/res/bitsilver-qt-res.$(OBJEXT)
am__objects_30 =  \
	$(am__objects_29)
am_qt_bitsilver_qt_OBJECTS =  \
	qt/qt_bitsilver_qt-main.$(OBJEXT) \
	$(am__objects_30)
qt_bitsilver_qt_OBJECTS = $(am_qt_bitsilver_qt_OBJECTS)
am__DEPENDENCIES_6 =  \
	$(LIBBITSILVER_ZMQ) \
	$(am__DEPENDENCIES_3)
qt_bitsilver_qt_DEPENDENCIES = qt/libbitsilverqt.a \
	$(LIBBITSILVER_SERVER) $(am__append_58) \
	$(am__DEPENDENCIES_6) $(LIBBITSILVER_CLI) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
qt_bitsilver_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(qt_bitsilver_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(qt_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_bitsilver_qt_LDFLAGS) $(LDFLAGS) -o $@
am__qt_test_test_bitsilver_qt_SOURCES_DIST = qt/test/apptests.cpp \
	qt/test/compattests.cpp qt/test/rpcnestedtests.cpp \
	qt/test/test_main.cpp qt/test/uritests.cpp qt/test/util.cpp \
	qt/test/addressbooktests.h qt/test/apptests.h \
	qt/test/compattests.h qt/test/rpcnestedtests.h \
	qt/test/uritests.h qt/test/util.h qt/test/wallettests.h \
	qt/test/addressbooktests.cpp qt/test/wallettests.cpp \
	wallet/test/wallet_test_fixture.cpp
am__objects_31 = qt/test/qt_test_test_bitsilver_qt-addressbooktests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-wallettests.$(OBJEXT) \
	wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.$(OBJEXT)
am_qt_test_test_bitsilver_qt_OBJECTS = qt/test/qt_test_test_bitsilver_qt-apptests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-compattests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-test_main.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-uritests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-util.$(OBJEXT) \
	$(am__objects_4) $(am__objects_31)
am__objects_32 = qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-moc_wallettests.$(OBJEXT)
am__objects_33 = qt/test/qt_test_test_bitsilver_qt-moc_apptests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-moc_compattests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.$(OBJEXT) \
	qt/test/qt_test_test_bitsilver_qt-moc_uritests.$(OBJEXT) \
	$(am__objects_32)
nodist_qt_test_test_bitsilver_qt_OBJECTS =  \
	$(am__objects_33)
qt_test_test_bitsilver_qt_OBJECTS =  \
	$(am_qt_test_test_bitsilver_qt_OBJECTS) \
	$(nodist_qt_test_test_bitsilver_qt_OBJECTS)
am__DEPENDENCIES_7 =  \
	$(LIBBITSILVER_ZMQ) \
	$(am__DEPENDENCIES_3)
qt_test_test_bitsilver_qt_DEPENDENCIES =  \
	$(LIBBITSILVERQT) $(LIBBITSILVER_SERVER) \
	$(LIBTEST_UTIL) $(am__append_65) \
	$(am__DEPENDENCIES_7) \
	$(LIBBITSILVER_CLI) \
	$(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) \
	$(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
qt_test_test_bitsilver_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_test_test_bitsilver_qt_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_addr_info_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_34 = test/fuzz/test_fuzz_addr_info_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_addr_info_deserialize_OBJECTS =  \
#	$(am__objects_34) \
#	test/fuzz/test_fuzz_addr_info_deserialize-deserialize.$(OBJEXT)
test_fuzz_addr_info_deserialize_OBJECTS =  \
	$(am_test_fuzz_addr_info_deserialize_OBJECTS)
am__DEPENDENCIES_8 = $(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBTEST_UTIL) $(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBBITSILVER_CLI) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_2) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
#test_fuzz_addr_info_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_addr_info_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_addr_info_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_address_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_35 = test/fuzz/test_fuzz_address_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_address_deserialize_OBJECTS =  \
#	$(am__objects_35) \
#	test/fuzz/test_fuzz_address_deserialize-deserialize.$(OBJEXT)
test_fuzz_address_deserialize_OBJECTS =  \
	$(am_test_fuzz_address_deserialize_OBJECTS)
#test_fuzz_address_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_address_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_address_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_addrman_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_36 = test/fuzz/test_fuzz_addrman_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_addrman_deserialize_OBJECTS =  \
#	$(am__objects_36) \
#	test/fuzz/test_fuzz_addrman_deserialize-deserialize.$(OBJEXT)
test_fuzz_addrman_deserialize_OBJECTS =  \
	$(am_test_fuzz_addrman_deserialize_OBJECTS)
#test_fuzz_addrman_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_addrman_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_addrman_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_asmap_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/asmap.cpp
am__objects_37 =  \
	test/fuzz/test_fuzz_asmap-fuzz.$(OBJEXT)
#am_test_fuzz_asmap_OBJECTS =  \
#	$(am__objects_37) \
#	test/fuzz/test_fuzz_asmap-asmap.$(OBJEXT)
test_fuzz_asmap_OBJECTS = $(am_test_fuzz_asmap_OBJECTS)
#test_fuzz_asmap_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_asmap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_asmap_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_banentry_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_38 = test/fuzz/test_fuzz_banentry_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_banentry_deserialize_OBJECTS =  \
#	$(am__objects_38) \
#	test/fuzz/test_fuzz_banentry_deserialize-deserialize.$(OBJEXT)
test_fuzz_banentry_deserialize_OBJECTS =  \
	$(am_test_fuzz_banentry_deserialize_OBJECTS)
#test_fuzz_banentry_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_banentry_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_banentry_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_base_encode_decode_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/base_encode_decode.cpp
am__objects_39 = test/fuzz/test_fuzz_base_encode_decode-fuzz.$(OBJEXT)
#am_test_fuzz_base_encode_decode_OBJECTS =  \
#	$(am__objects_39) \
#	test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.$(OBJEXT)
test_fuzz_base_encode_decode_OBJECTS =  \
	$(am_test_fuzz_base_encode_decode_OBJECTS)
#test_fuzz_base_encode_decode_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_base_encode_decode_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_base_encode_decode_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_bech32_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/bech32.cpp
am__objects_40 =  \
	test/fuzz/test_fuzz_bech32-fuzz.$(OBJEXT)
#am_test_fuzz_bech32_OBJECTS =  \
#	$(am__objects_40) \
#	test/fuzz/test_fuzz_bech32-bech32.$(OBJEXT)
test_fuzz_bech32_OBJECTS = $(am_test_fuzz_bech32_OBJECTS)
#test_fuzz_bech32_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_bech32_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_bech32_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_block_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/block.cpp
am__objects_41 =  \
	test/fuzz/test_fuzz_block-fuzz.$(OBJEXT)
#am_test_fuzz_block_OBJECTS =  \
#	$(am__objects_41) \
#	test/fuzz/test_fuzz_block-block.$(OBJEXT)
test_fuzz_block_OBJECTS = $(am_test_fuzz_block_OBJECTS)
#test_fuzz_block_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_block_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_block_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_block_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_42 = test/fuzz/test_fuzz_block_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_block_deserialize_OBJECTS =  \
#	$(am__objects_42) \
#	test/fuzz/test_fuzz_block_deserialize-deserialize.$(OBJEXT)
test_fuzz_block_deserialize_OBJECTS =  \
	$(am_test_fuzz_block_deserialize_OBJECTS)
#test_fuzz_block_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_block_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_block_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_block_file_info_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_43 = test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_block_file_info_deserialize_OBJECTS =  \
#	$(am__objects_43) \
#	test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.$(OBJEXT)
test_fuzz_block_file_info_deserialize_OBJECTS =  \
	$(am_test_fuzz_block_file_info_deserialize_OBJECTS)
#test_fuzz_block_file_info_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_block_file_info_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_block_file_info_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_block_filter_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_44 = test/fuzz/test_fuzz_block_filter_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_block_filter_deserialize_OBJECTS =  \
#	$(am__objects_44) \
#	test/fuzz/test_fuzz_block_filter_deserialize-deserialize.$(OBJEXT)
test_fuzz_block_filter_deserialize_OBJECTS =  \
	$(am_test_fuzz_block_filter_deserialize_OBJECTS)
#test_fuzz_block_filter_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_block_filter_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_block_filter_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_block_filter_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_block_header_and_short_txids_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_45 = test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_block_header_and_short_txids_deserialize_OBJECTS =  \
#	$(am__objects_45) \
#	test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.$(OBJEXT)
test_fuzz_block_header_and_short_txids_deserialize_OBJECTS = $(am_test_fuzz_block_header_and_short_txids_deserialize_OBJECTS)
#test_fuzz_block_header_and_short_txids_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_block_header_and_short_txids_deserialize_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) \
	$(CXXFLAGS) \
	$(test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_blockheader_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_46 = test/fuzz/test_fuzz_blockheader_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_blockheader_deserialize_OBJECTS =  \
#	$(am__objects_46) \
#	test/fuzz/test_fuzz_blockheader_deserialize-deserialize.$(OBJEXT)
test_fuzz_blockheader_deserialize_OBJECTS =  \
	$(am_test_fuzz_blockheader_deserialize_OBJECTS)
#test_fuzz_blockheader_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blockheader_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_blockheader_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_blockheader_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_blocklocator_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_47 = test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_blocklocator_deserialize_OBJECTS =  \
#	$(am__objects_47) \
#	test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.$(OBJEXT)
test_fuzz_blocklocator_deserialize_OBJECTS =  \
	$(am_test_fuzz_blocklocator_deserialize_OBJECTS)
#test_fuzz_blocklocator_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blocklocator_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_blocklocator_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_blockmerkleroot_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_48 = test/fuzz/test_fuzz_blockmerkleroot-fuzz.$(OBJEXT)
#am_test_fuzz_blockmerkleroot_OBJECTS =  \
#	$(am__objects_48) \
#	test/fuzz/test_fuzz_blockmerkleroot-deserialize.$(OBJEXT)
test_fuzz_blockmerkleroot_OBJECTS =  \
	$(am_test_fuzz_blockmerkleroot_OBJECTS)
#test_fuzz_blockmerkleroot_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blockmerkleroot_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_blockmerkleroot_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_blocktransactions_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_49 = test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_blocktransactions_deserialize_OBJECTS =  \
#	$(am__objects_49) \
#	test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.$(OBJEXT)
test_fuzz_blocktransactions_deserialize_OBJECTS =  \
	$(am_test_fuzz_blocktransactions_deserialize_OBJECTS)
#test_fuzz_blocktransactions_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blocktransactions_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_blocktransactions_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_blocktransactionsrequest_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_50 = test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_blocktransactionsrequest_deserialize_OBJECTS =  \
#	$(am__objects_50) \
#	test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.$(OBJEXT)
test_fuzz_blocktransactionsrequest_deserialize_OBJECTS =  \
	$(am_test_fuzz_blocktransactionsrequest_deserialize_OBJECTS)
#test_fuzz_blocktransactionsrequest_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blocktransactionsrequest_deserialize_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) \
	$(CXXFLAGS) \
	$(test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_blockundo_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_51 = test/fuzz/test_fuzz_blockundo_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_blockundo_deserialize_OBJECTS =  \
#	$(am__objects_51) \
#	test/fuzz/test_fuzz_blockundo_deserialize-deserialize.$(OBJEXT)
test_fuzz_blockundo_deserialize_OBJECTS =  \
	$(am_test_fuzz_blockundo_deserialize_OBJECTS)
#test_fuzz_blockundo_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_blockundo_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_blockundo_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_bloom_filter_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/bloom_filter.cpp
am__objects_52 = test/fuzz/test_fuzz_bloom_filter-fuzz.$(OBJEXT)
#am_test_fuzz_bloom_filter_OBJECTS =  \
#	$(am__objects_52) \
#	test/fuzz/test_fuzz_bloom_filter-bloom_filter.$(OBJEXT)
test_fuzz_bloom_filter_OBJECTS = $(am_test_fuzz_bloom_filter_OBJECTS)
#test_fuzz_bloom_filter_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_bloom_filter_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_bloom_filter_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_bloomfilter_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_53 = test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_bloomfilter_deserialize_OBJECTS =  \
#	$(am__objects_53) \
#	test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.$(OBJEXT)
test_fuzz_bloomfilter_deserialize_OBJECTS =  \
	$(am_test_fuzz_bloomfilter_deserialize_OBJECTS)
#test_fuzz_bloomfilter_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_bloomfilter_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_bloomfilter_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_coins_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_54 = test/fuzz/test_fuzz_coins_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_coins_deserialize_OBJECTS =  \
#	$(am__objects_54) \
#	test/fuzz/test_fuzz_coins_deserialize-deserialize.$(OBJEXT)
test_fuzz_coins_deserialize_OBJECTS =  \
	$(am_test_fuzz_coins_deserialize_OBJECTS)
#test_fuzz_coins_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_coins_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_coins_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_decode_tx_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/decode_tx.cpp
am__objects_55 = test/fuzz/test_fuzz_decode_tx-fuzz.$(OBJEXT)
#am_test_fuzz_decode_tx_OBJECTS =  \
#	$(am__objects_55) \
#	test/fuzz/test_fuzz_decode_tx-decode_tx.$(OBJEXT)
test_fuzz_decode_tx_OBJECTS = $(am_test_fuzz_decode_tx_OBJECTS)
#test_fuzz_decode_tx_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_decode_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_decode_tx_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_descriptor_parse_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/descriptor_parse.cpp
am__objects_56 = test/fuzz/test_fuzz_descriptor_parse-fuzz.$(OBJEXT)
#am_test_fuzz_descriptor_parse_OBJECTS =  \
#	$(am__objects_56) \
#	test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.$(OBJEXT)
test_fuzz_descriptor_parse_OBJECTS =  \
	$(am_test_fuzz_descriptor_parse_OBJECTS)
#test_fuzz_descriptor_parse_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_descriptor_parse_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_descriptor_parse_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_diskblockindex_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_57 = test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_diskblockindex_deserialize_OBJECTS =  \
#	$(am__objects_57) \
#	test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.$(OBJEXT)
test_fuzz_diskblockindex_deserialize_OBJECTS =  \
	$(am_test_fuzz_diskblockindex_deserialize_OBJECTS)
#test_fuzz_diskblockindex_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_diskblockindex_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_diskblockindex_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_eval_script_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/eval_script.cpp
am__objects_58 = test/fuzz/test_fuzz_eval_script-fuzz.$(OBJEXT)
#am_test_fuzz_eval_script_OBJECTS =  \
#	$(am__objects_58) \
#	test/fuzz/test_fuzz_eval_script-eval_script.$(OBJEXT)
test_fuzz_eval_script_OBJECTS = $(am_test_fuzz_eval_script_OBJECTS)
#test_fuzz_eval_script_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_eval_script_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_eval_script_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_fee_rate_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_59 = test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_fee_rate_deserialize_OBJECTS =  \
#	$(am__objects_59) \
#	test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.$(OBJEXT)
test_fuzz_fee_rate_deserialize_OBJECTS =  \
	$(am_test_fuzz_fee_rate_deserialize_OBJECTS)
#test_fuzz_fee_rate_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_fee_rate_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_fee_rate_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_flat_file_pos_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_60 = test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_flat_file_pos_deserialize_OBJECTS =  \
#	$(am__objects_60) \
#	test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.$(OBJEXT)
test_fuzz_flat_file_pos_deserialize_OBJECTS =  \
	$(am_test_fuzz_flat_file_pos_deserialize_OBJECTS)
#test_fuzz_flat_file_pos_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_flat_file_pos_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_flat_file_pos_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_float_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/float.cpp
am__objects_61 =  \
	test/fuzz/test_fuzz_float-fuzz.$(OBJEXT)
#am_test_fuzz_float_OBJECTS =  \
#	$(am__objects_61) \
#	test/fuzz/test_fuzz_float-float.$(OBJEXT)
test_fuzz_float_OBJECTS = $(am_test_fuzz_float_OBJECTS)
#test_fuzz_float_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_float_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_float_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_hex_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/hex.cpp
am__objects_62 =  \
	test/fuzz/test_fuzz_hex-fuzz.$(OBJEXT)
#am_test_fuzz_hex_OBJECTS =  \
#	$(am__objects_62) \
#	test/fuzz/test_fuzz_hex-hex.$(OBJEXT)
test_fuzz_hex_OBJECTS = $(am_test_fuzz_hex_OBJECTS)
#test_fuzz_hex_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_hex_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) $(test_fuzz_hex_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_integer_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/integer.cpp
am__objects_63 =  \
	test/fuzz/test_fuzz_integer-fuzz.$(OBJEXT)
#am_test_fuzz_integer_OBJECTS =  \
#	$(am__objects_63) \
#	test/fuzz/test_fuzz_integer-integer.$(OBJEXT)
test_fuzz_integer_OBJECTS = $(am_test_fuzz_integer_OBJECTS)
#test_fuzz_integer_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_integer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_integer_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_inv_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_64 = test/fuzz/test_fuzz_inv_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_inv_deserialize_OBJECTS =  \
#	$(am__objects_64) \
#	test/fuzz/test_fuzz_inv_deserialize-deserialize.$(OBJEXT)
test_fuzz_inv_deserialize_OBJECTS =  \
	$(am_test_fuzz_inv_deserialize_OBJECTS)
#test_fuzz_inv_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_inv_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_inv_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_key_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/key.cpp
am__objects_65 =  \
	test/fuzz/test_fuzz_key-fuzz.$(OBJEXT)
#am_test_fuzz_key_OBJECTS =  \
#	$(am__objects_65) \
#	test/fuzz/test_fuzz_key-key.$(OBJEXT)
test_fuzz_key_OBJECTS = $(am_test_fuzz_key_OBJECTS)
#test_fuzz_key_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_key_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) $(test_fuzz_key_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_key_io_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/key_io.cpp
am__objects_66 =  \
	test/fuzz/test_fuzz_key_io-fuzz.$(OBJEXT)
#am_test_fuzz_key_io_OBJECTS =  \
#	$(am__objects_66) \
#	test/fuzz/test_fuzz_key_io-key_io.$(OBJEXT)
test_fuzz_key_io_OBJECTS = $(am_test_fuzz_key_io_OBJECTS)
#test_fuzz_key_io_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_key_io_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_key_io_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_key_origin_info_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_67 = test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_key_origin_info_deserialize_OBJECTS =  \
#	$(am__objects_67) \
#	test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.$(OBJEXT)
test_fuzz_key_origin_info_deserialize_OBJECTS =  \
	$(am_test_fuzz_key_origin_info_deserialize_OBJECTS)
#test_fuzz_key_origin_info_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_key_origin_info_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_key_origin_info_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_locale_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/locale.cpp
am__objects_68 =  \
	test/fuzz/test_fuzz_locale-fuzz.$(OBJEXT)
#am_test_fuzz_locale_OBJECTS =  \
#	$(am__objects_68) \
#	test/fuzz/test_fuzz_locale-locale.$(OBJEXT)
test_fuzz_locale_OBJECTS = $(am_test_fuzz_locale_OBJECTS)
#test_fuzz_locale_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_locale_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_locale_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_merkle_block_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_69 = test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_merkle_block_deserialize_OBJECTS =  \
#	$(am__objects_69) \
#	test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.$(OBJEXT)
test_fuzz_merkle_block_deserialize_OBJECTS =  \
	$(am_test_fuzz_merkle_block_deserialize_OBJECTS)
#test_fuzz_merkle_block_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_merkle_block_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_merkle_block_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_messageheader_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_70 = test/fuzz/test_fuzz_messageheader_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_messageheader_deserialize_OBJECTS =  \
#	$(am__objects_70) \
#	test/fuzz/test_fuzz_messageheader_deserialize-deserialize.$(OBJEXT)
test_fuzz_messageheader_deserialize_OBJECTS =  \
	$(am_test_fuzz_messageheader_deserialize_OBJECTS)
#test_fuzz_messageheader_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_messageheader_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_messageheader_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_messageheader_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_netaddr_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_71 = test/fuzz/test_fuzz_netaddr_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_netaddr_deserialize_OBJECTS =  \
#	$(am__objects_71) \
#	test/fuzz/test_fuzz_netaddr_deserialize-deserialize.$(OBJEXT)
test_fuzz_netaddr_deserialize_OBJECTS =  \
	$(am_test_fuzz_netaddr_deserialize_OBJECTS)
#test_fuzz_netaddr_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_netaddr_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_netaddr_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_netaddress_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/netaddress.cpp
am__objects_72 = test/fuzz/test_fuzz_netaddress-fuzz.$(OBJEXT)
#am_test_fuzz_netaddress_OBJECTS =  \
#	$(am__objects_72) \
#	test/fuzz/test_fuzz_netaddress-netaddress.$(OBJEXT)
test_fuzz_netaddress_OBJECTS = $(am_test_fuzz_netaddress_OBJECTS)
#test_fuzz_netaddress_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_netaddress_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_netaddress_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_out_point_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_73 = test/fuzz/test_fuzz_out_point_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_out_point_deserialize_OBJECTS =  \
#	$(am__objects_73) \
#	test/fuzz/test_fuzz_out_point_deserialize-deserialize.$(OBJEXT)
test_fuzz_out_point_deserialize_OBJECTS =  \
	$(am_test_fuzz_out_point_deserialize_OBJECTS)
#test_fuzz_out_point_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_out_point_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_out_point_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_p2p_transport_deserializer_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/p2p_transport_deserializer.cpp
am__objects_74 = test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.$(OBJEXT)
#am_test_fuzz_p2p_transport_deserializer_OBJECTS =  \
#	$(am__objects_74) \
#	test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.$(OBJEXT)
test_fuzz_p2p_transport_deserializer_OBJECTS =  \
	$(am_test_fuzz_p2p_transport_deserializer_OBJECTS)
#test_fuzz_p2p_transport_deserializer_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_p2p_transport_deserializer_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_p2p_transport_deserializer_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_parse_hd_keypath_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/parse_hd_keypath.cpp
am__objects_75 = test/fuzz/test_fuzz_parse_hd_keypath-fuzz.$(OBJEXT)
#am_test_fuzz_parse_hd_keypath_OBJECTS =  \
#	$(am__objects_75) \
#	test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.$(OBJEXT)
test_fuzz_parse_hd_keypath_OBJECTS =  \
	$(am_test_fuzz_parse_hd_keypath_OBJECTS)
#test_fuzz_parse_hd_keypath_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_parse_hd_keypath_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_parse_hd_keypath_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_parse_iso8601_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/parse_iso8601.cpp
am__objects_76 = test/fuzz/test_fuzz_parse_iso8601-fuzz.$(OBJEXT)
#am_test_fuzz_parse_iso8601_OBJECTS =  \
#	$(am__objects_76) \
#	test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.$(OBJEXT)
test_fuzz_parse_iso8601_OBJECTS =  \
	$(am_test_fuzz_parse_iso8601_OBJECTS)
#test_fuzz_parse_iso8601_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_parse_iso8601_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_parse_iso8601_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_parse_numbers_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/parse_numbers.cpp
am__objects_77 = test/fuzz/test_fuzz_parse_numbers-fuzz.$(OBJEXT)
#am_test_fuzz_parse_numbers_OBJECTS =  \
#	$(am__objects_77) \
#	test/fuzz/test_fuzz_parse_numbers-parse_numbers.$(OBJEXT)
test_fuzz_parse_numbers_OBJECTS =  \
	$(am_test_fuzz_parse_numbers_OBJECTS)
#test_fuzz_parse_numbers_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_parse_numbers_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_parse_numbers_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_parse_script_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/parse_script.cpp
am__objects_78 = test/fuzz/test_fuzz_parse_script-fuzz.$(OBJEXT)
#am_test_fuzz_parse_script_OBJECTS =  \
#	$(am__objects_78) \
#	test/fuzz/test_fuzz_parse_script-parse_script.$(OBJEXT)
test_fuzz_parse_script_OBJECTS = $(am_test_fuzz_parse_script_OBJECTS)
#test_fuzz_parse_script_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_parse_script_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_parse_script_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_parse_univalue_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/parse_univalue.cpp
am__objects_79 = test/fuzz/test_fuzz_parse_univalue-fuzz.$(OBJEXT)
#am_test_fuzz_parse_univalue_OBJECTS =  \
#	$(am__objects_79) \
#	test/fuzz/test_fuzz_parse_univalue-parse_univalue.$(OBJEXT)
test_fuzz_parse_univalue_OBJECTS =  \
	$(am_test_fuzz_parse_univalue_OBJECTS)
#test_fuzz_parse_univalue_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_parse_univalue_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_parse_univalue_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_partial_merkle_tree_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_80 = test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_partial_merkle_tree_deserialize_OBJECTS =  \
#	$(am__objects_80) \
#	test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.$(OBJEXT)
test_fuzz_partial_merkle_tree_deserialize_OBJECTS =  \
	$(am_test_fuzz_partial_merkle_tree_deserialize_OBJECTS)
#test_fuzz_partial_merkle_tree_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_partial_merkle_tree_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) \
	$(CXXFLAGS) \
	$(test_fuzz_partial_merkle_tree_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_partially_signed_transaction_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_81 = test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_partially_signed_transaction_deserialize_OBJECTS =  \
#	$(am__objects_81) \
#	test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.$(OBJEXT)
test_fuzz_partially_signed_transaction_deserialize_OBJECTS = $(am_test_fuzz_partially_signed_transaction_deserialize_OBJECTS)
#test_fuzz_partially_signed_transaction_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_partially_signed_transaction_deserialize_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) \
	$(CXXFLAGS) \
	$(test_fuzz_partially_signed_transaction_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_prefilled_transaction_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_82 = test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_prefilled_transaction_deserialize_OBJECTS =  \
#	$(am__objects_82) \
#	test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.$(OBJEXT)
test_fuzz_prefilled_transaction_deserialize_OBJECTS =  \
	$(am_test_fuzz_prefilled_transaction_deserialize_OBJECTS)
#test_fuzz_prefilled_transaction_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_prefilled_transaction_deserialize_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) \
	$(CXXFLAGS) \
	$(test_fuzz_prefilled_transaction_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_83 = test/fuzz/test_fuzz_process_message-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_OBJECTS =  \
#	$(am__objects_83) \
#	test/fuzz/test_fuzz_process_message-process_message.$(OBJEXT)
test_fuzz_process_message_OBJECTS =  \
	$(am_test_fuzz_process_message_OBJECTS)
#test_fuzz_process_message_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_addr_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_84 = test/fuzz/test_fuzz_process_message_addr-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_addr_OBJECTS =  \
#	$(am__objects_84) \
#	test/fuzz/test_fuzz_process_message_addr-process_message.$(OBJEXT)
test_fuzz_process_message_addr_OBJECTS =  \
	$(am_test_fuzz_process_message_addr_OBJECTS)
#test_fuzz_process_message_addr_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_addr_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_addr_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_block_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_85 = test/fuzz/test_fuzz_process_message_block-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_block_OBJECTS =  \
#	$(am__objects_85) \
#	test/fuzz/test_fuzz_process_message_block-process_message.$(OBJEXT)
test_fuzz_process_message_block_OBJECTS =  \
	$(am_test_fuzz_process_message_block_OBJECTS)
#test_fuzz_process_message_block_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_block_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_block_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_blocktxn_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_86 = test/fuzz/test_fuzz_process_message_blocktxn-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_blocktxn_OBJECTS =  \
#	$(am__objects_86) \
#	test/fuzz/test_fuzz_process_message_blocktxn-process_message.$(OBJEXT)
test_fuzz_process_message_blocktxn_OBJECTS =  \
	$(am_test_fuzz_process_message_blocktxn_OBJECTS)
#test_fuzz_process_message_blocktxn_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_blocktxn_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_blocktxn_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_blocktxn_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_cmpctblock_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_87 = test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_cmpctblock_OBJECTS =  \
#	$(am__objects_87) \
#	test/fuzz/test_fuzz_process_message_cmpctblock-process_message.$(OBJEXT)
test_fuzz_process_message_cmpctblock_OBJECTS =  \
	$(am_test_fuzz_process_message_cmpctblock_OBJECTS)
#test_fuzz_process_message_cmpctblock_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_cmpctblock_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_cmpctblock_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_feefilter_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_88 = test/fuzz/test_fuzz_process_message_feefilter-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_feefilter_OBJECTS =  \
#	$(am__objects_88) \
#	test/fuzz/test_fuzz_process_message_feefilter-process_message.$(OBJEXT)
test_fuzz_process_message_feefilter_OBJECTS =  \
	$(am_test_fuzz_process_message_feefilter_OBJECTS)
#test_fuzz_process_message_feefilter_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_feefilter_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_feefilter_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_feefilter_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_filteradd_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_89 = test/fuzz/test_fuzz_process_message_filteradd-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_filteradd_OBJECTS =  \
#	$(am__objects_89) \
#	test/fuzz/test_fuzz_process_message_filteradd-process_message.$(OBJEXT)
test_fuzz_process_message_filteradd_OBJECTS =  \
	$(am_test_fuzz_process_message_filteradd_OBJECTS)
#test_fuzz_process_message_filteradd_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_filteradd_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_filteradd_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_filteradd_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_filterclear_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_90 = test/fuzz/test_fuzz_process_message_filterclear-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_filterclear_OBJECTS =  \
#	$(am__objects_90) \
#	test/fuzz/test_fuzz_process_message_filterclear-process_message.$(OBJEXT)
test_fuzz_process_message_filterclear_OBJECTS =  \
	$(am_test_fuzz_process_message_filterclear_OBJECTS)
#test_fuzz_process_message_filterclear_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_filterclear_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_filterclear_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_filterclear_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_filterload_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_91 = test/fuzz/test_fuzz_process_message_filterload-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_filterload_OBJECTS =  \
#	$(am__objects_91) \
#	test/fuzz/test_fuzz_process_message_filterload-process_message.$(OBJEXT)
test_fuzz_process_message_filterload_OBJECTS =  \
	$(am_test_fuzz_process_message_filterload_OBJECTS)
#test_fuzz_process_message_filterload_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_filterload_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_filterload_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_filterload_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_getaddr_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_92 = test/fuzz/test_fuzz_process_message_getaddr-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_getaddr_OBJECTS =  \
#	$(am__objects_92) \
#	test/fuzz/test_fuzz_process_message_getaddr-process_message.$(OBJEXT)
test_fuzz_process_message_getaddr_OBJECTS =  \
	$(am_test_fuzz_process_message_getaddr_OBJECTS)
#test_fuzz_process_message_getaddr_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_getaddr_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_getaddr_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_getaddr_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_getblocks_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_93 = test/fuzz/test_fuzz_process_message_getblocks-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_getblocks_OBJECTS =  \
#	$(am__objects_93) \
#	test/fuzz/test_fuzz_process_message_getblocks-process_message.$(OBJEXT)
test_fuzz_process_message_getblocks_OBJECTS =  \
	$(am_test_fuzz_process_message_getblocks_OBJECTS)
#test_fuzz_process_message_getblocks_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_getblocks_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_getblocks_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_getblocks_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_getblocktxn_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_94 = test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_getblocktxn_OBJECTS =  \
#	$(am__objects_94) \
#	test/fuzz/test_fuzz_process_message_getblocktxn-process_message.$(OBJEXT)
test_fuzz_process_message_getblocktxn_OBJECTS =  \
	$(am_test_fuzz_process_message_getblocktxn_OBJECTS)
#test_fuzz_process_message_getblocktxn_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_getblocktxn_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_getblocktxn_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_getdata_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_95 = test/fuzz/test_fuzz_process_message_getdata-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_getdata_OBJECTS =  \
#	$(am__objects_95) \
#	test/fuzz/test_fuzz_process_message_getdata-process_message.$(OBJEXT)
test_fuzz_process_message_getdata_OBJECTS =  \
	$(am_test_fuzz_process_message_getdata_OBJECTS)
#test_fuzz_process_message_getdata_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_getdata_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_getdata_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_getdata_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_getheaders_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_96 = test/fuzz/test_fuzz_process_message_getheaders-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_getheaders_OBJECTS =  \
#	$(am__objects_96) \
#	test/fuzz/test_fuzz_process_message_getheaders-process_message.$(OBJEXT)
test_fuzz_process_message_getheaders_OBJECTS =  \
	$(am_test_fuzz_process_message_getheaders_OBJECTS)
#test_fuzz_process_message_getheaders_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_getheaders_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_getheaders_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_getheaders_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_headers_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_97 = test/fuzz/test_fuzz_process_message_headers-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_headers_OBJECTS =  \
#	$(am__objects_97) \
#	test/fuzz/test_fuzz_process_message_headers-process_message.$(OBJEXT)
test_fuzz_process_message_headers_OBJECTS =  \
	$(am_test_fuzz_process_message_headers_OBJECTS)
#test_fuzz_process_message_headers_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_headers_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_headers_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_headers_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_inv_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_98 = test/fuzz/test_fuzz_process_message_inv-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_inv_OBJECTS =  \
#	$(am__objects_98) \
#	test/fuzz/test_fuzz_process_message_inv-process_message.$(OBJEXT)
test_fuzz_process_message_inv_OBJECTS =  \
	$(am_test_fuzz_process_message_inv_OBJECTS)
#test_fuzz_process_message_inv_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_inv_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_inv_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_mempool_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_99 = test/fuzz/test_fuzz_process_message_mempool-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_mempool_OBJECTS =  \
#	$(am__objects_99) \
#	test/fuzz/test_fuzz_process_message_mempool-process_message.$(OBJEXT)
test_fuzz_process_message_mempool_OBJECTS =  \
	$(am_test_fuzz_process_message_mempool_OBJECTS)
#test_fuzz_process_message_mempool_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_mempool_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_mempool_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_mempool_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_notfound_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_100 = test/fuzz/test_fuzz_process_message_notfound-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_notfound_OBJECTS =  \
#	$(am__objects_100) \
#	test/fuzz/test_fuzz_process_message_notfound-process_message.$(OBJEXT)
test_fuzz_process_message_notfound_OBJECTS =  \
	$(am_test_fuzz_process_message_notfound_OBJECTS)
#test_fuzz_process_message_notfound_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_notfound_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_notfound_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_notfound_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_ping_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_101 = test/fuzz/test_fuzz_process_message_ping-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_ping_OBJECTS =  \
#	$(am__objects_101) \
#	test/fuzz/test_fuzz_process_message_ping-process_message.$(OBJEXT)
test_fuzz_process_message_ping_OBJECTS =  \
	$(am_test_fuzz_process_message_ping_OBJECTS)
#test_fuzz_process_message_ping_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_ping_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_ping_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_pong_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_102 = test/fuzz/test_fuzz_process_message_pong-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_pong_OBJECTS =  \
#	$(am__objects_102) \
#	test/fuzz/test_fuzz_process_message_pong-process_message.$(OBJEXT)
test_fuzz_process_message_pong_OBJECTS =  \
	$(am_test_fuzz_process_message_pong_OBJECTS)
#test_fuzz_process_message_pong_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_pong_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_pong_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_sendcmpct_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_103 = test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_sendcmpct_OBJECTS =  \
#	$(am__objects_103) \
#	test/fuzz/test_fuzz_process_message_sendcmpct-process_message.$(OBJEXT)
test_fuzz_process_message_sendcmpct_OBJECTS =  \
	$(am_test_fuzz_process_message_sendcmpct_OBJECTS)
#test_fuzz_process_message_sendcmpct_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_sendcmpct_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_sendcmpct_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_sendheaders_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_104 = test/fuzz/test_fuzz_process_message_sendheaders-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_sendheaders_OBJECTS =  \
#	$(am__objects_104) \
#	test/fuzz/test_fuzz_process_message_sendheaders-process_message.$(OBJEXT)
test_fuzz_process_message_sendheaders_OBJECTS =  \
	$(am_test_fuzz_process_message_sendheaders_OBJECTS)
#test_fuzz_process_message_sendheaders_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_sendheaders_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_sendheaders_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_sendheaders_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_tx_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/process_message.cpp
am__objects_105 = test/fuzz/test_fuzz_process_message_tx-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_tx_OBJECTS =  \
#	$(am__objects_105) \
#	test/fuzz/test_fuzz_process_message_tx-process_message.$(OBJEXT)
test_fuzz_process_message_tx_OBJECTS =  \
	$(am_test_fuzz_process_message_tx_OBJECTS)
#test_fuzz_process_message_tx_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_process_message_tx_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_process_message_verack_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_106 = test/fuzz/test_fuzz_process_message_verack-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_verack_OBJECTS =  \
#	$(am__objects_106) \
#	test/fuzz/test_fuzz_process_message_verack-process_message.$(OBJEXT)
test_fuzz_process_message_verack_OBJECTS =  \
	$(am_test_fuzz_process_message_verack_OBJECTS)
#test_fuzz_process_message_verack_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_verack_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_verack_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_verack_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_process_message_version_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/process_message.cpp
am__objects_107 = test/fuzz/test_fuzz_process_message_version-fuzz.$(OBJEXT)
#am_test_fuzz_process_message_version_OBJECTS =  \
#	$(am__objects_107) \
#	test/fuzz/test_fuzz_process_message_version-process_message.$(OBJEXT)
test_fuzz_process_message_version_OBJECTS =  \
	$(am_test_fuzz_process_message_version_OBJECTS)
#test_fuzz_process_message_version_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_process_message_version_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_process_message_version_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_process_message_version_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_psbt_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/psbt.cpp
am__objects_108 =  \
	test/fuzz/test_fuzz_psbt-fuzz.$(OBJEXT)
#am_test_fuzz_psbt_OBJECTS =  \
#	$(am__objects_108) \
#	test/fuzz/test_fuzz_psbt-psbt.$(OBJEXT)
test_fuzz_psbt_OBJECTS = $(am_test_fuzz_psbt_OBJECTS)
#test_fuzz_psbt_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_psbt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_psbt_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_psbt_input_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_109 = test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_psbt_input_deserialize_OBJECTS =  \
#	$(am__objects_109) \
#	test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.$(OBJEXT)
test_fuzz_psbt_input_deserialize_OBJECTS =  \
	$(am_test_fuzz_psbt_input_deserialize_OBJECTS)
#test_fuzz_psbt_input_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_psbt_input_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_psbt_input_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_psbt_output_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_110 = test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_psbt_output_deserialize_OBJECTS =  \
#	$(am__objects_110) \
#	test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.$(OBJEXT)
test_fuzz_psbt_output_deserialize_OBJECTS =  \
	$(am_test_fuzz_psbt_output_deserialize_OBJECTS)
#test_fuzz_psbt_output_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_psbt_output_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_psbt_output_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_pub_key_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_111 = test/fuzz/test_fuzz_pub_key_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_pub_key_deserialize_OBJECTS =  \
#	$(am__objects_111) \
#	test/fuzz/test_fuzz_pub_key_deserialize-deserialize.$(OBJEXT)
test_fuzz_pub_key_deserialize_OBJECTS =  \
	$(am_test_fuzz_pub_key_deserialize_OBJECTS)
#test_fuzz_pub_key_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_pub_key_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_pub_key_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_rolling_bloom_filter_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/rolling_bloom_filter.cpp
am__objects_112 = test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.$(OBJEXT)
#am_test_fuzz_rolling_bloom_filter_OBJECTS =  \
#	$(am__objects_112) \
#	test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.$(OBJEXT)
test_fuzz_rolling_bloom_filter_OBJECTS =  \
	$(am_test_fuzz_rolling_bloom_filter_OBJECTS)
#test_fuzz_rolling_bloom_filter_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_rolling_bloom_filter_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_rolling_bloom_filter_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_script_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/script.cpp
am__objects_113 =  \
	test/fuzz/test_fuzz_script-fuzz.$(OBJEXT)
#am_test_fuzz_script_OBJECTS =  \
#	$(am__objects_113) \
#	test/fuzz/test_fuzz_script-script.$(OBJEXT)
test_fuzz_script_OBJECTS = $(am_test_fuzz_script_OBJECTS)
#test_fuzz_script_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_script_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_script_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_script_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_114 = test/fuzz/test_fuzz_script_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_script_deserialize_OBJECTS =  \
#	$(am__objects_114) \
#	test/fuzz/test_fuzz_script_deserialize-deserialize.$(OBJEXT)
test_fuzz_script_deserialize_OBJECTS =  \
	$(am_test_fuzz_script_deserialize_OBJECTS)
#test_fuzz_script_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_script_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_script_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_script_flags_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/script_flags.cpp
am__objects_115 = test/fuzz/test_fuzz_script_flags-fuzz.$(OBJEXT)
#am_test_fuzz_script_flags_OBJECTS =  \
#	$(am__objects_115) \
#	test/fuzz/test_fuzz_script_flags-script_flags.$(OBJEXT)
test_fuzz_script_flags_OBJECTS = $(am_test_fuzz_script_flags_OBJECTS)
#test_fuzz_script_flags_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_script_flags_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_script_flags_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_script_ops_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/script_ops.cpp
am__objects_116 = test/fuzz/test_fuzz_script_ops-fuzz.$(OBJEXT)
#am_test_fuzz_script_ops_OBJECTS =  \
#	$(am__objects_116) \
#	test/fuzz/test_fuzz_script_ops-script_ops.$(OBJEXT)
test_fuzz_script_ops_OBJECTS = $(am_test_fuzz_script_ops_OBJECTS)
#test_fuzz_script_ops_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_script_ops_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_script_ops_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_scriptnum_ops_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/scriptnum_ops.cpp
am__objects_117 = test/fuzz/test_fuzz_scriptnum_ops-fuzz.$(OBJEXT)
#am_test_fuzz_scriptnum_ops_OBJECTS =  \
#	$(am__objects_117) \
#	test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.$(OBJEXT)
test_fuzz_scriptnum_ops_OBJECTS =  \
	$(am_test_fuzz_scriptnum_ops_OBJECTS)
#test_fuzz_scriptnum_ops_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_scriptnum_ops_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_scriptnum_ops_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_service_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_118 = test/fuzz/test_fuzz_service_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_service_deserialize_OBJECTS =  \
#	$(am__objects_118) \
#	test/fuzz/test_fuzz_service_deserialize-deserialize.$(OBJEXT)
test_fuzz_service_deserialize_OBJECTS =  \
	$(am_test_fuzz_service_deserialize_OBJECTS)
#test_fuzz_service_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_service_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_service_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_snapshotmetadata_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_119 = test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_snapshotmetadata_deserialize_OBJECTS =  \
#	$(am__objects_119) \
#	test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.$(OBJEXT)
test_fuzz_snapshotmetadata_deserialize_OBJECTS =  \
	$(am_test_fuzz_snapshotmetadata_deserialize_OBJECTS)
#test_fuzz_snapshotmetadata_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_snapshotmetadata_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_snapshotmetadata_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_spanparsing_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/spanparsing.cpp
am__objects_120 = test/fuzz/test_fuzz_spanparsing-fuzz.$(OBJEXT)
#am_test_fuzz_spanparsing_OBJECTS =  \
#	$(am__objects_120) \
#	test/fuzz/test_fuzz_spanparsing-spanparsing.$(OBJEXT)
test_fuzz_spanparsing_OBJECTS = $(am_test_fuzz_spanparsing_OBJECTS)
#test_fuzz_spanparsing_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_spanparsing_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_spanparsing_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_strprintf_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/strprintf.cpp
am__objects_121 = test/fuzz/test_fuzz_strprintf-fuzz.$(OBJEXT)
#am_test_fuzz_strprintf_OBJECTS =  \
#	$(am__objects_121) \
#	test/fuzz/test_fuzz_strprintf-strprintf.$(OBJEXT)
test_fuzz_strprintf_OBJECTS = $(am_test_fuzz_strprintf_OBJECTS)
#test_fuzz_strprintf_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_strprintf_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_strprintf_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_sub_net_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_122 = test/fuzz/test_fuzz_sub_net_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_sub_net_deserialize_OBJECTS =  \
#	$(am__objects_122) \
#	test/fuzz/test_fuzz_sub_net_deserialize-deserialize.$(OBJEXT)
test_fuzz_sub_net_deserialize_OBJECTS =  \
	$(am_test_fuzz_sub_net_deserialize_OBJECTS)
#test_fuzz_sub_net_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_sub_net_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_sub_net_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_transaction_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/transaction.cpp
am__objects_123 = test/fuzz/test_fuzz_transaction-fuzz.$(OBJEXT)
#am_test_fuzz_transaction_OBJECTS =  \
#	$(am__objects_123) \
#	test/fuzz/test_fuzz_transaction-transaction.$(OBJEXT)
test_fuzz_transaction_OBJECTS = $(am_test_fuzz_transaction_OBJECTS)
#test_fuzz_transaction_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_transaction_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_transaction_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_tx_in_SOURCES_DIST = test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/tx_in.cpp
am__objects_124 =  \
	test/fuzz/test_fuzz_tx_in-fuzz.$(OBJEXT)
#am_test_fuzz_tx_in_OBJECTS =  \
#	$(am__objects_124) \
#	test/fuzz/test_fuzz_tx_in-tx_in.$(OBJEXT)
test_fuzz_tx_in_OBJECTS = $(am_test_fuzz_tx_in_OBJECTS)
#test_fuzz_tx_in_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_tx_in_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_tx_in_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_tx_in_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_125 = test/fuzz/test_fuzz_tx_in_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_tx_in_deserialize_OBJECTS =  \
#	$(am__objects_125) \
#	test/fuzz/test_fuzz_tx_in_deserialize-deserialize.$(OBJEXT)
test_fuzz_tx_in_deserialize_OBJECTS =  \
	$(am_test_fuzz_tx_in_deserialize_OBJECTS)
#test_fuzz_tx_in_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_tx_in_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_tx_in_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_tx_out_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/tx_out.cpp
am__objects_126 =  \
	test/fuzz/test_fuzz_tx_out-fuzz.$(OBJEXT)
#am_test_fuzz_tx_out_OBJECTS =  \
#	$(am__objects_126) \
#	test/fuzz/test_fuzz_tx_out-tx_out.$(OBJEXT)
test_fuzz_tx_out_OBJECTS = $(am_test_fuzz_tx_out_OBJECTS)
#test_fuzz_tx_out_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_tx_out_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_tx_out_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_txoutcompressor_deserialize_SOURCES_DIST =  \
	test/fuzz/fuzz.cpp test/fuzz/fuzz.h \
	test/fuzz/FuzzedDataProvider.h test/fuzz/util.h \
	test/fuzz/deserialize.cpp
am__objects_127 = test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_txoutcompressor_deserialize_OBJECTS =  \
#	$(am__objects_127) \
#	test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.$(OBJEXT)
test_fuzz_txoutcompressor_deserialize_OBJECTS =  \
	$(am_test_fuzz_txoutcompressor_deserialize_OBJECTS)
#test_fuzz_txoutcompressor_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_txoutcompressor_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) \
	$(CXXFLAGS) $(test_fuzz_txoutcompressor_deserialize_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_fuzz_txundo_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_128 = test/fuzz/test_fuzz_txundo_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_txundo_deserialize_OBJECTS =  \
#	$(am__objects_128) \
#	test/fuzz/test_fuzz_txundo_deserialize-deserialize.$(OBJEXT)
test_fuzz_txundo_deserialize_OBJECTS =  \
	$(am_test_fuzz_txundo_deserialize_OBJECTS)
#test_fuzz_txundo_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_txundo_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_txundo_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_uint160_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_129 = test/fuzz/test_fuzz_uint160_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_uint160_deserialize_OBJECTS =  \
#	$(am__objects_129) \
#	test/fuzz/test_fuzz_uint160_deserialize-deserialize.$(OBJEXT)
test_fuzz_uint160_deserialize_OBJECTS =  \
	$(am_test_fuzz_uint160_deserialize_OBJECTS)
#test_fuzz_uint160_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_uint160_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_uint160_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_uint256_deserialize_SOURCES_DIST = test/fuzz/fuzz.cpp \
	test/fuzz/fuzz.h test/fuzz/FuzzedDataProvider.h \
	test/fuzz/util.h test/fuzz/deserialize.cpp
am__objects_130 = test/fuzz/test_fuzz_uint256_deserialize-fuzz.$(OBJEXT)
#am_test_fuzz_uint256_deserialize_OBJECTS =  \
#	$(am__objects_130) \
#	test/fuzz/test_fuzz_uint256_deserialize-deserialize.$(OBJEXT)
test_fuzz_uint256_deserialize_OBJECTS =  \
	$(am_test_fuzz_uint256_deserialize_OBJECTS)
#test_fuzz_uint256_deserialize_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_8)
test_fuzz_uint256_deserialize_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_uint256_deserialize_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_bitsilver_SOURCES_DIST = test/main.cpp \
	test/util/blockfilter.h test/util/logging.h test/util/mining.h \
	test/util/setup_common.h test/util/str.h \
	test/util/transaction_utils.h test/util/wallet.h \
	test/gen/crypto_gen.cpp test/gen/crypto_gen.h \
	wallet/test/wallet_test_fixture.cpp \
	wallet/test/wallet_test_fixture.h \
	wallet/test/init_test_fixture.cpp \
	wallet/test/init_test_fixture.h test/arith_uint256_tests.cpp \
	test/scriptnum10.h test/addrman_tests.cpp \
	test/amount_tests.cpp test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bech32_tests.cpp \
	test/bip32_tests.cpp test/blockchain_tests.cpp \
	test/blockencodings_tests.cpp test/blockfilter_tests.cpp \
	test/blockfilter_index_tests.cpp test/bloom_tests.cpp \
	test/bswap_tests.cpp test/checkqueue_tests.cpp \
	test/coins_tests.cpp test/compilerbug_tests.cpp \
	test/compress_tests.cpp test/crypto_tests.cpp \
	test/cuckoocache_tests.cpp test/denialofservice_tests.cpp \
	test/descriptor_tests.cpp test/flatfile_tests.cpp \
	test/fs_tests.cpp test/getarg_tests.cpp test/hash_tests.cpp \
	test/key_io_tests.cpp test/key_tests.cpp \
	test/limitedmap_tests.cpp test/logging_tests.cpp \
	test/dbwrapper_tests.cpp test/validation_tests.cpp \
	test/mempool_tests.cpp test/merkle_tests.cpp \
	test/merkleblock_tests.cpp test/miner_tests.cpp \
	test/multisig_tests.cpp test/net_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp \
	test/policyestimator_tests.cpp test/pow_tests.cpp \
	test/prevector_tests.cpp test/raii_event_tests.cpp \
	test/random_tests.cpp test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp test/script_p2sh_tests.cpp \
	test/script_tests.cpp test/script_standard_tests.cpp \
	test/scriptnum_tests.cpp test/serialize_tests.cpp \
	test/settings_tests.cpp test/sighash_tests.cpp \
	test/sigopcount_tests.cpp test/skiplist_tests.cpp \
	test/streams_tests.cpp test/sync_tests.cpp \
	test/util_threadnames_tests.cpp test/timedata_tests.cpp \
	test/torcontrol_tests.cpp test/transaction_tests.cpp \
	test/txindex_tests.cpp test/txvalidation_tests.cpp \
	test/txvalidationcache_tests.cpp test/uint256_tests.cpp \
	test/util_tests.cpp test/validation_block_tests.cpp \
	test/validation_flush_tests.cpp test/versionbits_tests.cpp \
	test/key_properties.cpp wallet/test/db_tests.cpp \
	wallet/test/psbt_wallet_tests.cpp wallet/test/wallet_tests.cpp \
	wallet/test/wallet_crypto_tests.cpp \
	wallet/test/coinselector_tests.cpp wallet/test/init_tests.cpp \
	wallet/test/ismine_tests.cpp \
	wallet/test/scriptpubkeyman_tests.cpp \
	test/data/script_tests.json \
	test/data/base58_encode_decode.json \
	test/data/blockfilters.json test/data/key_io_valid.json \
	test/data/key_io_invalid.json test/data/sighash.json \
	test/data/tx_invalid.json test/data/tx_valid.json \
	test/data/asmap.raw
#am__objects_131 = test/gen/test_test_bitsilver-crypto_gen.$(OBJEXT)
am__objects_132 = wallet/test/test_test_bitsilver-wallet_test_fixture.$(OBJEXT) \
	wallet/test/test_test_bitsilver-init_test_fixture.$(OBJEXT)
am__objects_133 =  \
	test/test_test_bitsilver-main.$(OBJEXT) \
	$(am__objects_4) $(am__objects_131) \
	$(am__objects_132)
#am__objects_134 = test/test_test_bitsilver-key_properties.$(OBJEXT)
am__objects_135 = wallet/test/test_test_bitsilver-db_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-psbt_wallet_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-wallet_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-wallet_crypto_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-coinselector_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-init_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-ismine_tests.$(OBJEXT) \
	wallet/test/test_test_bitsilver-scriptpubkeyman_tests.$(OBJEXT)
am__objects_136 = test/test_test_bitsilver-arith_uint256_tests.$(OBJEXT) \
	test/test_test_bitsilver-addrman_tests.$(OBJEXT) \
	test/test_test_bitsilver-amount_tests.$(OBJEXT) \
	test/test_test_bitsilver-allocator_tests.$(OBJEXT) \
	test/test_test_bitsilver-base32_tests.$(OBJEXT) \
	test/test_test_bitsilver-base58_tests.$(OBJEXT) \
	test/test_test_bitsilver-base64_tests.$(OBJEXT) \
	test/test_test_bitsilver-bech32_tests.$(OBJEXT) \
	test/test_test_bitsilver-bip32_tests.$(OBJEXT) \
	test/test_test_bitsilver-blockchain_tests.$(OBJEXT) \
	test/test_test_bitsilver-blockencodings_tests.$(OBJEXT) \
	test/test_test_bitsilver-blockfilter_tests.$(OBJEXT) \
	test/test_test_bitsilver-blockfilter_index_tests.$(OBJEXT) \
	test/test_test_bitsilver-bloom_tests.$(OBJEXT) \
	test/test_test_bitsilver-bswap_tests.$(OBJEXT) \
	test/test_test_bitsilver-checkqueue_tests.$(OBJEXT) \
	test/test_test_bitsilver-coins_tests.$(OBJEXT) \
	test/test_test_bitsilver-compilerbug_tests.$(OBJEXT) \
	test/test_test_bitsilver-compress_tests.$(OBJEXT) \
	test/test_test_bitsilver-crypto_tests.$(OBJEXT) \
	test/test_test_bitsilver-cuckoocache_tests.$(OBJEXT) \
	test/test_test_bitsilver-denialofservice_tests.$(OBJEXT) \
	test/test_test_bitsilver-descriptor_tests.$(OBJEXT) \
	test/test_test_bitsilver-flatfile_tests.$(OBJEXT) \
	test/test_test_bitsilver-fs_tests.$(OBJEXT) \
	test/test_test_bitsilver-getarg_tests.$(OBJEXT) \
	test/test_test_bitsilver-hash_tests.$(OBJEXT) \
	test/test_test_bitsilver-key_io_tests.$(OBJEXT) \
	test/test_test_bitsilver-key_tests.$(OBJEXT) \
	test/test_test_bitsilver-limitedmap_tests.$(OBJEXT) \
	test/test_test_bitsilver-logging_tests.$(OBJEXT) \
	test/test_test_bitsilver-dbwrapper_tests.$(OBJEXT) \
	test/test_test_bitsilver-validation_tests.$(OBJEXT) \
	test/test_test_bitsilver-mempool_tests.$(OBJEXT) \
	test/test_test_bitsilver-merkle_tests.$(OBJEXT) \
	test/test_test_bitsilver-merkleblock_tests.$(OBJEXT) \
	test/test_test_bitsilver-miner_tests.$(OBJEXT) \
	test/test_test_bitsilver-multisig_tests.$(OBJEXT) \
	test/test_test_bitsilver-net_tests.$(OBJEXT) \
	test/test_test_bitsilver-netbase_tests.$(OBJEXT) \
	test/test_test_bitsilver-pmt_tests.$(OBJEXT) \
	test/test_test_bitsilver-policyestimator_tests.$(OBJEXT) \
	test/test_test_bitsilver-pow_tests.$(OBJEXT) \
	test/test_test_bitsilver-prevector_tests.$(OBJEXT) \
	test/test_test_bitsilver-raii_event_tests.$(OBJEXT) \
	test/test_test_bitsilver-random_tests.$(OBJEXT) \
	test/test_test_bitsilver-reverselock_tests.$(OBJEXT) \
	test/test_test_bitsilver-rpc_tests.$(OBJEXT) \
	test/test_test_bitsilver-sanity_tests.$(OBJEXT) \
	test/test_test_bitsilver-scheduler_tests.$(OBJEXT) \
	test/test_test_bitsilver-script_p2sh_tests.$(OBJEXT) \
	test/test_test_bitsilver-script_tests.$(OBJEXT) \
	test/test_test_bitsilver-script_standard_tests.$(OBJEXT) \
	test/test_test_bitsilver-scriptnum_tests.$(OBJEXT) \
	test/test_test_bitsilver-serialize_tests.$(OBJEXT) \
	test/test_test_bitsilver-settings_tests.$(OBJEXT) \
	test/test_test_bitsilver-sighash_tests.$(OBJEXT) \
	test/test_test_bitsilver-sigopcount_tests.$(OBJEXT) \
	test/test_test_bitsilver-skiplist_tests.$(OBJEXT) \
	test/test_test_bitsilver-streams_tests.$(OBJEXT) \
	test/test_test_bitsilver-sync_tests.$(OBJEXT) \
	test/test_test_bitsilver-util_threadnames_tests.$(OBJEXT) \
	test/test_test_bitsilver-timedata_tests.$(OBJEXT) \
	test/test_test_bitsilver-torcontrol_tests.$(OBJEXT) \
	test/test_test_bitsilver-transaction_tests.$(OBJEXT) \
	test/test_test_bitsilver-txindex_tests.$(OBJEXT) \
	test/test_test_bitsilver-txvalidation_tests.$(OBJEXT) \
	test/test_test_bitsilver-txvalidationcache_tests.$(OBJEXT) \
	test/test_test_bitsilver-uint256_tests.$(OBJEXT) \
	test/test_test_bitsilver-util_tests.$(OBJEXT) \
	test/test_test_bitsilver-validation_block_tests.$(OBJEXT) \
	test/test_test_bitsilver-validation_flush_tests.$(OBJEXT) \
	test/test_test_bitsilver-versionbits_tests.$(OBJEXT) \
	$(am__objects_134) $(am__objects_135)
am_test_test_bitsilver_OBJECTS =  \
	$(am__objects_133) $(am__objects_136) \
	$(am__objects_4) $(am__objects_4)
am__objects_137 = $(am__objects_4) $(am__objects_4)
nodist_test_test_bitsilver_OBJECTS =  \
	$(am__objects_137)
test_test_bitsilver_OBJECTS = $(am_test_test_bitsilver_OBJECTS) \
	$(nodist_test_test_bitsilver_OBJECTS)
am__DEPENDENCIES_9 =  \
	$(LIBBITSILVER_ZMQ) \
	$(am__DEPENDENCIES_3)
test_test_bitsilver_DEPENDENCIES = $(LIBTEST_UTIL) \
	$(am__append_45) $(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_CLI) $(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_9)
test_test_bitsilver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_bitsilver_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(crc32c_libcrc32c_a_SOURCES) \
	$(crc32c_libcrc32c_arm_crc_a_SOURCES) \
	$(crc32c_libcrc32c_sse42_a_SOURCES) \
	$(crypto_libbitsilver_crypto_avx2_a_SOURCES) \
	$(crypto_libbitsilver_crypto_base_a_SOURCES) \
	$(crypto_libbitsilver_crypto_shani_a_SOURCES) \
	$(crypto_libbitsilver_crypto_sse41_a_SOURCES) \
	$(leveldb_libleveldb_a_SOURCES) $(leveldb_libmemenv_a_SOURCES) \
	$(libbitsilver_cli_a_SOURCES) $(libbitsilver_common_a_SOURCES) \
	$(libbitsilver_consensus_a_SOURCES) \
	$(libbitsilver_server_a_SOURCES) \
	$(libbitsilver_util_a_SOURCES) \
	$(nodist_libbitsilver_util_a_SOURCES) \
	$(libbitsilver_wallet_a_SOURCES) \
	$(libbitsilver_wallet_tool_a_SOURCES) \
	$(libbitsilver_zmq_a_SOURCES) $(libtest_util_a_SOURCES) \
	$(qt_libbitsilverqt_a_SOURCES) \
	$(nodist_qt_libbitsilverqt_a_SOURCES) \
	$(libbitsilverconsensus_la_SOURCES) \
	$(bench_bench_bitsilver_SOURCES) \
	$(nodist_bench_bench_bitsilver_SOURCES) \
	$(bitsilver_cli_SOURCES) $(bitsilver_tx_SOURCES) \
	$(bitsilver_wallet_SOURCES) $(bitsilverd_SOURCES) \
	$(qt_bitsilver_qt_SOURCES) \
	$(qt_test_test_bitsilver_qt_SOURCES) \
	$(nodist_qt_test_test_bitsilver_qt_SOURCES) \
	$(test_fuzz_addr_info_deserialize_SOURCES) \
	$(test_fuzz_address_deserialize_SOURCES) \
	$(test_fuzz_addrman_deserialize_SOURCES) \
	$(test_fuzz_asmap_SOURCES) \
	$(test_fuzz_banentry_deserialize_SOURCES) \
	$(test_fuzz_base_encode_decode_SOURCES) \
	$(test_fuzz_bech32_SOURCES) $(test_fuzz_block_SOURCES) \
	$(test_fuzz_block_deserialize_SOURCES) \
	$(test_fuzz_block_file_info_deserialize_SOURCES) \
	$(test_fuzz_block_filter_deserialize_SOURCES) \
	$(test_fuzz_block_header_and_short_txids_deserialize_SOURCES) \
	$(test_fuzz_blockheader_deserialize_SOURCES) \
	$(test_fuzz_blocklocator_deserialize_SOURCES) \
	$(test_fuzz_blockmerkleroot_SOURCES) \
	$(test_fuzz_blocktransactions_deserialize_SOURCES) \
	$(test_fuzz_blocktransactionsrequest_deserialize_SOURCES) \
	$(test_fuzz_blockundo_deserialize_SOURCES) \
	$(test_fuzz_bloom_filter_SOURCES) \
	$(test_fuzz_bloomfilter_deserialize_SOURCES) \
	$(test_fuzz_coins_deserialize_SOURCES) \
	$(test_fuzz_decode_tx_SOURCES) \
	$(test_fuzz_descriptor_parse_SOURCES) \
	$(test_fuzz_diskblockindex_deserialize_SOURCES) \
	$(test_fuzz_eval_script_SOURCES) \
	$(test_fuzz_fee_rate_deserialize_SOURCES) \
	$(test_fuzz_flat_file_pos_deserialize_SOURCES) \
	$(test_fuzz_float_SOURCES) $(test_fuzz_hex_SOURCES) \
	$(test_fuzz_integer_SOURCES) \
	$(test_fuzz_inv_deserialize_SOURCES) $(test_fuzz_key_SOURCES) \
	$(test_fuzz_key_io_SOURCES) \
	$(test_fuzz_key_origin_info_deserialize_SOURCES) \
	$(test_fuzz_locale_SOURCES) \
	$(test_fuzz_merkle_block_deserialize_SOURCES) \
	$(test_fuzz_messageheader_deserialize_SOURCES) \
	$(test_fuzz_netaddr_deserialize_SOURCES) \
	$(test_fuzz_netaddress_SOURCES) \
	$(test_fuzz_out_point_deserialize_SOURCES) \
	$(test_fuzz_p2p_transport_deserializer_SOURCES) \
	$(test_fuzz_parse_hd_keypath_SOURCES) \
	$(test_fuzz_parse_iso8601_SOURCES) \
	$(test_fuzz_parse_numbers_SOURCES) \
	$(test_fuzz_parse_script_SOURCES) \
	$(test_fuzz_parse_univalue_SOURCES) \
	$(test_fuzz_partial_merkle_tree_deserialize_SOURCES) \
	$(test_fuzz_partially_signed_transaction_deserialize_SOURCES) \
	$(test_fuzz_prefilled_transaction_deserialize_SOURCES) \
	$(test_fuzz_process_message_SOURCES) \
	$(test_fuzz_process_message_addr_SOURCES) \
	$(test_fuzz_process_message_block_SOURCES) \
	$(test_fuzz_process_message_blocktxn_SOURCES) \
	$(test_fuzz_process_message_cmpctblock_SOURCES) \
	$(test_fuzz_process_message_feefilter_SOURCES) \
	$(test_fuzz_process_message_filteradd_SOURCES) \
	$(test_fuzz_process_message_filterclear_SOURCES) \
	$(test_fuzz_process_message_filterload_SOURCES) \
	$(test_fuzz_process_message_getaddr_SOURCES) \
	$(test_fuzz_process_message_getblocks_SOURCES) \
	$(test_fuzz_process_message_getblocktxn_SOURCES) \
	$(test_fuzz_process_message_getdata_SOURCES) \
	$(test_fuzz_process_message_getheaders_SOURCES) \
	$(test_fuzz_process_message_headers_SOURCES) \
	$(test_fuzz_process_message_inv_SOURCES) \
	$(test_fuzz_process_message_mempool_SOURCES) \
	$(test_fuzz_process_message_notfound_SOURCES) \
	$(test_fuzz_process_message_ping_SOURCES) \
	$(test_fuzz_process_message_pong_SOURCES) \
	$(test_fuzz_process_message_sendcmpct_SOURCES) \
	$(test_fuzz_process_message_sendheaders_SOURCES) \
	$(test_fuzz_process_message_tx_SOURCES) \
	$(test_fuzz_process_message_verack_SOURCES) \
	$(test_fuzz_process_message_version_SOURCES) \
	$(test_fuzz_psbt_SOURCES) \
	$(test_fuzz_psbt_input_deserialize_SOURCES) \
	$(test_fuzz_psbt_output_deserialize_SOURCES) \
	$(test_fuzz_pub_key_deserialize_SOURCES) \
	$(test_fuzz_rolling_bloom_filter_SOURCES) \
	$(test_fuzz_script_SOURCES) \
	$(test_fuzz_script_deserialize_SOURCES) \
	$(test_fuzz_script_flags_SOURCES) \
	$(test_fuzz_script_ops_SOURCES) \
	$(test_fuzz_scriptnum_ops_SOURCES) \
	$(test_fuzz_service_deserialize_SOURCES) \
	$(test_fuzz_snapshotmetadata_deserialize_SOURCES) \
	$(test_fuzz_spanparsing_SOURCES) \
	$(test_fuzz_strprintf_SOURCES) \
	$(test_fuzz_sub_net_deserialize_SOURCES) \
	$(test_fuzz_transaction_SOURCES) $(test_fuzz_tx_in_SOURCES) \
	$(test_fuzz_tx_in_deserialize_SOURCES) \
	$(test_fuzz_tx_out_SOURCES) \
	$(test_fuzz_txoutcompressor_deserialize_SOURCES) \
	$(test_fuzz_txundo_deserialize_SOURCES) \
	$(test_fuzz_uint160_deserialize_SOURCES) \
	$(test_fuzz_uint256_deserialize_SOURCES) \
	$(test_test_bitsilver_SOURCES) \
	$(nodist_test_test_bitsilver_SOURCES)
DIST_SOURCES = $(am__crc32c_libcrc32c_a_SOURCES_DIST) \
	$(am__crc32c_libcrc32c_arm_crc_a_SOURCES_DIST) \
	$(am__crc32c_libcrc32c_sse42_a_SOURCES_DIST) \
	$(crypto_libbitsilver_crypto_avx2_a_SOURCES) \
	$(am__crypto_libbitsilver_crypto_base_a_SOURCES_DIST) \
	$(crypto_libbitsilver_crypto_shani_a_SOURCES) \
	$(crypto_libbitsilver_crypto_sse41_a_SOURCES) \
	$(am__leveldb_libleveldb_a_SOURCES_DIST) \
	$(am__leveldb_libmemenv_a_SOURCES_DIST) \
	$(libbitsilver_cli_a_SOURCES) $(libbitsilver_common_a_SOURCES) \
	$(libbitsilver_consensus_a_SOURCES) \
	$(am__libbitsilver_server_a_SOURCES_DIST) \
	$(am__libbitsilver_util_a_SOURCES_DIST) \
	$(libbitsilver_wallet_a_SOURCES) \
	$(libbitsilver_wallet_tool_a_SOURCES) \
	$(am__libbitsilver_zmq_a_SOURCES_DIST) \
	$(libtest_util_a_SOURCES) \
	$(am__qt_libbitsilverqt_a_SOURCES_DIST) \
	$(am__libbitsilverconsensus_la_SOURCES_DIST) \
	$(am__bench_bench_bitsilver_SOURCES_DIST) \
	$(am__bitsilver_cli_SOURCES_DIST) \
	$(am__bitsilver_tx_SOURCES_DIST) \
	$(am__bitsilver_wallet_SOURCES_DIST) \
	$(am__bitsilverd_SOURCES_DIST) \
	$(am__qt_bitsilver_qt_SOURCES_DIST) \
	$(am__qt_test_test_bitsilver_qt_SOURCES_DIST) \
	$(am__test_fuzz_addr_info_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_address_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_addrman_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_asmap_SOURCES_DIST) \
	$(am__test_fuzz_banentry_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_base_encode_decode_SOURCES_DIST) \
	$(am__test_fuzz_bech32_SOURCES_DIST) \
	$(am__test_fuzz_block_SOURCES_DIST) \
	$(am__test_fuzz_block_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_block_file_info_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_block_filter_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_block_header_and_short_txids_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_blockheader_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_blocklocator_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_blockmerkleroot_SOURCES_DIST) \
	$(am__test_fuzz_blocktransactions_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_blocktransactionsrequest_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_blockundo_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_bloom_filter_SOURCES_DIST) \
	$(am__test_fuzz_bloomfilter_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_coins_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_decode_tx_SOURCES_DIST) \
	$(am__test_fuzz_descriptor_parse_SOURCES_DIST) \
	$(am__test_fuzz_diskblockindex_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_eval_script_SOURCES_DIST) \
	$(am__test_fuzz_fee_rate_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_flat_file_pos_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_float_SOURCES_DIST) \
	$(am__test_fuzz_hex_SOURCES_DIST) \
	$(am__test_fuzz_integer_SOURCES_DIST) \
	$(am__test_fuzz_inv_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_key_SOURCES_DIST) \
	$(am__test_fuzz_key_io_SOURCES_DIST) \
	$(am__test_fuzz_key_origin_info_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_locale_SOURCES_DIST) \
	$(am__test_fuzz_merkle_block_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_messageheader_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_netaddr_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_netaddress_SOURCES_DIST) \
	$(am__test_fuzz_out_point_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_p2p_transport_deserializer_SOURCES_DIST) \
	$(am__test_fuzz_parse_hd_keypath_SOURCES_DIST) \
	$(am__test_fuzz_parse_iso8601_SOURCES_DIST) \
	$(am__test_fuzz_parse_numbers_SOURCES_DIST) \
	$(am__test_fuzz_parse_script_SOURCES_DIST) \
	$(am__test_fuzz_parse_univalue_SOURCES_DIST) \
	$(am__test_fuzz_partial_merkle_tree_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_partially_signed_transaction_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_prefilled_transaction_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_process_message_SOURCES_DIST) \
	$(am__test_fuzz_process_message_addr_SOURCES_DIST) \
	$(am__test_fuzz_process_message_block_SOURCES_DIST) \
	$(am__test_fuzz_process_message_blocktxn_SOURCES_DIST) \
	$(am__test_fuzz_process_message_cmpctblock_SOURCES_DIST) \
	$(am__test_fuzz_process_message_feefilter_SOURCES_DIST) \
	$(am__test_fuzz_process_message_filteradd_SOURCES_DIST) \
	$(am__test_fuzz_process_message_filterclear_SOURCES_DIST) \
	$(am__test_fuzz_process_message_filterload_SOURCES_DIST) \
	$(am__test_fuzz_process_message_getaddr_SOURCES_DIST) \
	$(am__test_fuzz_process_message_getblocks_SOURCES_DIST) \
	$(am__test_fuzz_process_message_getblocktxn_SOURCES_DIST) \
	$(am__test_fuzz_process_message_getdata_SOURCES_DIST) \
	$(am__test_fuzz_process_message_getheaders_SOURCES_DIST) \
	$(am__test_fuzz_process_message_headers_SOURCES_DIST) \
	$(am__test_fuzz_process_message_inv_SOURCES_DIST) \
	$(am__test_fuzz_process_message_mempool_SOURCES_DIST) \
	$(am__test_fuzz_process_message_notfound_SOURCES_DIST) \
	$(am__test_fuzz_process_message_ping_SOURCES_DIST) \
	$(am__test_fuzz_process_message_pong_SOURCES_DIST) \
	$(am__test_fuzz_process_message_sendcmpct_SOURCES_DIST) \
	$(am__test_fuzz_process_message_sendheaders_SOURCES_DIST) \
	$(am__test_fuzz_process_message_tx_SOURCES_DIST) \
	$(am__test_fuzz_process_message_verack_SOURCES_DIST) \
	$(am__test_fuzz_process_message_version_SOURCES_DIST) \
	$(am__test_fuzz_psbt_SOURCES_DIST) \
	$(am__test_fuzz_psbt_input_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_psbt_output_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_pub_key_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_rolling_bloom_filter_SOURCES_DIST) \
	$(am__test_fuzz_script_SOURCES_DIST) \
	$(am__test_fuzz_script_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_script_flags_SOURCES_DIST) \
	$(am__test_fuzz_script_ops_SOURCES_DIST) \
	$(am__test_fuzz_scriptnum_ops_SOURCES_DIST) \
	$(am__test_fuzz_service_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_snapshotmetadata_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_spanparsing_SOURCES_DIST) \
	$(am__test_fuzz_strprintf_SOURCES_DIST) \
	$(am__test_fuzz_sub_net_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_transaction_SOURCES_DIST) \
	$(am__test_fuzz_tx_in_SOURCES_DIST) \
	$(am__test_fuzz_tx_in_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_tx_out_SOURCES_DIST) \
	$(am__test_fuzz_txoutcompressor_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_txundo_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_uint160_deserialize_SOURCES_DIST) \
	$(am__test_fuzz_uint256_deserialize_SOURCES_DIST) \
	$(am__test_test_bitsilver_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/bitsilverconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = .exe .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.exe.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.bench.include \
	$(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.leveldb.include \
	$(srcdir)/Makefile.qt.include \
	$(srcdir)/Makefile.qt_locale.include \
	$(srcdir)/Makefile.qttest.include \
	$(srcdir)/Makefile.test.include \
	$(srcdir)/Makefile.test_util.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /root/work/bitsilver/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/x86_64-w64-mingw32-ar
ARFLAGS = cr
ARM_CRC_CXXFLAGS = 
AUTOCONF = ${SHELL} /root/work/bitsilver/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /root/work/bitsilver/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /root/work/bitsilver/build-aux/missing automake-1.15
AVX2_CXXFLAGS = -mavx -mavx2
AWK = gawk
BDB_CFLAGS = 
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BITSILVER_CLI_NAME = bitsilver-cli
BITSILVER_DAEMON_NAME = bitsilverd
BITSILVER_GUI_NAME = bitsilver-qt
BITSILVER_TX_NAME = bitsilver-tx
BITSILVER_WALLET_TOOL_NAME = bitsilver-wallet
BOOST_CPPFLAGS = -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -mthreads -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt-s-x64
BOOST_LDFLAGS = -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib
BOOST_LIBS = -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib -lboost_system-mt-s-x64 -lboost_filesystem-mt-s-x64 -lboost_thread-mt-s-x64
BOOST_SYSTEM_LIB = -lboost_system-mt-s-x64
BOOST_THREAD_LIB = -lboost_thread-mt-s-x64
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt-s-x64
BREW = 
CC = x86_64-w64-mingw32-gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -pipe -O2 
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 0
CLIENT_VERSION_MINOR = 19
CLIENT_VERSION_REVISION = 99
COMPAT_LDFLAGS = 
COPYRIGHT_HOLDERS = The %s developers
COPYRIGHT_HOLDERS_FINAL = The BitSilver Core developers
COPYRIGHT_HOLDERS_SUBSTITUTION = BitSilver Core
COPYRIGHT_YEAR = 2020
CPP = x86_64-w64-mingw32-gcc -E
CPPFILT = /usr/bin/x86_64-w64-mingw32-c++filt
CPPFLAGS = -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601 -D_FILE_OFFSET_BITS=64
CXX = x86_64-w64-mingw32-g++ -std=c++11
CXXCPP = x86_64-w64-mingw32-g++ -std=c++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -pipe -O2 
CYGPATH_W = echo
DEBUG_CPPFLAGS = 
DEBUG_CXXFLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = x86_64-w64-mingw32-dlltool
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ERROR_CXXFLAGS = 
EVENT_CFLAGS = 
EVENT_LIBS = -levent
EVENT_PTHREADS_CFLAGS = 
EVENT_PTHREADS_LIBS = 
EXEEXT = .exe
EXTENDED_FUNCTIONAL_TESTS = 
FGREP = /bin/grep -F
GCOV = /usr/bin/x86_64-w64-mingw32-gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GPROF_CXXFLAGS = 
GPROF_LDFLAGS = 
GREP = /bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -fstack-reuse=none -Wstack-protector -fstack-protector-all
HARDENED_LDFLAGS =  -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va -pie
HAVE_BUILTIN_PREFETCH = 1
HAVE_CXX11 = 1
HAVE_FDATASYNC = 0
HAVE_FULLFSYNC = 0
HAVE_MM_PREFETCH = 1
HAVE_O_CLOEXEC = 0
HAVE_STRONG_GETAUXVAL = 0
HAVE_WEAK_GETAUXVAL = 1
HEXDUMP = /usr/bin/hexdump
IMAGEMAGICK_CONVERT = 
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LCOV_OPTS = 
LD = /usr/bin/x86_64-w64-mingw32-ld
LDFLAGS = -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib 
LEVELDB_CPPFLAGS =  $(am__append_32)
LIBLEVELDB =  $(am__append_30)
LIBMEMENV =  $(am__append_31)
LIBOBJS = 
LIBS = -lQt5AccessibilitySupport -lQt5DeviceDiscoverySupport -lQt5FbSupport -lQt5ThemeSupport -lQt5EventDispatcherSupport -lQt5FontDatabaseSupport -lssp -liphlpapi -lshlwapi -lws2_32 -ladvapi32 -luuid -loleaut32 -lole32 -lcomctl32 -lshell32 -lwinmm -lcomdlg32 -lgdi32 -luser32 -lkernel32 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS =  -all-static
LIPO = 
LN_S = ln -s
LRELEASE = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/bin/lrelease
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/bin/lupdate
MAINT = 
MAKEINFO = ${SHELL} /root/work/bitsilver/build-aux/missing makeinfo
MAKENSIS = none
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = -DSTATICLIB -DMINIUPNP_STATICLIB
MINIUPNPC_LIBS = -lminiupnpc
MKDIR_P = /bin/mkdir -p
MOC = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/bin/moc
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = x86_64-w64-mingw32-nm
NMEDIT = 
NOWARN_CXXFLAGS = 
OBJCOPY = /usr/bin/x86_64-w64-mingw32-objcopy
OBJCXX = x86_64-w64-mingw32-g++ -std=c++11
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = x86_64-w64-mingw32-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bitsilver
PACKAGE_BUGREPORT = https://github.com/bitsilver/bitsilver/issues
PACKAGE_NAME = BitSilver Core
PACKAGE_STRING = BitSilver Core 0.19.99
PACKAGE_TARNAME = bitsilver
PACKAGE_URL = https://bitsilvercore.org/
PACKAGE_VERSION = 0.19.99
PATH_SEPARATOR = :
PIC_FLAGS = 
PIE_FLAGS = -fPIE
PKG_CONFIG = /usr/bin/pkg-config --static
PKG_CONFIG_LIBDIR = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib/pkgconfig
PKG_CONFIG_PATH = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../share/pkgconfig:/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib/pkgconfig
PTHREAD_CC = x86_64-w64-mingw32-gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3.6
PYTHONPATH = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/lib/python3/dist-packages:
QR_CFLAGS = 
QR_LIBS = -lqrencode
QT5_CFLAGS = 
QT5_LIBS = 
QTACCESSIBILITY_CFLAGS = 
QTACCESSIBILITY_LIBS = 
QTCGL_CFLAGS = 
QTCGL_LIBS = 
QTCLIPBOARD_CFLAGS = 
QTCLIPBOARD_LIBS = 
QTDEVICEDISCOVERY_CFLAGS = 
QTDEVICEDISCOVERY_LIBS = 
QTEVENTDISPATCHER_CFLAGS = 
QTEVENTDISPATCHER_LIBS = 
QTFB_CFLAGS = 
QTFB_LIBS = 
QTFONTDATABASE_CFLAGS = 
QTFONTDATABASE_LIBS = 
QTGRAPHICS_CFLAGS = 
QTGRAPHICS_LIBS = 
QTPLATFORM_CFLAGS = 
QTPLATFORM_LIBS = 
QTTHEME_CFLAGS = 
QTTHEME_LIBS = 
QTXCBQPA_CFLAGS = 
QTXCBQPA_LIBS = 
QT_DBUS_CFLAGS = 
QT_DBUS_INCLUDES = 
QT_DBUS_LIBS = -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib
QT_INCLUDES = -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtCore -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtGui -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtWidgets -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtNetwork -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtTest -I/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../include/QtDBus
QT_LDFLAGS =  -mwindows
QT_LIBS = -lqwindows -lqminimal -lQt5Widgets -lQt5Network -lQt5Gui     -lQt5Core    -lqtharfbuzz -lqtlibpng -lz  -limm32  -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../plugins/platforms -lversion -ldwmapi -luxtheme
QT_PIE_FLAGS = -fPIE
QT_SELECT = qt5
QT_TEST_CFLAGS = 
QT_TEST_INCLUDES = 
QT_TEST_LIBS = -lQt5Test -L/root/work/bitsilver/depends/x86_64-w64-mingw32/share/../lib
QT_TRANSLATION_DIR = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../translations
RANLIB = /usr/bin/x86_64-w64-mingw32-ranlib
RAPIDCHECK_LIBS = 
RCC = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/bin/rcc
READELF = /usr/bin/x86_64-w64-mingw32-readelf
RELDFLAGS = 
RSVG_CONVERT = 
SANITIZER_CXXFLAGS = 
SANITIZER_LDFLAGS = 
SED = /bin/sed
SET_MAKE = 
SHANI_CXXFLAGS = -msse4 -msha
SHELL = /bin/bash
SSE41_CXXFLAGS = -msse4.1
SSE42_CXXFLAGS = -msse4.2
STRIP = /usr/bin/x86_64-w64-mingw32-strip
TESTDEFS = 
TIFFCP = 
UIC = /root/work/bitsilver/depends/x86_64-w64-mingw32/share/../native/bin/uic
UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include
UNIVALUE_LIBS = univalue/libunivalue.la
USE_QRCODE = 
USE_UPNP = 
VERSION = 0.19.99
WARN_CXXFLAGS = 
WINDRES = /usr/bin/x86_64-w64-mingw32-windres
XGETTEXT = /usr/bin/xgettext
ZMQ_CFLAGS =  -DZMQ_STATIC
ZMQ_LIBS = -lzmq
abs_builddir = /root/work/bitsilver/src
abs_srcdir = /root/work/bitsilver/src
abs_top_builddir = /root/work/bitsilver
abs_top_srcdir = /root/work/bitsilver
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-w64-mingw32
host_alias = x86_64-w64-mingw32
host_cpu = x86_64
host_os = mingw32
host_vendor = w64
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/work/bitsilver/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /root/work/bitsilver/depends/x86_64-w64-mingw32
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/univalue src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DIST_SUBDIRS = secp256k1 univalue
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) \
	$(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS) $(am__append_12)
AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)
AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)
AM_LIBTOOLFLAGS = --preserve-dup-deps

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBBITSILVER_CRYPTO) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_SERVER) $(LIBBITSILVER_CLI) \
	$(LIBBITSILVER_WALLET) $(LIBBITSILVER_WALLET_TOOL) \
	$(LIBBITSILVER_ZMQ) $(am__append_18) $(am__append_25) \
	$(am__append_27) $(am__append_29) $(LIBTEST_UTIL) \
	$(am__append_53)
#LIBUNIVALUE = $(UNIVALUE_LIBS)
LIBUNIVALUE = univalue/libunivalue.la
BITSILVER_INCLUDES = -I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) \
	$(LEVELDB_CPPFLAGS) -I$(srcdir)/secp256k1/include \
	$(UNIVALUE_CFLAGS)
LIBBITSILVER_SERVER = libbitsilver_server.a
LIBBITSILVER_COMMON = libbitsilver_common.a
LIBBITSILVER_CONSENSUS = libbitsilver_consensus.a
LIBBITSILVER_CLI = libbitsilver_cli.a
LIBBITSILVER_UTIL = libbitsilver_util.a
LIBBITSILVER_CRYPTO_BASE = crypto/libbitsilver_crypto_base.a
LIBBITSILVERQT = qt/libbitsilverqt.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIBBITSILVER_ZMQ = libbitsilver_zmq.a
LIBBITSILVERCONSENSUS = libbitsilverconsensus.la
LIBBITSILVER_WALLET = libbitsilver_wallet.a
LIBBITSILVER_WALLET_TOOL = libbitsilver_wallet_tool.a
LIBBITSILVER_CRYPTO = $(LIBBITSILVER_CRYPTO_BASE) $(am__append_1) \
	$(am__append_2) $(am__append_3)
LIBBITSILVER_CRYPTO_SSE41 = crypto/libbitsilver_crypto_sse41.a
LIBBITSILVER_CRYPTO_AVX2 = crypto/libbitsilver_crypto_avx2.a
LIBBITSILVER_CRYPTO_SHANI = crypto/libbitsilver_crypto_shani.a
lib_LTLIBRARIES = $(LIBBITSILVERCONSENSUS)
BENCHMARKS = 
# bitsilver core #
BITSILVER_CORE_H = \
  addrdb.h \
  addrman.h \
  attributes.h \
  banman.h \
  base58.h \
  bech32.h \
  bloom.h \
  blockencodings.h \
  blockfilter.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkqueue.h \
  clientversion.h \
  coins.h \
  compat.h \
  compat/assumptions.h \
  compat/byteswap.h \
  compat/cpuid.h \
  compat/endian.h \
  compat/sanity.h \
  compressor.h \
  consensus/consensus.h \
  consensus/tx_check.h \
  consensus/tx_verify.h \
  core_io.h \
  core_memusage.h \
  cuckoocache.h \
  flatfile.h \
  fs.h \
  httprpc.h \
  httpserver.h \
  index/base.h \
  index/blockfilterindex.h \
  index/txindex.h \
  indirectmap.h \
  init.h \
  interfaces/chain.h \
  interfaces/handler.h \
  interfaces/node.h \
  interfaces/wallet.h \
  key.h \
  key_io.h \
  dbwrapper.h \
  limitedmap.h \
  logging.h \
  logging/timer.h \
  memusage.h \
  merkleblock.h \
  miner.h \
  net.h \
  net_permissions.h \
  net_processing.h \
  net_types.h \
  netaddress.h \
  netbase.h \
  netmessagemaker.h \
  node/coin.h \
  node/coinstats.h \
  node/context.h \
  node/psbt.h \
  node/transaction.h \
  node/utxo_snapshot.h \
  noui.h \
  optional.h \
  outputtype.h \
  policy/feerate.h \
  policy/fees.h \
  policy/policy.h \
  policy/rbf.h \
  policy/settings.h \
  pow.h \
  protocol.h \
  psbt.h \
  random.h \
  randomenv.h \
  reverse_iterator.h \
  rpc/blockchain.h \
  rpc/client.h \
  rpc/protocol.h \
  rpc/rawtransaction_util.h \
  rpc/register.h \
  rpc/request.h \
  rpc/server.h \
  rpc/util.h \
  scheduler.h \
  script/descriptor.h \
  script/keyorigin.h \
  script/sigcache.h \
  script/sign.h \
  script/signingprovider.h \
  script/standard.h \
  shutdown.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/lockedpool.h \
  sync.h \
  threadsafety.h \
  threadinterrupt.h \
  timedata.h \
  torcontrol.h \
  txdb.h \
  txmempool.h \
  ui_interface.h \
  undo.h \
  util/asmap.h \
  util/bip32.h \
  util/bytevectorhash.h \
  util/check.h \
  util/error.h \
  util/fees.h \
  util/spanparsing.h \
  util/system.h \
  util/macros.h \
  util/memory.h \
  util/message.h \
  util/moneystr.h \
  util/rbf.h \
  util/settings.h \
  util/string.h \
  util/threadnames.h \
  util/time.h \
  util/translation.h \
  util/url.h \
  util/vector.h \
  validation.h \
  validationinterface.h \
  versionbits.h \
  versionbitsinfo.h \
  walletinitinterface.h \
  wallet/coincontrol.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/feebumper.h \
  wallet/fees.h \
  wallet/ismine.h \
  wallet/load.h \
  wallet/rpcwallet.h \
  wallet/scriptpubkeyman.h \
  wallet/wallet.h \
  wallet/walletdb.h \
  wallet/wallettool.h \
  wallet/walletutil.h \
  wallet/coinselection.h \
  warnings.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqconfig.h\
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h \
  zmq/zmqrpc.h


# server: shared between bitsilverd and bitsilver-qt
# Contains code accessing mempool and chain state that is meant to be separated
# from wallet and gui code (see node/README.md). Shared code should go in
# libbitsilver_common or libbitsilver_util libraries, instead.
libbitsilver_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libbitsilver_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_server_a_SOURCES = addrdb.cpp addrman.cpp banman.cpp \
	blockencodings.cpp blockfilter.cpp chain.cpp \
	consensus/tx_verify.cpp flatfile.cpp httprpc.cpp \
	httpserver.cpp index/base.cpp index/blockfilterindex.cpp \
	index/txindex.cpp interfaces/chain.cpp interfaces/node.cpp \
	init.cpp dbwrapper.cpp miner.cpp net.cpp net_processing.cpp \
	node/coin.cpp node/coinstats.cpp node/context.cpp \
	node/psbt.cpp node/transaction.cpp noui.cpp policy/fees.cpp \
	policy/rbf.cpp policy/settings.cpp pow.cpp rest.cpp \
	rpc/blockchain.cpp rpc/mining.cpp rpc/misc.cpp rpc/net.cpp \
	rpc/rawtransaction.cpp rpc/server.cpp script/sigcache.cpp \
	shutdown.cpp timedata.cpp torcontrol.cpp txdb.cpp \
	txmempool.cpp ui_interface.cpp validation.cpp \
	validationinterface.cpp versionbits.cpp $(BITSILVER_CORE_H) \
	$(am__append_8) $(am__append_9)
libbitsilver_zmq_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(ZMQ_CFLAGS)
libbitsilver_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_zmq_a_SOURCES = \
  zmq/zmqabstractnotifier.cpp \
  zmq/zmqnotificationinterface.cpp \
  zmq/zmqpublishnotifier.cpp \
  zmq/zmqrpc.cpp


# wallet: shared between bitsilverd and bitsilver-qt, but only linked
# when wallet enabled
libbitsilver_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_wallet_a_SOURCES = \
  interfaces/wallet.cpp \
  wallet/coincontrol.cpp \
  wallet/crypter.cpp \
  wallet/db.cpp \
  wallet/feebumper.cpp \
  wallet/fees.cpp \
  wallet/load.cpp \
  wallet/rpcdump.cpp \
  wallet/rpcwallet.cpp \
  wallet/scriptpubkeyman.cpp \
  wallet/wallet.cpp \
  wallet/walletdb.cpp \
  wallet/walletutil.cpp \
  wallet/coinselection.cpp \
  $(BITSILVER_CORE_H)

libbitsilver_wallet_tool_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_wallet_tool_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_wallet_tool_a_SOURCES = \
  wallet/wallettool.cpp \
  $(BITSILVER_CORE_H)


# crypto primitives library
crypto_libbitsilver_crypto_base_a_CPPFLAGS = $(AM_CPPFLAGS)
crypto_libbitsilver_crypto_base_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
crypto_libbitsilver_crypto_base_a_SOURCES = crypto/aes.cpp \
	crypto/aes.h crypto/chacha_poly_aead.h \
	crypto/chacha_poly_aead.cpp crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/hkdf_sha256_32.cpp \
	crypto/hkdf_sha256_32.h crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/poly1305.h crypto/poly1305.cpp \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/siphash.cpp \
	crypto/siphash.h $(am__append_10)
crypto_libbitsilver_crypto_sse41_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(SSE41_CXXFLAGS)
crypto_libbitsilver_crypto_sse41_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_SSE41
crypto_libbitsilver_crypto_sse41_a_SOURCES = crypto/sha256_sse41.cpp
crypto_libbitsilver_crypto_avx2_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(AVX2_CXXFLAGS)
crypto_libbitsilver_crypto_avx2_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_AVX2
crypto_libbitsilver_crypto_avx2_a_SOURCES = crypto/sha256_avx2.cpp
crypto_libbitsilver_crypto_shani_a_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) $(SHANI_CXXFLAGS)
crypto_libbitsilver_crypto_shani_a_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_SHANI
crypto_libbitsilver_crypto_shani_a_SOURCES = crypto/sha256_shani.cpp

# consensus: shared between all executables that validate any consensus rules.
libbitsilver_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_consensus_a_SOURCES = \
  amount.h \
  arith_uint256.cpp \
  arith_uint256.h \
  consensus/merkle.cpp \
  consensus/merkle.h \
  consensus/params.h \
  consensus/tx_check.cpp \
  consensus/validation.h \
  hash.cpp \
  hash.h \
  prevector.h \
  primitives/block.cpp \
  primitives/block.h \
  primitives/transaction.cpp \
  primitives/transaction.h \
  pubkey.cpp \
  pubkey.h \
  script/bitsilverconsensus.cpp \
  script/interpreter.cpp \
  script/interpreter.h \
  script/script.cpp \
  script/script.h \
  script/script_error.cpp \
  script/script_error.h \
  serialize.h \
  span.h \
  tinyformat.h \
  uint256.cpp \
  uint256.h \
  util/strencodings.cpp \
  util/strencodings.h \
  version.h


# common: shared between bitsilverd, and bitsilver-qt and non-server tools
libbitsilver_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_common_a_SOURCES = \
  base58.cpp \
  bech32.cpp \
  bloom.cpp \
  chainparams.cpp \
  coins.cpp \
  compressor.cpp \
  core_read.cpp \
  core_write.cpp \
  key.cpp \
  key_io.cpp \
  merkleblock.cpp \
  netaddress.cpp \
  netbase.cpp \
  net_permissions.cpp \
  outputtype.cpp \
  policy/feerate.cpp \
  policy/policy.cpp \
  protocol.cpp \
  psbt.cpp \
  rpc/rawtransaction_util.cpp \
  rpc/util.cpp \
  scheduler.cpp \
  script/descriptor.cpp \
  script/sign.cpp \
  script/signingprovider.cpp \
  script/standard.cpp \
  versionbitsinfo.cpp \
  warnings.cpp \
  $(BITSILVER_CORE_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libbitsilver_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_util_a_SOURCES = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp \
	compat/glibc_sanity_fdelt.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	interfaces/handler.cpp logging.cpp random.cpp randomenv.cpp \
	rpc/request.cpp support/cleanse.cpp sync.cpp \
	threadinterrupt.cpp util/asmap.cpp util/bip32.cpp \
	util/bytevectorhash.cpp util/error.cpp util/fees.cpp \
	util/system.cpp util/message.cpp util/moneystr.cpp \
	util/rbf.cpp util/settings.cpp util/threadnames.cpp \
	util/spanparsing.cpp util/strencodings.cpp util/string.cpp \
	util/time.cpp util/url.cpp $(BITSILVER_CORE_H) \
	$(am__append_11)

# cli: shared between bitsilver-cli and bitsilver-qt
libbitsilver_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
libbitsilver_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitsilver_cli_a_SOURCES = \
  compat/stdin.h \
  compat/stdin.cpp \
  rpc/client.cpp \
  $(BITSILVER_CORE_H)

nodist_libbitsilver_util_a_SOURCES = $(srcdir)/obj/build.h
#

# bitsilverd binary #
bitsilverd_SOURCES = bitsilverd.cpp $(am__append_13)
bitsilverd_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
bitsilverd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitsilverd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitsilverd_LDADD = $(LIBBITSILVER_SERVER) $(LIBBITSILVER_WALLET) \
	$(LIBBITSILVER_COMMON) $(LIBUNIVALUE) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_ZMQ) $(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
	$(LIBMEMENV) $(LIBSECP256K1) $(BOOST_LIBS) $(BDB_LIBS) \
	$(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(ZMQ_LIBS)

# bitsilver-cli binary #
bitsilver_cli_SOURCES = bitsilver-cli.cpp $(am__append_14)
bitsilver_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(EVENT_CFLAGS)
bitsilver_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitsilver_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitsilver_cli_LDADD = $(LIBBITSILVER_CLI) $(LIBUNIVALUE) \
	$(LIBBITSILVER_UTIL) $(LIBBITSILVER_CRYPTO) $(BOOST_LIBS) \
	$(EVENT_LIBS)
#

# bitsilver-tx binary #
bitsilver_tx_SOURCES = bitsilver-tx.cpp $(am__append_15)
bitsilver_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
bitsilver_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitsilver_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitsilver_tx_LDADD = $(LIBUNIVALUE) $(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_UTIL) $(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBSECP256K1) $(BOOST_LIBS)
#

# bitsilver-wallet binary #
bitsilver_wallet_SOURCES = bitsilver-wallet.cpp $(am__append_16)
bitsilver_wallet_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
bitsilver_wallet_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitsilver_wallet_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitsilver_wallet_LDADD = $(LIBBITSILVER_WALLET_TOOL) \
	$(LIBBITSILVER_WALLET) $(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_CONSENSUS) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CRYPTO) $(LIBBITSILVER_ZMQ) $(LIBLEVELDB) \
	$(LIBLEVELDB_SSE42) $(LIBMEMENV) $(LIBSECP256K1) \
	$(LIBUNIVALUE) $(BOOST_LIBS) $(BDB_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) \
	$(ZMQ_LIBS)
#

# bitsilverconsensus library #
include_HEADERS = script/bitsilverconsensus.h
libbitsilverconsensus_la_SOURCES =  \
	support/cleanse.cpp \
	$(crypto_libbitsilver_crypto_base_a_SOURCES) \
	$(libbitsilver_consensus_a_SOURCES) \
	$(am__append_17)
libbitsilverconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
libbitsilverconsensus_la_LIBADD = $(LIBSECP256K1)
libbitsilverconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITSILVER_INTERNAL
libbitsilverconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)

#
CTAES_DIST = crypto/ctaes/bench.c crypto/ctaes/ctaes.c \
	crypto/ctaes/ctaes.h crypto/ctaes/README.md \
	crypto/ctaes/test.c
CLEANFILES = $(EXTRA_LIBRARIES) *.gcda *.gcno compat/*.gcda \
	compat/*.gcno consensus/*.gcda consensus/*.gcno crypto/*.gcda \
	crypto/*.gcno policy/*.gcda policy/*.gcno primitives/*.gcda \
	primitives/*.gcno script/*.gcda script/*.gcno support/*.gcda \
	support/*.gcno univalue/*.gcda univalue/*.gcno wallet/*.gcda \
	wallet/*.gcno wallet/test/*.gcda wallet/test/*.gcno zmq/*.gcda \
	zmq/*.gcno obj/build.h $(am__append_47) $(am__append_51) \
	$(am__append_60) $(am__append_67)
EXTRA_DIST = $(CTAES_DIST)
LIBCRC32C_INT = crc32c/libcrc32c.a
LIBLEVELDB_SSE42_INT = leveldb/libleveldb_sse42.a
LIBCRC32C = $(LIBCRC32C_INT) $(am__append_26) \
	$(am__append_28)
CRC32C_CPPFLAGS_INT =  \
	-I$(srcdir)/crc32c/include \
	-DHAVE_BUILTIN_PREFETCH=1 \
	-DHAVE_MM_PREFETCH=1 \
	-DHAVE_STRONG_GETAUXVAL=0 \
	-DHAVE_WEAK_GETAUXVAL=1 \
	-DCRC32C_TESTS_BUILT_WITH_GLOG=0 \
	$(am__append_19) $(am__append_20) \
	$(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_24)
crc32c_libcrc32c_a_CPPFLAGS = $(AM_CPPFLAGS) $(CRC32C_CPPFLAGS_INT) $(CRC32C_CPPFLAGS)
crc32c_libcrc32c_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
crc32c_libcrc32c_a_SOURCES =  \
	crc32c/include/crc32c/crc32c.h \
	crc32c/src/crc32c_arm64.h \
	crc32c/src/crc32c_arm64_linux_check.h \
	crc32c/src/crc32c_internal.h \
	crc32c/src/crc32c_prefetch.h \
	crc32c/src/crc32c_read_le.h \
	crc32c/src/crc32c_round_up.h \
	crc32c/src/crc32c_sse42_check.h \
	crc32c/src/crc32c_sse42.h \
	crc32c/src/crc32c.cc \
	crc32c/src/crc32c_portable.cc
LIBCRC32C_SSE42_INT = crc32c/libcrc32c_sse42.a
crc32c_libcrc32c_sse42_a_CPPFLAGS = $(crc32c_libcrc32c_a_CPPFLAGS)
crc32c_libcrc32c_sse42_a_CXXFLAGS = $(crc32c_libcrc32c_a_CXXFLAGS) $(SSE42_CXXFLAGS)
crc32c_libcrc32c_sse42_a_SOURCES = crc32c/src/crc32c_sse42.cc
#LIBCRC32C_ARM_CRC_INT = crc32c/libcrc32c_arm_crc.a
#crc32c_libcrc32c_arm_crc_a_CPPFLAGS = $(crc32c_libcrc32c_a_CPPFLAGS)
#crc32c_libcrc32c_arm_crc_a_CXXFLAGS = $(crc32c_libcrc32c_a_CXXFLAGS) $(ARM_CRC_CXXFLAGS)
#crc32c_libcrc32c_arm_crc_a_SOURCES = crc32c/src/crc32c_arm64.cc
LIBLEVELDB_INT = leveldb/libleveldb.a
LIBMEMENV_INT = leveldb/libmemenv.a
LEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb \
	-I$(srcdir)/crc32c/include \
	-D__STDC_LIMIT_MACROS -DHAVE_SNAPPY=0 \
	-DHAVE_CRC32C=1 \
	-DHAVE_FDATASYNC=0 \
	-DHAVE_FULLFSYNC=0 \
	-DHAVE_O_CLOEXEC=0 \
	$(am__append_33) $(am__append_34) \
	$(am__append_35) $(am__append_36)
leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)
leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
leveldb_libleveldb_a_SOURCES =  \
	leveldb/port/port_stdcxx.h \
	leveldb/port/port.h \
	leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h \
	leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h \
	leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h \
	leveldb/db/log_format.h \
	leveldb/db/memtable.h \
	leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h \
	leveldb/db/filename.h \
	leveldb/db/version_edit.h \
	leveldb/db/dbformat.h \
	leveldb/db/builder.h \
	leveldb/db/log_writer.h \
	leveldb/db/db_iter.h \
	leveldb/db/skiplist.h \
	leveldb/db/db_impl.h \
	leveldb/db/table_cache.h \
	leveldb/db/snapshot.h \
	leveldb/db/log_reader.h \
	leveldb/table/filter_block.h \
	leveldb/table/block_builder.h \
	leveldb/table/block.h \
	leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h \
	leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h \
	leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h \
	leveldb/util/arena.h \
	leveldb/util/random.h \
	leveldb/util/posix_logger.h \
	leveldb/util/hash.h \
	leveldb/util/histogram.h \
	leveldb/util/coding.h \
	leveldb/util/testutil.h \
	leveldb/util/mutexlock.h \
	leveldb/util/logging.h \
	leveldb/util/no_destructor.h \
	leveldb/util/testharness.h \
	leveldb/util/windows_logger.h \
	leveldb/db/builder.cc leveldb/db/c.cc \
	leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc \
	leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc \
	leveldb/db/repair.cc \
	leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc \
	leveldb/table/block.cc \
	leveldb/table/filter_block.cc \
	leveldb/table/format.cc \
	leveldb/table/iterator.cc \
	leveldb/table/merger.cc \
	leveldb/table/table_builder.cc \
	leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc \
	leveldb/util/bloom.cc \
	leveldb/util/cache.cc \
	leveldb/util/coding.cc \
	leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc \
	leveldb/util/env.cc \
	leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc \
	leveldb/util/histogram.cc \
	leveldb/util/logging.cc \
	leveldb/util/options.cc \
	leveldb/util/status.cc $(am__append_37) \
	$(am__append_38)
leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)
leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)
leveldb_libmemenv_a_SOURCES =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
LIBTEST_UTIL = libtest_util.a $(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CRYPTO_BASE)
TEST_UTIL_H = \
    test/util/blockfilter.h \
    test/util/logging.h \
    test/util/mining.h \
    test/util/setup_common.h \
    test/util/str.h \
    test/util/transaction_utils.h \
    test/util/wallet.h

libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libtest_util_a_SOURCES = \
  test/util/blockfilter.cpp \
  test/util/logging.cpp \
  test/util/mining.cpp \
  test/util/setup_common.cpp \
  test/util/str.cpp \
  test/util/transaction_utils.cpp \
  test/util/wallet.cpp \
  $(TEST_UTIL_H)

FUZZ_TARGETS = \
  test/fuzz/addr_info_deserialize \
  test/fuzz/address_deserialize \
  test/fuzz/addrman_deserialize \
  test/fuzz/asmap \
  test/fuzz/banentry_deserialize \
  test/fuzz/base_encode_decode \
  test/fuzz/bech32 \
  test/fuzz/block \
  test/fuzz/block_deserialize \
  test/fuzz/block_file_info_deserialize \
  test/fuzz/block_filter_deserialize \
  test/fuzz/block_header_and_short_txids_deserialize \
  test/fuzz/blockheader_deserialize \
  test/fuzz/blocklocator_deserialize \
  test/fuzz/blockmerkleroot \
  test/fuzz/blocktransactions_deserialize \
  test/fuzz/blocktransactionsrequest_deserialize \
  test/fuzz/blockundo_deserialize \
  test/fuzz/bloom_filter \
  test/fuzz/bloomfilter_deserialize \
  test/fuzz/coins_deserialize \
  test/fuzz/decode_tx \
  test/fuzz/descriptor_parse \
  test/fuzz/diskblockindex_deserialize \
  test/fuzz/eval_script \
  test/fuzz/fee_rate_deserialize \
  test/fuzz/flat_file_pos_deserialize \
  test/fuzz/float \
  test/fuzz/hex \
  test/fuzz/integer \
  test/fuzz/inv_deserialize \
  test/fuzz/key \
  test/fuzz/key_io \
  test/fuzz/key_origin_info_deserialize \
  test/fuzz/locale \
  test/fuzz/merkle_block_deserialize \
  test/fuzz/messageheader_deserialize \
  test/fuzz/netaddr_deserialize \
  test/fuzz/netaddress \
  test/fuzz/out_point_deserialize \
  test/fuzz/p2p_transport_deserializer \
  test/fuzz/parse_hd_keypath \
  test/fuzz/parse_iso8601 \
  test/fuzz/parse_numbers \
  test/fuzz/parse_script \
  test/fuzz/parse_univalue \
  test/fuzz/partial_merkle_tree_deserialize \
  test/fuzz/partially_signed_transaction_deserialize \
  test/fuzz/prefilled_transaction_deserialize \
  test/fuzz/process_message \
  test/fuzz/process_message_addr \
  test/fuzz/process_message_block \
  test/fuzz/process_message_blocktxn \
  test/fuzz/process_message_cmpctblock \
  test/fuzz/process_message_feefilter \
  test/fuzz/process_message_filteradd \
  test/fuzz/process_message_filterclear \
  test/fuzz/process_message_filterload \
  test/fuzz/process_message_getaddr \
  test/fuzz/process_message_getblocks \
  test/fuzz/process_message_getblocktxn \
  test/fuzz/process_message_getdata \
  test/fuzz/process_message_getheaders \
  test/fuzz/process_message_headers \
  test/fuzz/process_message_inv \
  test/fuzz/process_message_mempool \
  test/fuzz/process_message_notfound \
  test/fuzz/process_message_ping \
  test/fuzz/process_message_pong \
  test/fuzz/process_message_sendcmpct \
  test/fuzz/process_message_sendheaders \
  test/fuzz/process_message_tx \
  test/fuzz/process_message_verack \
  test/fuzz/process_message_version \
  test/fuzz/psbt \
  test/fuzz/psbt_input_deserialize \
  test/fuzz/psbt_output_deserialize \
  test/fuzz/pub_key_deserialize \
  test/fuzz/rolling_bloom_filter \
  test/fuzz/script \
  test/fuzz/script_deserialize \
  test/fuzz/script_flags \
  test/fuzz/script_ops \
  test/fuzz/scriptnum_ops \
  test/fuzz/service_deserialize \
  test/fuzz/snapshotmetadata_deserialize \
  test/fuzz/spanparsing \
  test/fuzz/strprintf \
  test/fuzz/sub_net_deserialize \
  test/fuzz/transaction \
  test/fuzz/tx_in \
  test/fuzz/tx_in_deserialize \
  test/fuzz/tx_out \
  test/fuzz/txoutcompressor_deserialize \
  test/fuzz/txundo_deserialize \
  test/fuzz/uint160_deserialize \
  test/fuzz/uint256_deserialize

TEST_SRCDIR = test
TEST_BINARY = test/test_bitsilver$(EXEEXT)
JSON_TEST_FILES = \
  test/data/script_tests.json \
  test/data/base58_encode_decode.json \
  test/data/blockfilters.json \
  test/data/key_io_valid.json \
  test/data/key_io_invalid.json \
  test/data/script_tests.json \
  test/data/sighash.json \
  test/data/tx_invalid.json \
  test/data/tx_valid.json

RAW_TEST_FILES = \
  test/data/asmap.raw

GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)
BITSILVER_TEST_SUITE = test/main.cpp $(TEST_UTIL_H) \
	$(am__append_42) $(am__append_44)
FUZZ_SUITE = \
  test/fuzz/fuzz.cpp \
  test/fuzz/fuzz.h \
  test/fuzz/FuzzedDataProvider.h \
  test/fuzz/util.h

FUZZ_SUITE_LD_COMMON = \
 $(LIBBITSILVER_SERVER) \
 $(LIBBITSILVER_COMMON) \
 $(LIBBITSILVER_UTIL) \
 $(LIBTEST_UTIL) \
 $(LIBBITSILVER_CONSENSUS) \
 $(LIBBITSILVER_CRYPTO) \
 $(LIBBITSILVER_CLI) \
 $(LIBUNIVALUE) \
 $(LIBLEVELDB) \
 $(LIBLEVELDB_SSE42) \
 $(BOOST_LIBS) \
 $(LIBMEMENV) \
 $(LIBSECP256K1) \
 $(EVENT_LIBS) \
 $(EVENT_PTHREADS_LIBS)


# test_bitsilver binary #
BITSILVER_TESTS = test/arith_uint256_tests.cpp \
	test/scriptnum10.h test/addrman_tests.cpp \
	test/amount_tests.cpp \
	test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bech32_tests.cpp \
	test/bip32_tests.cpp \
	test/blockchain_tests.cpp \
	test/blockencodings_tests.cpp \
	test/blockfilter_tests.cpp \
	test/blockfilter_index_tests.cpp \
	test/bloom_tests.cpp test/bswap_tests.cpp \
	test/checkqueue_tests.cpp \
	test/coins_tests.cpp \
	test/compilerbug_tests.cpp \
	test/compress_tests.cpp \
	test/crypto_tests.cpp \
	test/cuckoocache_tests.cpp \
	test/denialofservice_tests.cpp \
	test/descriptor_tests.cpp \
	test/flatfile_tests.cpp test/fs_tests.cpp \
	test/getarg_tests.cpp test/hash_tests.cpp \
	test/key_io_tests.cpp test/key_tests.cpp \
	test/limitedmap_tests.cpp \
	test/logging_tests.cpp \
	test/dbwrapper_tests.cpp \
	test/validation_tests.cpp \
	test/mempool_tests.cpp \
	test/merkle_tests.cpp \
	test/merkleblock_tests.cpp \
	test/miner_tests.cpp \
	test/multisig_tests.cpp test/net_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp \
	test/policyestimator_tests.cpp \
	test/pow_tests.cpp test/prevector_tests.cpp \
	test/raii_event_tests.cpp \
	test/random_tests.cpp \
	test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp \
	test/script_p2sh_tests.cpp \
	test/script_tests.cpp \
	test/script_standard_tests.cpp \
	test/scriptnum_tests.cpp \
	test/serialize_tests.cpp \
	test/settings_tests.cpp \
	test/sighash_tests.cpp \
	test/sigopcount_tests.cpp \
	test/skiplist_tests.cpp \
	test/streams_tests.cpp test/sync_tests.cpp \
	test/util_threadnames_tests.cpp \
	test/timedata_tests.cpp \
	test/torcontrol_tests.cpp \
	test/transaction_tests.cpp \
	test/txindex_tests.cpp \
	test/txvalidation_tests.cpp \
	test/txvalidationcache_tests.cpp \
	test/uint256_tests.cpp test/util_tests.cpp \
	test/validation_block_tests.cpp \
	test/validation_flush_tests.cpp \
	test/versionbits_tests.cpp $(am__append_41) \
	$(am__append_43)
test_test_bitsilver_SOURCES = $(BITSILVER_TEST_SUITE) $(BITSILVER_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
test_test_bitsilver_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(TESTDEFS) $(EVENT_CFLAGS)
test_test_bitsilver_LDADD = $(LIBTEST_UTIL) \
	$(am__append_45) $(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_CLI) $(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
	$(LIBMEMENV) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(LIBSECP256K1) $(EVENT_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(BDB_LIBS) \
	$(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS) \
	$(am__append_46)
test_test_bitsilver_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_test_bitsilver_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
#test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DADDR_INFO_DESERIALIZE=1
#test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_addr_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_addr_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_address_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DADDRESS_DESERIALIZE=1
#test_fuzz_address_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_address_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_address_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_address_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_addrman_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DADDRMAN_DESERIALIZE=1
#test_fuzz_addrman_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_addrman_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_addrman_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_addrman_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_asmap_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_asmap_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_asmap_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_asmap_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_asmap_SOURCES = $(FUZZ_SUITE) test/fuzz/asmap.cpp
#test_fuzz_banentry_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBANENTRY_DESERIALIZE=1
#test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_banentry_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_banentry_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_base_encode_decode_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_base_encode_decode_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_base_encode_decode_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_base_encode_decode_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_base_encode_decode_SOURCES = $(FUZZ_SUITE) test/fuzz/base_encode_decode.cpp
#test_fuzz_bech32_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_bech32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_bech32_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_bech32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_bech32_SOURCES = $(FUZZ_SUITE) test/fuzz/bech32.cpp
#test_fuzz_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_block_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_block_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_block_SOURCES = $(FUZZ_SUITE) test/fuzz/block.cpp
#test_fuzz_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCK_DESERIALIZE=1
#test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_block_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_block_file_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCK_FILE_INFO_DESERIALIZE=1
#test_fuzz_block_file_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_block_file_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_block_file_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_block_file_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_block_filter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCK_FILTER_DESERIALIZE=1
#test_fuzz_block_filter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_block_filter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_block_filter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1
#test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_block_header_and_short_txids_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blockheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKHEADER_DESERIALIZE=1
#test_fuzz_blockheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blockheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blockheader_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blockheader_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blocklocator_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKLOCATOR_DESERIALIZE=1
#test_fuzz_blocklocator_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blocklocator_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blocklocator_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blocklocator_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blockmerkleroot_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKMERKLEROOT=1
#test_fuzz_blockmerkleroot_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blockmerkleroot_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blockmerkleroot_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blockmerkleroot_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blocktransactions_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKTRANSACTIONS_DESERIALIZE=1
#test_fuzz_blocktransactions_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blocktransactions_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blocktransactions_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blocktransactions_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKTRANSACTIONSREQUEST_DESERIALIZE=1
#test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blocktransactionsrequest_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blocktransactionsrequest_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_blockundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOCKUNDO_DESERIALIZE=1
#test_fuzz_blockundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_blockundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_blockundo_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_blockundo_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_bloom_filter_SOURCES = $(FUZZ_SUITE) test/fuzz/bloom_filter.cpp
#test_fuzz_bloomfilter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DBLOOMFILTER_DESERIALIZE=1
#test_fuzz_bloomfilter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_bloomfilter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_bloomfilter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_coins_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DCOINS_DESERIALIZE=1
#test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_coins_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_coins_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_decode_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_decode_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_decode_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_decode_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_decode_tx_SOURCES = $(FUZZ_SUITE) test/fuzz/decode_tx.cpp
#test_fuzz_descriptor_parse_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_descriptor_parse_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_descriptor_parse_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_descriptor_parse_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_descriptor_parse_SOURCES = $(FUZZ_SUITE) test/fuzz/descriptor_parse.cpp
#test_fuzz_diskblockindex_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DDISKBLOCKINDEX_DESERIALIZE=1
#test_fuzz_diskblockindex_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_diskblockindex_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_diskblockindex_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_diskblockindex_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_eval_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_eval_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_eval_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_eval_script_SOURCES = $(FUZZ_SUITE) test/fuzz/eval_script.cpp
#test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DFEE_RATE_DESERIALIZE=1
#test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_fee_rate_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_fee_rate_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1
#test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_flat_file_pos_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_float_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_float_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_float_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_float_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_float_SOURCES = $(FUZZ_SUITE) test/fuzz/float.cpp
#test_fuzz_hex_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_hex_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_hex_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_hex_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_hex_SOURCES = $(FUZZ_SUITE) test/fuzz/hex.cpp
#test_fuzz_integer_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_integer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_integer_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_integer_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_integer_SOURCES = $(FUZZ_SUITE) test/fuzz/integer.cpp
#test_fuzz_inv_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DINV_DESERIALIZE=1
#test_fuzz_inv_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_inv_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_inv_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_inv_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_key_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_key_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_key_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_key_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_key_SOURCES = $(FUZZ_SUITE) test/fuzz/key.cpp
#test_fuzz_key_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_key_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_key_io_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_key_io_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_key_io_SOURCES = $(FUZZ_SUITE) test/fuzz/key_io.cpp
#test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1
#test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_key_origin_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_key_origin_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_locale_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_locale_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_locale_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_locale_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_locale_SOURCES = $(FUZZ_SUITE) test/fuzz/locale.cpp
#test_fuzz_merkle_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMERKLE_BLOCK_DESERIALIZE=1
#test_fuzz_merkle_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_merkle_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_merkle_block_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_messageheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGEHEADER_DESERIALIZE=1
#test_fuzz_messageheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_messageheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_messageheader_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_messageheader_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_netaddr_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DNETADDR_DESERIALIZE=1
#test_fuzz_netaddr_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_netaddr_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_netaddr_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_netaddr_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_netaddress_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_netaddress_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_netaddress_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_netaddress_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_netaddress_SOURCES = $(FUZZ_SUITE) test/fuzz/netaddress.cpp
#test_fuzz_out_point_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DOUT_POINT_DESERIALIZE=1
#test_fuzz_out_point_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_out_point_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_out_point_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_out_point_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_p2p_transport_deserializer_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_p2p_transport_deserializer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_p2p_transport_deserializer_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_p2p_transport_deserializer_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_p2p_transport_deserializer_SOURCES = $(FUZZ_SUITE) test/fuzz/p2p_transport_deserializer.cpp
#test_fuzz_parse_hd_keypath_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_parse_hd_keypath_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_parse_hd_keypath_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_parse_hd_keypath_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_parse_hd_keypath_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_hd_keypath.cpp
#test_fuzz_parse_iso8601_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_parse_iso8601_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_iso8601.cpp
#test_fuzz_parse_numbers_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_parse_numbers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_parse_numbers_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_parse_numbers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_parse_numbers_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_numbers.cpp
#test_fuzz_parse_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_parse_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_parse_script_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_parse_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_parse_script_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_script.cpp
#test_fuzz_parse_univalue_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_parse_univalue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_parse_univalue_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_parse_univalue_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_parse_univalue_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_univalue.cpp
#test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPARTIAL_MERKLE_TREE_DESERIALIZE=1
#test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_partial_merkle_tree_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_partial_merkle_tree_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPARTIALLY_SIGNED_TRANSACTION_DESERIALIZE=1
#test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_partially_signed_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_partially_signed_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_prefilled_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPREFILLED_TRANSACTION_DESERIALIZE=1
#test_fuzz_prefilled_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_prefilled_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_prefilled_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_process_message_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_process_message_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_addr_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=addr
#test_fuzz_process_message_addr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_addr_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_addr_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_addr_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=block
#test_fuzz_process_message_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_block_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_block_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_block_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_blocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=blocktxn
#test_fuzz_process_message_blocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_blocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_blocktxn_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_blocktxn_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_cmpctblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=cmpctblock
#test_fuzz_process_message_cmpctblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_cmpctblock_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_cmpctblock_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_cmpctblock_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_feefilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=feefilter
#test_fuzz_process_message_feefilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_feefilter_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_feefilter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_feefilter_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_filteradd_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=filteradd
#test_fuzz_process_message_filteradd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_filteradd_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_filteradd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_filteradd_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_filterclear_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=filterclear
#test_fuzz_process_message_filterclear_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_filterclear_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_filterclear_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_filterclear_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_filterload_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=filterload
#test_fuzz_process_message_filterload_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_filterload_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_filterload_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_filterload_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_getaddr_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=getaddr
#test_fuzz_process_message_getaddr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_getaddr_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_getaddr_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_getaddr_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_getblocks_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=getblocks
#test_fuzz_process_message_getblocks_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_getblocks_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_getblocks_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_getblocks_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_getblocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=getblocktxn
#test_fuzz_process_message_getblocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_getblocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_getblocktxn_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_getblocktxn_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_getdata_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=getdata
#test_fuzz_process_message_getdata_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_getdata_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_getdata_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_getdata_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_getheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=getheaders
#test_fuzz_process_message_getheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_getheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_getheaders_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_getheaders_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_headers_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=headers
#test_fuzz_process_message_headers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_headers_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_headers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_headers_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_inv_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=inv
#test_fuzz_process_message_inv_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_inv_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_inv_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_inv_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_mempool_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=mempool
#test_fuzz_process_message_mempool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_mempool_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_mempool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_mempool_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_notfound_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=notfound
#test_fuzz_process_message_notfound_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_notfound_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_notfound_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_notfound_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_ping_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=ping
#test_fuzz_process_message_ping_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_ping_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_ping_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_ping_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_pong_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=pong
#test_fuzz_process_message_pong_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_pong_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_pong_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_pong_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_sendcmpct_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=sendcmpct
#test_fuzz_process_message_sendcmpct_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_sendcmpct_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_sendcmpct_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_sendcmpct_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_sendheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=sendheaders
#test_fuzz_process_message_sendheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_sendheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_sendheaders_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_sendheaders_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=tx
#test_fuzz_process_message_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_tx_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_verack_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=verack
#test_fuzz_process_message_verack_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_verack_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_verack_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_verack_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_process_message_version_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DMESSAGE_TYPE=version
#test_fuzz_process_message_version_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_process_message_version_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_process_message_version_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_process_message_version_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp
#test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_psbt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_psbt_SOURCES = $(FUZZ_SUITE) test/fuzz/psbt.cpp
#test_fuzz_psbt_input_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPSBT_INPUT_DESERIALIZE=1
#test_fuzz_psbt_input_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_psbt_input_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_psbt_input_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_psbt_input_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_psbt_output_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPSBT_OUTPUT_DESERIALIZE=1
#test_fuzz_psbt_output_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_psbt_output_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_psbt_output_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_psbt_output_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_pub_key_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DPUB_KEY_DESERIALIZE=1
#test_fuzz_pub_key_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_pub_key_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_rolling_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_rolling_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_rolling_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_rolling_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_rolling_bloom_filter_SOURCES = $(FUZZ_SUITE) test/fuzz/rolling_bloom_filter.cpp
#test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_script_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_script_SOURCES = $(FUZZ_SUITE) test/fuzz/script.cpp
#test_fuzz_script_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DSCRIPT_DESERIALIZE=1
#test_fuzz_script_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_script_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_script_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_script_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_script_flags_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_script_flags_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_script_flags_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_script_flags_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_script_flags_SOURCES = $(FUZZ_SUITE) test/fuzz/script_flags.cpp
#test_fuzz_script_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_script_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_script_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_script_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_script_ops_SOURCES = $(FUZZ_SUITE) test/fuzz/script_ops.cpp
#test_fuzz_scriptnum_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_scriptnum_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_scriptnum_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_scriptnum_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_scriptnum_ops_SOURCES = $(FUZZ_SUITE) test/fuzz/scriptnum_ops.cpp
#test_fuzz_service_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DSERVICE_DESERIALIZE=1
#test_fuzz_service_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_service_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_service_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_spanparsing_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_spanparsing_SOURCES = $(FUZZ_SUITE) test/fuzz/spanparsing.cpp
#test_fuzz_strprintf_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_strprintf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_strprintf_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_strprintf_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_strprintf_SOURCES = $(FUZZ_SUITE) test/fuzz/strprintf.cpp
#test_fuzz_sub_net_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DSUB_NET_DESERIALIZE=1
#test_fuzz_sub_net_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_sub_net_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_sub_net_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1
#test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_snapshotmetadata_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_transaction_SOURCES = $(FUZZ_SUITE) test/fuzz/transaction.cpp
#test_fuzz_tx_in_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_tx_in_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_tx_in_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_tx_in_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_tx_in_SOURCES = $(FUZZ_SUITE) test/fuzz/tx_in.cpp
#test_fuzz_tx_in_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DTX_IN_DESERIALIZE=1
#test_fuzz_tx_in_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_tx_in_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_tx_in_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_tx_in_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_tx_out_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES)
#test_fuzz_tx_out_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_tx_out_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_tx_out_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_tx_out_SOURCES = $(FUZZ_SUITE) test/fuzz/tx_out.cpp
#test_fuzz_txoutcompressor_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DTXOUTCOMPRESSOR_DESERIALIZE=1
#test_fuzz_txoutcompressor_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_txoutcompressor_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_txoutcompressor_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_txoutcompressor_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_txundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DTXUNDO_DESERIALIZE=1
#test_fuzz_txundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_txundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_txundo_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_txundo_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_uint160_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DUINT160_DESERIALIZE=1
#test_fuzz_uint160_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_uint160_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_uint160_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_uint160_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
#test_fuzz_uint256_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) -DUINT256_DESERIALIZE=1
#test_fuzz_uint256_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#test_fuzz_uint256_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)
#test_fuzz_uint256_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
#test_fuzz_uint256_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp
nodist_test_test_bitsilver_SOURCES = $(GENERATED_TEST_FILES)
CLEAN_BITSILVER_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES) $(BITSILVER_TESTS:=.log)
BENCH_SRCDIR = bench
BENCH_BINARY = bench/bench_bitsilver$(EXEEXT)
RAW_BENCH_FILES = \
  bench/data/block413567.raw

GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)
bench_bench_bitsilver_SOURCES = $(RAW_BENCH_FILES) \
	bench/bench_bitsilver.cpp bench/bench.cpp \
	bench/bench.h bench/block_assemble.cpp \
	bench/checkblock.cpp bench/checkqueue.cpp \
	bench/data.h bench/data.cpp \
	bench/duplicate_inputs.cpp \
	bench/examples.cpp bench/rollingbloom.cpp \
	bench/chacha20.cpp \
	bench/chacha_poly_aead.cpp \
	bench/crypto_hash.cpp \
	bench/ccoins_caching.cpp \
	bench/gcs_filter.cpp bench/merkle_root.cpp \
	bench/mempool_eviction.cpp \
	bench/mempool_stress.cpp \
	bench/rpc_blockchain.cpp \
	bench/rpc_mempool.cpp bench/util_time.cpp \
	bench/verify_script.cpp bench/base58.cpp \
	bench/bech32.cpp bench/lockedpool.cpp \
	bench/poly1305.cpp bench/prevector.cpp \
	$(am__append_50)
nodist_bench_bench_bitsilver_SOURCES = $(GENERATED_BENCH_FILES)
bench_bench_bitsilver_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
bench_bench_bitsilver_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bench_bench_bitsilver_LDADD =  \
	$(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_WALLET) \
	$(LIBBITSILVER_SERVER) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBTEST_UTIL) \
	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
	$(LIBMEMENV) $(LIBSECP256K1) $(LIBUNIVALUE) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(am__append_49) $(BOOST_LIBS) $(BDB_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(MINIUPNPC_LIBS)
bench_bench_bitsilver_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
CLEAN_BITSILVER_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)
QT_TS = \
  qt/locale/bitsilver_ar.ts \
  qt/locale/bitsilver_be_BY.ts \
  qt/locale/bitsilver_ca.ts \
  qt/locale/bitsilver_cs.ts \
  qt/locale/bitsilver_cs_CZ.ts \
  qt/locale/bitsilver_cy.ts \
  qt/locale/bitsilver_da.ts \
  qt/locale/bitsilver_de.ts \
  qt/locale/bitsilver_de_DE.ts \
  qt/locale/bitsilver_el.ts \
  qt/locale/bitsilver_el_GR.ts \
  qt/locale/bitsilver_en.ts \
  qt/locale/bitsilver_en_AU.ts \
  qt/locale/bitsilver_en_GB.ts \
  qt/locale/bitsilver_eo.ts \
  qt/locale/bitsilver_es.ts \
  qt/locale/bitsilver_es_CL.ts \
  qt/locale/bitsilver_es_CO.ts \
  qt/locale/bitsilver_es_DO.ts \
  qt/locale/bitsilver_es_ES.ts \
  qt/locale/bitsilver_es_MX.ts \
  qt/locale/bitsilver_es_VE.ts \
  qt/locale/bitsilver_et.ts \
  qt/locale/bitsilver_et_EE.ts \
  qt/locale/bitsilver_eu.ts \
  qt/locale/bitsilver_fa.ts \
  qt/locale/bitsilver_fi.ts \
  qt/locale/bitsilver_fil.ts \
  qt/locale/bitsilver_fr.ts \
  qt/locale/bitsilver_fr_CA.ts \
  qt/locale/bitsilver_fr_FR.ts \
  qt/locale/bitsilver_gl.ts \
  qt/locale/bitsilver_he.ts \
  qt/locale/bitsilver_he_IL.ts \
  qt/locale/bitsilver_hi.ts \
  qt/locale/bitsilver_hr.ts \
  qt/locale/bitsilver_hu.ts \
  qt/locale/bitsilver_hu_HU.ts \
  qt/locale/bitsilver_id.ts \
  qt/locale/bitsilver_id_ID.ts \
  qt/locale/bitsilver_is.ts \
  qt/locale/bitsilver_it.ts \
  qt/locale/bitsilver_it_IT.ts \
  qt/locale/bitsilver_ja.ts \
  qt/locale/bitsilver_ka.ts \
  qt/locale/bitsilver_kk.ts \
  qt/locale/bitsilver_km.ts \
  qt/locale/bitsilver_ko.ts \
  qt/locale/bitsilver_ku_IQ.ts \
  qt/locale/bitsilver_ky.ts \
  qt/locale/bitsilver_la.ts \
  qt/locale/bitsilver_lt.ts \
  qt/locale/bitsilver_lv.ts \
  qt/locale/bitsilver_lv_LV.ts \
  qt/locale/bitsilver_mk.ts \
  qt/locale/bitsilver_ml.ts \
  qt/locale/bitsilver_mn.ts \
  qt/locale/bitsilver_mr_IN.ts \
  qt/locale/bitsilver_ms.ts \
  qt/locale/bitsilver_ms_MY.ts \
  qt/locale/bitsilver_nb.ts \
  qt/locale/bitsilver_ne.ts \
  qt/locale/bitsilver_nl.ts \
  qt/locale/bitsilver_nl_NL.ts \
  qt/locale/bitsilver_pam.ts \
  qt/locale/bitsilver_pl.ts \
  qt/locale/bitsilver_pt.ts \
  qt/locale/bitsilver_pt_BR.ts \
  qt/locale/bitsilver_pt_PT.ts \
  qt/locale/bitsilver_ro.ts \
  qt/locale/bitsilver_ro_RO.ts \
  qt/locale/bitsilver_ru.ts \
  qt/locale/bitsilver_ru_RU.ts \
  qt/locale/bitsilver_si.ts \
  qt/locale/bitsilver_sk.ts \
  qt/locale/bitsilver_sk_SK.ts \
  qt/locale/bitsilver_sl.ts \
  qt/locale/bitsilver_sl_SI.ts \
  qt/locale/bitsilver_sn.ts \
  qt/locale/bitsilver_sr.ts \
  qt/locale/bitsilver_sr@latin.ts \
  qt/locale/bitsilver_sv.ts \
  qt/locale/bitsilver_szl.ts \
  qt/locale/bitsilver_ta.ts \
  qt/locale/bitsilver_te.ts \
  qt/locale/bitsilver_th.ts \
  qt/locale/bitsilver_tr.ts \
  qt/locale/bitsilver_tr_TR.ts \
  qt/locale/bitsilver_uk.ts \
  qt/locale/bitsilver_uk_UA.ts \
  qt/locale/bitsilver_ur.ts \
  qt/locale/bitsilver_uz@Cyrl.ts \
  qt/locale/bitsilver_vi.ts \
  qt/locale/bitsilver_vi_VN.ts \
  qt/locale/bitsilver_yo.ts \
  qt/locale/bitsilver_zh-Hans.ts \
  qt/locale/bitsilver_zh_CN.ts \
  qt/locale/bitsilver_zh_HK.ts \
  qt/locale/bitsilver_zh_TW.ts


# bitsilver qt core #
QT_FORMS_UI = \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/createwalletdialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/helpmessagedialog.ui \
  qt/forms/intro.ui \
  qt/forms/modaloverlay.ui \
  qt/forms/openuridialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/receivecoinsdialog.ui \
  qt/forms/receiverequestdialog.ui \
  qt/forms/debugwindow.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_createwalletdialog.cpp \
  qt/moc_bantablemodel.cpp \
  qt/moc_bitsilveraddressvalidator.cpp \
  qt/moc_bitsilveramountfield.cpp \
  qt/moc_bitsilver.cpp \
  qt/moc_bitsilvergui.cpp \
  qt/moc_bitsilverunits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_intro.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_modaloverlay.cpp \
  qt/moc_notificator.cpp \
  qt/moc_openuridialog.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_qrimagewidget.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_receivecoinsdialog.cpp \
  qt/moc_receiverequestdialog.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_utilitydialog.cpp \
  qt/moc_walletcontroller.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp

BITSILVER_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm \
  qt/macos_appnap.mm

QT_MOC = \
  qt/bitsilveramountfield.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_bitsilver.cpp
QT_QRC = qt/bitsilver.qrc
QT_QRC_LOCALE_CPP = qt/qrc_bitsilver_locale.cpp
QT_QRC_LOCALE = qt/bitsilver_locale.qrc
BITSILVER_QT_H = \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bantablemodel.h \
  qt/bitsilveraddressvalidator.h \
  qt/bitsilveramountfield.h \
  qt/bitsilver.h \
  qt/bitsilvergui.h \
  qt/bitsilverunits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/createwalletdialog.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/macos_appnap.h \
  qt/modaloverlay.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/platformstyle.h \
  qt/qrimagewidget.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/sendcoinsrecipient.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/walletcontroller.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/bitsilver.ico \
  qt/res/icons/bitsilver_testnet.ico \
  qt/res/icons/bitsilver.png \
  qt/res/icons/chevron.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/fontbigger.png \
  qt/res/icons/fontsmaller.png \
  qt/res/icons/hd_disabled.png \
  qt/res/icons/hd_enabled.png \
  qt/res/icons/history.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/network_disabled.png \
  qt/res/icons/overview.png \
  qt/res/icons/proxy.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_abandoned.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/warning.png

BITSILVER_QT_BASE_CPP = \
  qt/bantablemodel.cpp \
  qt/bitsilver.cpp \
  qt/bitsilveraddressvalidator.cpp \
  qt/bitsilveramountfield.cpp \
  qt/bitsilvergui.cpp \
  qt/bitsilverunits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/intro.cpp \
  qt/modaloverlay.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/platformstyle.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/splashscreen.cpp \
  qt/trafficgraphwidget.cpp \
  qt/utilitydialog.cpp

BITSILVER_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp
BITSILVER_QT_WALLET_CPP = \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/createwalletdialog.cpp \
  qt/editaddressdialog.cpp \
  qt/openuridialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentserver.cpp \
  qt/qrimagewidget.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletcontroller.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/walletview.cpp

BITSILVER_QT_CPP = $(BITSILVER_QT_BASE_CPP) \
	$(am__append_54) $(am__append_55)
RES_IMAGES = 
RES_MOVIES = $(wildcard $(srcdir)/qt/res/movies/spinner-*.png)
BITSILVER_RC = qt/res/bitsilver-qt-res.rc
BITSILVER_QT_INCLUDES = -DQT_NO_KEYWORDS
qt_libbitsilverqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(BITSILVER_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)

qt_libbitsilverqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_libbitsilverqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)
qt_libbitsilverqt_a_SOURCES = $(BITSILVER_QT_CPP) \
	$(BITSILVER_QT_H) $(QT_FORMS_UI) $(QT_QRC) \
	$(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) \
	$(RES_IMAGES) $(RES_MOVIES) $(am__append_56)
nodist_qt_libbitsilverqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# bitsilver-qt binary #
qt_bitsilver_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(BITSILVER_QT_INCLUDES) \
  $(QT_INCLUDES) $(QR_CFLAGS)

qt_bitsilver_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_bitsilver_qt_SOURCES = qt/main.cpp $(am__append_57)
qt_bitsilver_qt_LDADD = qt/libbitsilverqt.a \
	$(LIBBITSILVER_SERVER) $(am__append_58) \
	$(am__append_59) $(LIBBITSILVER_CLI) \
	$(LIBBITSILVER_COMMON) $(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
	$(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) \
	$(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) \
	$(LIBSECP256K1) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS)
qt_bitsilver_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_bitsilver_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM = $(QT_TS:.ts=.qm)
CLEAN_QT = $(nodist_qt_libbitsilverqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitsilver_locale.qrc
TEST_QT_MOC_CPP = qt/test/moc_apptests.cpp \
	qt/test/moc_compattests.cpp \
	qt/test/moc_rpcnestedtests.cpp \
	qt/test/moc_uritests.cpp \
	$(am__append_63)
TEST_QT_H = \
  qt/test/addressbooktests.h \
  qt/test/apptests.h \
  qt/test/compattests.h \
  qt/test/rpcnestedtests.h \
  qt/test/uritests.h \
  qt/test/util.h \
  qt/test/wallettests.h

qt_test_test_bitsilver_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITSILVER_INCLUDES) $(BITSILVER_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_TEST_INCLUDES)

qt_test_test_bitsilver_qt_SOURCES =  \
	qt/test/apptests.cpp \
	qt/test/compattests.cpp \
	qt/test/rpcnestedtests.cpp \
	qt/test/test_main.cpp \
	qt/test/uritests.cpp qt/test/util.cpp \
	$(TEST_QT_H) $(am__append_64)
nodist_qt_test_test_bitsilver_qt_SOURCES = $(TEST_QT_MOC_CPP)
qt_test_test_bitsilver_qt_LDADD =  \
	$(LIBBITSILVERQT) $(LIBBITSILVER_SERVER) \
	$(LIBTEST_UTIL) $(am__append_65) \
	$(am__append_66) $(LIBBITSILVER_CLI) \
	$(LIBBITSILVER_COMMON) \
	$(LIBBITSILVER_UTIL) \
	$(LIBBITSILVER_CONSENSUS) \
	$(LIBBITSILVER_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBLEVELDB_SSE42) \
	$(LIBMEMENV) $(BOOST_LIBS) \
	$(QT_DBUS_LIBS) $(QT_TEST_LIBS) \
	$(QT_LIBS) $(QR_LIBS) $(BDB_LIBS) \
	$(MINIUPNPC_LIBS) $(LIBSECP256K1) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
qt_test_test_bitsilver_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_test_test_bitsilver_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
CLEAN_BITSILVER_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test_util.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qt_locale.include $(srcdir)/Makefile.qttest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test_util.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qt_locale.include $(srcdir)/Makefile.qttest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
crc32c/src/$(am__dirstamp):
	@$(MKDIR_P) crc32c/src
	@: > crc32c/src/$(am__dirstamp)
crc32c/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crc32c/src/$(DEPDIR)
	@: > crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/src/crc32c_libcrc32c_a-crc32c.$(OBJEXT):  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/src/crc32c_libcrc32c_a-crc32c_portable.$(OBJEXT):  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/$(am__dirstamp):
	@$(MKDIR_P) crc32c
	@: > crc32c/$(am__dirstamp)

crc32c/libcrc32c.a: $(crc32c_libcrc32c_a_OBJECTS) $(crc32c_libcrc32c_a_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_a_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_at)-rm -f crc32c/libcrc32c.a
	$(AM_V_AR)$(crc32c_libcrc32c_a_AR) crc32c/libcrc32c.a $(crc32c_libcrc32c_a_OBJECTS) $(crc32c_libcrc32c_a_LIBADD)
	$(AM_V_at)$(RANLIB) crc32c/libcrc32c.a
crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.$(OBJEXT):  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)

crc32c/libcrc32c_arm_crc.a: $(crc32c_libcrc32c_arm_crc_a_OBJECTS) $(crc32c_libcrc32c_arm_crc_a_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_arm_crc_a_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_at)-rm -f crc32c/libcrc32c_arm_crc.a
	$(AM_V_AR)$(crc32c_libcrc32c_arm_crc_a_AR) crc32c/libcrc32c_arm_crc.a $(crc32c_libcrc32c_arm_crc_a_OBJECTS) $(crc32c_libcrc32c_arm_crc_a_LIBADD)
	$(AM_V_at)$(RANLIB) crc32c/libcrc32c_arm_crc.a
crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.$(OBJEXT):  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)

crc32c/libcrc32c_sse42.a: $(crc32c_libcrc32c_sse42_a_OBJECTS) $(crc32c_libcrc32c_sse42_a_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_sse42_a_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_at)-rm -f crc32c/libcrc32c_sse42.a
	$(AM_V_AR)$(crc32c_libcrc32c_sse42_a_AR) crc32c/libcrc32c_sse42.a $(crc32c_libcrc32c_sse42_a_OBJECTS) $(crc32c_libcrc32c_sse42_a_LIBADD)
	$(AM_V_at)$(RANLIB) crc32c/libcrc32c_sse42.a
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitsilver_crypto_avx2.a: $(crypto_libbitsilver_crypto_avx2_a_OBJECTS) $(crypto_libbitsilver_crypto_avx2_a_DEPENDENCIES) $(EXTRA_crypto_libbitsilver_crypto_avx2_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitsilver_crypto_avx2.a
	$(AM_V_AR)$(crypto_libbitsilver_crypto_avx2_a_AR) crypto/libbitsilver_crypto_avx2.a $(crypto_libbitsilver_crypto_avx2_a_OBJECTS) $(crypto_libbitsilver_crypto_avx2_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitsilver_crypto_avx2.a
crypto/crypto_libbitsilver_crypto_base_a-aes.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-chacha20.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-poly1305.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-sha1.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-siphash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitsilver_crypto_base.a: $(crypto_libbitsilver_crypto_base_a_OBJECTS) $(crypto_libbitsilver_crypto_base_a_DEPENDENCIES) $(EXTRA_crypto_libbitsilver_crypto_base_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitsilver_crypto_base.a
	$(AM_V_AR)$(crypto_libbitsilver_crypto_base_a_AR) crypto/libbitsilver_crypto_base.a $(crypto_libbitsilver_crypto_base_a_OBJECTS) $(crypto_libbitsilver_crypto_base_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitsilver_crypto_base.a
crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitsilver_crypto_shani.a: $(crypto_libbitsilver_crypto_shani_a_OBJECTS) $(crypto_libbitsilver_crypto_shani_a_DEPENDENCIES) $(EXTRA_crypto_libbitsilver_crypto_shani_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitsilver_crypto_shani.a
	$(AM_V_AR)$(crypto_libbitsilver_crypto_shani_a_AR) crypto/libbitsilver_crypto_shani.a $(crypto_libbitsilver_crypto_shani_a_OBJECTS) $(crypto_libbitsilver_crypto_shani_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitsilver_crypto_shani.a
crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitsilver_crypto_sse41.a: $(crypto_libbitsilver_crypto_sse41_a_OBJECTS) $(crypto_libbitsilver_crypto_sse41_a_DEPENDENCIES) $(EXTRA_crypto_libbitsilver_crypto_sse41_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitsilver_crypto_sse41.a
	$(AM_V_AR)$(crypto_libbitsilver_crypto_sse41_a_AR) crypto/libbitsilver_crypto_sse41.a $(crypto_libbitsilver_crypto_sse41_a_OBJECTS) $(crypto_libbitsilver_crypto_sse41_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitsilver_crypto_sse41.a
leveldb/db/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db
	@: > leveldb/db/$(am__dirstamp)
leveldb/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db/$(DEPDIR)
	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/table/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table
	@: > leveldb/table/$(am__dirstamp)
leveldb/table/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table/$(DEPDIR)
	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/util/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util
	@: > leveldb/util/$(am__dirstamp)
leveldb/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util/$(DEPDIR)
	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_windows.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/$(am__dirstamp):
	@$(MKDIR_P) leveldb
	@: > leveldb/$(am__dirstamp)

leveldb/libleveldb.a: $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libleveldb.a
	$(AM_V_AR)$(leveldb_libleveldb_a_AR) leveldb/libleveldb.a $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libleveldb.a
leveldb/helpers/memenv/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv
	@: > leveldb/helpers/memenv/$(am__dirstamp)
leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)
	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT):  \
	leveldb/helpers/memenv/$(am__dirstamp) \
	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)

leveldb/libmemenv.a: $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libmemenv.a
	$(AM_V_AR)$(leveldb_libmemenv_a_AR) leveldb/libmemenv.a $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libmemenv.a
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_cli_a-stdin.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libbitsilver_cli.a: $(libbitsilver_cli_a_OBJECTS) $(libbitsilver_cli_a_DEPENDENCIES) $(EXTRA_libbitsilver_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_cli.a
	$(AM_V_AR)$(libbitsilver_cli_a_AR) libbitsilver_cli.a $(libbitsilver_cli_a_OBJECTS) $(libbitsilver_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_cli.a
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitsilver_common_a-feerate.$(OBJEXT):  \
	policy/$(am__dirstamp) policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitsilver_common_a-policy.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_common_a-rawtransaction_util.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_common_a-util.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_common_a-descriptor.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_common_a-signingprovider.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_common_a-standard.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

libbitsilver_common.a: $(libbitsilver_common_a_OBJECTS) $(libbitsilver_common_a_DEPENDENCIES) $(EXTRA_libbitsilver_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_common.a
	$(AM_V_AR)$(libbitsilver_common_a_AR) libbitsilver_common.a $(libbitsilver_common_a_OBJECTS) $(libbitsilver_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_common.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitsilver_consensus_a-merkle.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitsilver_consensus_a-tx_check.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitsilver_consensus_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitsilver_consensus_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_consensus_a-bitsilverconsensus.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_consensus_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_consensus_a-script.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_consensus_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_consensus_a-strencodings.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)

libbitsilver_consensus.a: $(libbitsilver_consensus_a_OBJECTS) $(libbitsilver_consensus_a_DEPENDENCIES) $(EXTRA_libbitsilver_consensus_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_consensus.a
	$(AM_V_AR)$(libbitsilver_consensus_a_AR) libbitsilver_consensus.a $(libbitsilver_consensus_a_OBJECTS) $(libbitsilver_consensus_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_consensus.a
consensus/libbitsilver_server_a-tx_verify.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
index/$(am__dirstamp):
	@$(MKDIR_P) index
	@: > index/$(am__dirstamp)
index/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) index/$(DEPDIR)
	@: > index/$(DEPDIR)/$(am__dirstamp)
index/libbitsilver_server_a-base.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
index/libbitsilver_server_a-blockfilterindex.$(OBJEXT):  \
	index/$(am__dirstamp) index/$(DEPDIR)/$(am__dirstamp)
index/libbitsilver_server_a-txindex.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
interfaces/$(am__dirstamp):
	@$(MKDIR_P) interfaces
	@: > interfaces/$(am__dirstamp)
interfaces/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interfaces/$(DEPDIR)
	@: > interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitsilver_server_a-chain.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitsilver_server_a-node.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
node/$(am__dirstamp):
	@$(MKDIR_P) node
	@: > node/$(am__dirstamp)
node/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) node/$(DEPDIR)
	@: > node/$(DEPDIR)/$(am__dirstamp)
node/libbitsilver_server_a-coin.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitsilver_server_a-coinstats.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitsilver_server_a-context.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitsilver_server_a-psbt.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitsilver_server_a-transaction.$(OBJEXT):  \
	node/$(am__dirstamp) node/$(DEPDIR)/$(am__dirstamp)
policy/libbitsilver_server_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitsilver_server_a-rbf.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitsilver_server_a-settings.$(OBJEXT):  \
	policy/$(am__dirstamp) policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-mining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-rawtransaction.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_server_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libbitsilver_server_a-sigcache.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_server_a-init.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

libbitsilver_server.a: $(libbitsilver_server_a_OBJECTS) $(libbitsilver_server_a_DEPENDENCIES) $(EXTRA_libbitsilver_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_server.a
	$(AM_V_AR)$(libbitsilver_server_a_AR) libbitsilver_server.a $(libbitsilver_server_a_OBJECTS) $(libbitsilver_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_server.a
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/libbitsilver_util_a-lockedpool.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_util_a-glibc_sanity_fdelt.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_util_a-glibc_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_util_a-glibcxx_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitsilver_util_a-handler.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
rpc/libbitsilver_util_a-request.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libbitsilver_util_a-cleanse.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-asmap.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-bip32.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-bytevectorhash.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-error.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-fees.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-system.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-message.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-moneystr.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-rbf.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-settings.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-threadnames.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-spanparsing.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-strencodings.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-string.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-time.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitsilver_util_a-url.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilver_util_a-glibc_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libbitsilver_util.a: $(libbitsilver_util_a_OBJECTS) $(libbitsilver_util_a_DEPENDENCIES) $(EXTRA_libbitsilver_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_util.a
	$(AM_V_AR)$(libbitsilver_util_a_AR) libbitsilver_util.a $(libbitsilver_util_a_OBJECTS) $(libbitsilver_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_util.a
interfaces/libbitsilver_wallet_a-wallet.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-coincontrol.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-crypter.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-feebumper.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-fees.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-load.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-rpcdump.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-rpcwallet.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-scriptpubkeyman.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-walletdb.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-walletutil.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitsilver_wallet_a-coinselection.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

libbitsilver_wallet.a: $(libbitsilver_wallet_a_OBJECTS) $(libbitsilver_wallet_a_DEPENDENCIES) $(EXTRA_libbitsilver_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_wallet.a
	$(AM_V_AR)$(libbitsilver_wallet_a_AR) libbitsilver_wallet.a $(libbitsilver_wallet_a_OBJECTS) $(libbitsilver_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_wallet.a
wallet/libbitsilver_wallet_tool_a-wallettool.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

libbitsilver_wallet_tool.a: $(libbitsilver_wallet_tool_a_OBJECTS) $(libbitsilver_wallet_tool_a_DEPENDENCIES) $(EXTRA_libbitsilver_wallet_tool_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_wallet_tool.a
	$(AM_V_AR)$(libbitsilver_wallet_tool_a_AR) libbitsilver_wallet_tool.a $(libbitsilver_wallet_tool_a_OBJECTS) $(libbitsilver_wallet_tool_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_wallet_tool.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitsilver_zmq_a-zmqabstractnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitsilver_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitsilver_zmq_a-zmqpublishnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitsilver_zmq_a-zmqrpc.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)

libbitsilver_zmq.a: $(libbitsilver_zmq_a_OBJECTS) $(libbitsilver_zmq_a_DEPENDENCIES) $(EXTRA_libbitsilver_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitsilver_zmq.a
	$(AM_V_AR)$(libbitsilver_zmq_a_AR) libbitsilver_zmq.a $(libbitsilver_zmq_a_OBJECTS) $(libbitsilver_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitsilver_zmq.a
test/util/$(am__dirstamp):
	@$(MKDIR_P) test/util
	@: > test/util/$(am__dirstamp)
test/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/util/$(DEPDIR)
	@: > test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-blockfilter.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-logging.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-mining.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-setup_common.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-str.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-transaction_utils.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-wallet.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)

libtest_util.a: $(libtest_util_a_OBJECTS) $(libtest_util_a_DEPENDENCIES) $(EXTRA_libtest_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtest_util.a
	$(AM_V_AR)$(libtest_util_a_AR) libtest_util.a $(libtest_util_a_OBJECTS) $(libtest_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtest_util.a
qt/$(am__dirstamp):
	@$(MKDIR_P) qt
	@: > qt/$(am__dirstamp)
qt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/$(DEPDIR)
	@: > qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bantablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bitsilver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bitsilveramountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bitsilvergui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-bitsilverunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-modaloverlay.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-networkstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-peertablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-platformstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-trafficgraphwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-utilitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-winshutdownmonitor.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-createwalletdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-openuridialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-qrimagewidget.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-receivecoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactionrecord.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-walletcontroller.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-walletmodeltransaction.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-macos_appnap.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_addressbookpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_createwalletdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bantablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bitsilver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bitsilvergui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_bitsilverunits.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_csvmodelwriter.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_modaloverlay.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_openuridialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_optionsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_peertablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_paymentserver.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_qrimagewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_qvaluecombobox.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_sendcoinsentry.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_transactiondesc.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_transactionview.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_utilitydialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_walletcontroller.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-moc_walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-qrc_bitsilver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)

qt/libbitsilverqt.a: $(qt_libbitsilverqt_a_OBJECTS) $(qt_libbitsilverqt_a_DEPENDENCIES) $(EXTRA_qt_libbitsilverqt_a_DEPENDENCIES) qt/$(am__dirstamp)
	$(AM_V_at)-rm -f qt/libbitsilverqt.a
	$(AM_V_AR)$(qt_libbitsilverqt_a_AR) qt/libbitsilverqt.a $(qt_libbitsilverqt_a_OBJECTS) $(qt_libbitsilverqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) qt/libbitsilverqt.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
support/libbitsilverconsensus_la-cleanse.lo: support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-aes.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-chacha_poly_aead.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-chacha20.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-hmac_sha256.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-hmac_sha512.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-poly1305.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-siphash.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitsilverconsensus_la-sha256_sse4.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
consensus/libbitsilverconsensus_la-merkle.lo:  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitsilverconsensus_la-tx_check.lo:  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/libbitsilverconsensus_la-block.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitsilverconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitsilverconsensus_la-bitsilverconsensus.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilverconsensus_la-interpreter.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilverconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitsilverconsensus_la-script_error.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
util/libbitsilverconsensus_la-strencodings.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
compat/libbitsilverconsensus_la-glibc_compat.lo:  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libbitsilverconsensus.la: $(libbitsilverconsensus_la_OBJECTS) $(libbitsilverconsensus_la_DEPENDENCIES) $(EXTRA_libbitsilverconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbitsilverconsensus_la_LINK) $(am_libbitsilverconsensus_la_rpath) $(libbitsilverconsensus_la_OBJECTS) $(libbitsilverconsensus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bench/$(am__dirstamp):
	@$(MKDIR_P) bench
	@: > bench/$(am__dirstamp)
bench/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bench/$(DEPDIR)
	@: > bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-bench_bitsilver.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-bench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-block_assemble.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-checkblock.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-checkqueue.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-data.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-duplicate_inputs.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-examples.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-rollingbloom.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-chacha20.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-chacha_poly_aead.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-crypto_hash.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-ccoins_caching.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-gcs_filter.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-merkle_root.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-mempool_eviction.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-mempool_stress.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-rpc_blockchain.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-rpc_mempool.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-util_time.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-verify_script.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-base58.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-bech32.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-lockedpool.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-poly1305.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-prevector.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-coin_selection.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitsilver-wallet_balance.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)

bench/bench_bitsilver$(EXEEXT): $(bench_bench_bitsilver_OBJECTS) $(bench_bench_bitsilver_DEPENDENCIES) $(EXTRA_bench_bench_bitsilver_DEPENDENCIES) bench/$(am__dirstamp)
	@rm -f bench/bench_bitsilver$(EXEEXT)
	$(AM_V_CXXLD)$(bench_bench_bitsilver_LINK) $(bench_bench_bitsilver_OBJECTS) $(bench_bench_bitsilver_LDADD) $(LIBS)

bitsilver-cli$(EXEEXT): $(bitsilver_cli_OBJECTS) $(bitsilver_cli_DEPENDENCIES) $(EXTRA_bitsilver_cli_DEPENDENCIES) 
	@rm -f bitsilver-cli$(EXEEXT)
	$(AM_V_CXXLD)$(bitsilver_cli_LINK) $(bitsilver_cli_OBJECTS) $(bitsilver_cli_LDADD) $(LIBS)

bitsilver-tx$(EXEEXT): $(bitsilver_tx_OBJECTS) $(bitsilver_tx_DEPENDENCIES) $(EXTRA_bitsilver_tx_DEPENDENCIES) 
	@rm -f bitsilver-tx$(EXEEXT)
	$(AM_V_CXXLD)$(bitsilver_tx_LINK) $(bitsilver_tx_OBJECTS) $(bitsilver_tx_LDADD) $(LIBS)

bitsilver-wallet$(EXEEXT): $(bitsilver_wallet_OBJECTS) $(bitsilver_wallet_DEPENDENCIES) $(EXTRA_bitsilver_wallet_DEPENDENCIES) 
	@rm -f bitsilver-wallet$(EXEEXT)
	$(AM_V_CXXLD)$(bitsilver_wallet_LINK) $(bitsilver_wallet_OBJECTS) $(bitsilver_wallet_LDADD) $(LIBS)

bitsilverd$(EXEEXT): $(bitsilverd_OBJECTS) $(bitsilverd_DEPENDENCIES) $(EXTRA_bitsilverd_DEPENDENCIES) 
	@rm -f bitsilverd$(EXEEXT)
	$(AM_V_CXXLD)$(bitsilverd_LINK) $(bitsilverd_OBJECTS) $(bitsilverd_LDADD) $(LIBS)
qt/qt_bitsilver_qt-main.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/res/$(am__dirstamp):
	@$(MKDIR_P) qt/res
	@: > qt/res/$(am__dirstamp)
qt/res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/res/$(DEPDIR)
	@: > qt/res/$(DEPDIR)/$(am__dirstamp)
qt/res/bitsilver-qt-res.$(OBJEXT): qt/res/$(am__dirstamp) \
	qt/res/$(DEPDIR)/$(am__dirstamp)

qt/bitsilver-qt$(EXEEXT): $(qt_bitsilver_qt_OBJECTS) $(qt_bitsilver_qt_DEPENDENCIES) $(EXTRA_qt_bitsilver_qt_DEPENDENCIES) qt/$(am__dirstamp)
	@rm -f qt/bitsilver-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_bitsilver_qt_LINK) $(qt_bitsilver_qt_OBJECTS) $(qt_bitsilver_qt_LDADD) $(LIBS)
qt/test/$(am__dirstamp):
	@$(MKDIR_P) qt/test
	@: > qt/test/$(am__dirstamp)
qt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/test/$(DEPDIR)
	@: > qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-apptests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-compattests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-test_main.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-util.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/$(am__dirstamp):
	@$(MKDIR_P) wallet/test
	@: > wallet/test/$(am__dirstamp)
wallet/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/$(DEPDIR)
	@: > wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_apptests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_compattests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitsilver_qt-moc_wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)

qt/test/test_bitsilver-qt$(EXEEXT): $(qt_test_test_bitsilver_qt_OBJECTS) $(qt_test_test_bitsilver_qt_DEPENDENCIES) $(EXTRA_qt_test_test_bitsilver_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
	@rm -f qt/test/test_bitsilver-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_test_test_bitsilver_qt_LINK) $(qt_test_test_bitsilver_qt_OBJECTS) $(qt_test_test_bitsilver_qt_LDADD) $(LIBS)
test/fuzz/$(am__dirstamp):
	@$(MKDIR_P) test/fuzz
	@: > test/fuzz/$(am__dirstamp)
test/fuzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/fuzz/$(DEPDIR)
	@: > test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_addr_info_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_addr_info_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/addr_info_deserialize$(EXEEXT): $(test_fuzz_addr_info_deserialize_OBJECTS) $(test_fuzz_addr_info_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_addr_info_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/addr_info_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_addr_info_deserialize_LINK) $(test_fuzz_addr_info_deserialize_OBJECTS) $(test_fuzz_addr_info_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_address_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_address_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/address_deserialize$(EXEEXT): $(test_fuzz_address_deserialize_OBJECTS) $(test_fuzz_address_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_address_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/address_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_address_deserialize_LINK) $(test_fuzz_address_deserialize_OBJECTS) $(test_fuzz_address_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_addrman_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_addrman_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/addrman_deserialize$(EXEEXT): $(test_fuzz_addrman_deserialize_OBJECTS) $(test_fuzz_addrman_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_addrman_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/addrman_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_addrman_deserialize_LINK) $(test_fuzz_addrman_deserialize_OBJECTS) $(test_fuzz_addrman_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_asmap-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_asmap-asmap.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/asmap$(EXEEXT): $(test_fuzz_asmap_OBJECTS) $(test_fuzz_asmap_DEPENDENCIES) $(EXTRA_test_fuzz_asmap_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/asmap$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_asmap_LINK) $(test_fuzz_asmap_OBJECTS) $(test_fuzz_asmap_LDADD) $(LIBS)
test/fuzz/test_fuzz_banentry_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_banentry_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/banentry_deserialize$(EXEEXT): $(test_fuzz_banentry_deserialize_OBJECTS) $(test_fuzz_banentry_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_banentry_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/banentry_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_banentry_deserialize_LINK) $(test_fuzz_banentry_deserialize_OBJECTS) $(test_fuzz_banentry_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_base_encode_decode-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/base_encode_decode$(EXEEXT): $(test_fuzz_base_encode_decode_OBJECTS) $(test_fuzz_base_encode_decode_DEPENDENCIES) $(EXTRA_test_fuzz_base_encode_decode_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/base_encode_decode$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_base_encode_decode_LINK) $(test_fuzz_base_encode_decode_OBJECTS) $(test_fuzz_base_encode_decode_LDADD) $(LIBS)
test/fuzz/test_fuzz_bech32-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_bech32-bech32.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/bech32$(EXEEXT): $(test_fuzz_bech32_OBJECTS) $(test_fuzz_bech32_DEPENDENCIES) $(EXTRA_test_fuzz_bech32_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/bech32$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_bech32_LINK) $(test_fuzz_bech32_OBJECTS) $(test_fuzz_bech32_LDADD) $(LIBS)
test/fuzz/test_fuzz_block-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_block-block.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/block$(EXEEXT): $(test_fuzz_block_OBJECTS) $(test_fuzz_block_DEPENDENCIES) $(EXTRA_test_fuzz_block_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/block$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_block_LINK) $(test_fuzz_block_OBJECTS) $(test_fuzz_block_LDADD) $(LIBS)
test/fuzz/test_fuzz_block_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_block_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/block_deserialize$(EXEEXT): $(test_fuzz_block_deserialize_OBJECTS) $(test_fuzz_block_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_block_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/block_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_block_deserialize_LINK) $(test_fuzz_block_deserialize_OBJECTS) $(test_fuzz_block_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/block_file_info_deserialize$(EXEEXT): $(test_fuzz_block_file_info_deserialize_OBJECTS) $(test_fuzz_block_file_info_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_block_file_info_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/block_file_info_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_block_file_info_deserialize_LINK) $(test_fuzz_block_file_info_deserialize_OBJECTS) $(test_fuzz_block_file_info_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_block_filter_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_block_filter_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/block_filter_deserialize$(EXEEXT): $(test_fuzz_block_filter_deserialize_OBJECTS) $(test_fuzz_block_filter_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_block_filter_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/block_filter_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_block_filter_deserialize_LINK) $(test_fuzz_block_filter_deserialize_OBJECTS) $(test_fuzz_block_filter_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/block_header_and_short_txids_deserialize$(EXEEXT): $(test_fuzz_block_header_and_short_txids_deserialize_OBJECTS) $(test_fuzz_block_header_and_short_txids_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_block_header_and_short_txids_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/block_header_and_short_txids_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_block_header_and_short_txids_deserialize_LINK) $(test_fuzz_block_header_and_short_txids_deserialize_OBJECTS) $(test_fuzz_block_header_and_short_txids_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_blockheader_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blockheader_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blockheader_deserialize$(EXEEXT): $(test_fuzz_blockheader_deserialize_OBJECTS) $(test_fuzz_blockheader_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_blockheader_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blockheader_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blockheader_deserialize_LINK) $(test_fuzz_blockheader_deserialize_OBJECTS) $(test_fuzz_blockheader_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blocklocator_deserialize$(EXEEXT): $(test_fuzz_blocklocator_deserialize_OBJECTS) $(test_fuzz_blocklocator_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_blocklocator_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blocklocator_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blocklocator_deserialize_LINK) $(test_fuzz_blocklocator_deserialize_OBJECTS) $(test_fuzz_blocklocator_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_blockmerkleroot-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blockmerkleroot-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blockmerkleroot$(EXEEXT): $(test_fuzz_blockmerkleroot_OBJECTS) $(test_fuzz_blockmerkleroot_DEPENDENCIES) $(EXTRA_test_fuzz_blockmerkleroot_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blockmerkleroot$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blockmerkleroot_LINK) $(test_fuzz_blockmerkleroot_OBJECTS) $(test_fuzz_blockmerkleroot_LDADD) $(LIBS)
test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blocktransactions_deserialize$(EXEEXT): $(test_fuzz_blocktransactions_deserialize_OBJECTS) $(test_fuzz_blocktransactions_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_blocktransactions_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blocktransactions_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blocktransactions_deserialize_LINK) $(test_fuzz_blocktransactions_deserialize_OBJECTS) $(test_fuzz_blocktransactions_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blocktransactionsrequest_deserialize$(EXEEXT): $(test_fuzz_blocktransactionsrequest_deserialize_OBJECTS) $(test_fuzz_blocktransactionsrequest_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_blocktransactionsrequest_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blocktransactionsrequest_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blocktransactionsrequest_deserialize_LINK) $(test_fuzz_blocktransactionsrequest_deserialize_OBJECTS) $(test_fuzz_blocktransactionsrequest_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_blockundo_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_blockundo_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/blockundo_deserialize$(EXEEXT): $(test_fuzz_blockundo_deserialize_OBJECTS) $(test_fuzz_blockundo_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_blockundo_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/blockundo_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_blockundo_deserialize_LINK) $(test_fuzz_blockundo_deserialize_OBJECTS) $(test_fuzz_blockundo_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_bloom_filter-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_bloom_filter-bloom_filter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/bloom_filter$(EXEEXT): $(test_fuzz_bloom_filter_OBJECTS) $(test_fuzz_bloom_filter_DEPENDENCIES) $(EXTRA_test_fuzz_bloom_filter_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/bloom_filter$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_bloom_filter_LINK) $(test_fuzz_bloom_filter_OBJECTS) $(test_fuzz_bloom_filter_LDADD) $(LIBS)
test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/bloomfilter_deserialize$(EXEEXT): $(test_fuzz_bloomfilter_deserialize_OBJECTS) $(test_fuzz_bloomfilter_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_bloomfilter_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/bloomfilter_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_bloomfilter_deserialize_LINK) $(test_fuzz_bloomfilter_deserialize_OBJECTS) $(test_fuzz_bloomfilter_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_coins_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_coins_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/coins_deserialize$(EXEEXT): $(test_fuzz_coins_deserialize_OBJECTS) $(test_fuzz_coins_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_coins_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/coins_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_coins_deserialize_LINK) $(test_fuzz_coins_deserialize_OBJECTS) $(test_fuzz_coins_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_decode_tx-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_decode_tx-decode_tx.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/decode_tx$(EXEEXT): $(test_fuzz_decode_tx_OBJECTS) $(test_fuzz_decode_tx_DEPENDENCIES) $(EXTRA_test_fuzz_decode_tx_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/decode_tx$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_decode_tx_LINK) $(test_fuzz_decode_tx_OBJECTS) $(test_fuzz_decode_tx_LDADD) $(LIBS)
test/fuzz/test_fuzz_descriptor_parse-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/descriptor_parse$(EXEEXT): $(test_fuzz_descriptor_parse_OBJECTS) $(test_fuzz_descriptor_parse_DEPENDENCIES) $(EXTRA_test_fuzz_descriptor_parse_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/descriptor_parse$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_descriptor_parse_LINK) $(test_fuzz_descriptor_parse_OBJECTS) $(test_fuzz_descriptor_parse_LDADD) $(LIBS)
test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/diskblockindex_deserialize$(EXEEXT): $(test_fuzz_diskblockindex_deserialize_OBJECTS) $(test_fuzz_diskblockindex_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_diskblockindex_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/diskblockindex_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_diskblockindex_deserialize_LINK) $(test_fuzz_diskblockindex_deserialize_OBJECTS) $(test_fuzz_diskblockindex_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_eval_script-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_eval_script-eval_script.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/eval_script$(EXEEXT): $(test_fuzz_eval_script_OBJECTS) $(test_fuzz_eval_script_DEPENDENCIES) $(EXTRA_test_fuzz_eval_script_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/eval_script$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_eval_script_LINK) $(test_fuzz_eval_script_OBJECTS) $(test_fuzz_eval_script_LDADD) $(LIBS)
test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/fee_rate_deserialize$(EXEEXT): $(test_fuzz_fee_rate_deserialize_OBJECTS) $(test_fuzz_fee_rate_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_fee_rate_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/fee_rate_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_fee_rate_deserialize_LINK) $(test_fuzz_fee_rate_deserialize_OBJECTS) $(test_fuzz_fee_rate_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/flat_file_pos_deserialize$(EXEEXT): $(test_fuzz_flat_file_pos_deserialize_OBJECTS) $(test_fuzz_flat_file_pos_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_flat_file_pos_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/flat_file_pos_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_flat_file_pos_deserialize_LINK) $(test_fuzz_flat_file_pos_deserialize_OBJECTS) $(test_fuzz_flat_file_pos_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_float-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_float-float.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/float$(EXEEXT): $(test_fuzz_float_OBJECTS) $(test_fuzz_float_DEPENDENCIES) $(EXTRA_test_fuzz_float_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/float$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_float_LINK) $(test_fuzz_float_OBJECTS) $(test_fuzz_float_LDADD) $(LIBS)
test/fuzz/test_fuzz_hex-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_hex-hex.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/hex$(EXEEXT): $(test_fuzz_hex_OBJECTS) $(test_fuzz_hex_DEPENDENCIES) $(EXTRA_test_fuzz_hex_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/hex$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_hex_LINK) $(test_fuzz_hex_OBJECTS) $(test_fuzz_hex_LDADD) $(LIBS)
test/fuzz/test_fuzz_integer-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_integer-integer.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/integer$(EXEEXT): $(test_fuzz_integer_OBJECTS) $(test_fuzz_integer_DEPENDENCIES) $(EXTRA_test_fuzz_integer_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/integer$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_integer_LINK) $(test_fuzz_integer_OBJECTS) $(test_fuzz_integer_LDADD) $(LIBS)
test/fuzz/test_fuzz_inv_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_inv_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/inv_deserialize$(EXEEXT): $(test_fuzz_inv_deserialize_OBJECTS) $(test_fuzz_inv_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_inv_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/inv_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_inv_deserialize_LINK) $(test_fuzz_inv_deserialize_OBJECTS) $(test_fuzz_inv_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_key-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_key-key.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/key$(EXEEXT): $(test_fuzz_key_OBJECTS) $(test_fuzz_key_DEPENDENCIES) $(EXTRA_test_fuzz_key_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/key$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_key_LINK) $(test_fuzz_key_OBJECTS) $(test_fuzz_key_LDADD) $(LIBS)
test/fuzz/test_fuzz_key_io-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_key_io-key_io.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/key_io$(EXEEXT): $(test_fuzz_key_io_OBJECTS) $(test_fuzz_key_io_DEPENDENCIES) $(EXTRA_test_fuzz_key_io_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/key_io$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_key_io_LINK) $(test_fuzz_key_io_OBJECTS) $(test_fuzz_key_io_LDADD) $(LIBS)
test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/key_origin_info_deserialize$(EXEEXT): $(test_fuzz_key_origin_info_deserialize_OBJECTS) $(test_fuzz_key_origin_info_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_key_origin_info_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/key_origin_info_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_key_origin_info_deserialize_LINK) $(test_fuzz_key_origin_info_deserialize_OBJECTS) $(test_fuzz_key_origin_info_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_locale-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_locale-locale.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/locale$(EXEEXT): $(test_fuzz_locale_OBJECTS) $(test_fuzz_locale_DEPENDENCIES) $(EXTRA_test_fuzz_locale_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/locale$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_locale_LINK) $(test_fuzz_locale_OBJECTS) $(test_fuzz_locale_LDADD) $(LIBS)
test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/merkle_block_deserialize$(EXEEXT): $(test_fuzz_merkle_block_deserialize_OBJECTS) $(test_fuzz_merkle_block_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_merkle_block_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/merkle_block_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_merkle_block_deserialize_LINK) $(test_fuzz_merkle_block_deserialize_OBJECTS) $(test_fuzz_merkle_block_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_messageheader_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_messageheader_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/messageheader_deserialize$(EXEEXT): $(test_fuzz_messageheader_deserialize_OBJECTS) $(test_fuzz_messageheader_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_messageheader_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/messageheader_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_messageheader_deserialize_LINK) $(test_fuzz_messageheader_deserialize_OBJECTS) $(test_fuzz_messageheader_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_netaddr_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_netaddr_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/netaddr_deserialize$(EXEEXT): $(test_fuzz_netaddr_deserialize_OBJECTS) $(test_fuzz_netaddr_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_netaddr_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/netaddr_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_netaddr_deserialize_LINK) $(test_fuzz_netaddr_deserialize_OBJECTS) $(test_fuzz_netaddr_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_netaddress-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_netaddress-netaddress.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/netaddress$(EXEEXT): $(test_fuzz_netaddress_OBJECTS) $(test_fuzz_netaddress_DEPENDENCIES) $(EXTRA_test_fuzz_netaddress_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/netaddress$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_netaddress_LINK) $(test_fuzz_netaddress_OBJECTS) $(test_fuzz_netaddress_LDADD) $(LIBS)
test/fuzz/test_fuzz_out_point_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_out_point_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/out_point_deserialize$(EXEEXT): $(test_fuzz_out_point_deserialize_OBJECTS) $(test_fuzz_out_point_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_out_point_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/out_point_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_out_point_deserialize_LINK) $(test_fuzz_out_point_deserialize_OBJECTS) $(test_fuzz_out_point_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/p2p_transport_deserializer$(EXEEXT): $(test_fuzz_p2p_transport_deserializer_OBJECTS) $(test_fuzz_p2p_transport_deserializer_DEPENDENCIES) $(EXTRA_test_fuzz_p2p_transport_deserializer_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/p2p_transport_deserializer$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_p2p_transport_deserializer_LINK) $(test_fuzz_p2p_transport_deserializer_OBJECTS) $(test_fuzz_p2p_transport_deserializer_LDADD) $(LIBS)
test/fuzz/test_fuzz_parse_hd_keypath-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/parse_hd_keypath$(EXEEXT): $(test_fuzz_parse_hd_keypath_OBJECTS) $(test_fuzz_parse_hd_keypath_DEPENDENCIES) $(EXTRA_test_fuzz_parse_hd_keypath_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/parse_hd_keypath$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_parse_hd_keypath_LINK) $(test_fuzz_parse_hd_keypath_OBJECTS) $(test_fuzz_parse_hd_keypath_LDADD) $(LIBS)
test/fuzz/test_fuzz_parse_iso8601-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/parse_iso8601$(EXEEXT): $(test_fuzz_parse_iso8601_OBJECTS) $(test_fuzz_parse_iso8601_DEPENDENCIES) $(EXTRA_test_fuzz_parse_iso8601_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/parse_iso8601$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_parse_iso8601_LINK) $(test_fuzz_parse_iso8601_OBJECTS) $(test_fuzz_parse_iso8601_LDADD) $(LIBS)
test/fuzz/test_fuzz_parse_numbers-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_parse_numbers-parse_numbers.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/parse_numbers$(EXEEXT): $(test_fuzz_parse_numbers_OBJECTS) $(test_fuzz_parse_numbers_DEPENDENCIES) $(EXTRA_test_fuzz_parse_numbers_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/parse_numbers$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_parse_numbers_LINK) $(test_fuzz_parse_numbers_OBJECTS) $(test_fuzz_parse_numbers_LDADD) $(LIBS)
test/fuzz/test_fuzz_parse_script-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_parse_script-parse_script.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/parse_script$(EXEEXT): $(test_fuzz_parse_script_OBJECTS) $(test_fuzz_parse_script_DEPENDENCIES) $(EXTRA_test_fuzz_parse_script_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/parse_script$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_parse_script_LINK) $(test_fuzz_parse_script_OBJECTS) $(test_fuzz_parse_script_LDADD) $(LIBS)
test/fuzz/test_fuzz_parse_univalue-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_parse_univalue-parse_univalue.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/parse_univalue$(EXEEXT): $(test_fuzz_parse_univalue_OBJECTS) $(test_fuzz_parse_univalue_DEPENDENCIES) $(EXTRA_test_fuzz_parse_univalue_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/parse_univalue$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_parse_univalue_LINK) $(test_fuzz_parse_univalue_OBJECTS) $(test_fuzz_parse_univalue_LDADD) $(LIBS)
test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/partial_merkle_tree_deserialize$(EXEEXT): $(test_fuzz_partial_merkle_tree_deserialize_OBJECTS) $(test_fuzz_partial_merkle_tree_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_partial_merkle_tree_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/partial_merkle_tree_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_partial_merkle_tree_deserialize_LINK) $(test_fuzz_partial_merkle_tree_deserialize_OBJECTS) $(test_fuzz_partial_merkle_tree_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/partially_signed_transaction_deserialize$(EXEEXT): $(test_fuzz_partially_signed_transaction_deserialize_OBJECTS) $(test_fuzz_partially_signed_transaction_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_partially_signed_transaction_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/partially_signed_transaction_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_partially_signed_transaction_deserialize_LINK) $(test_fuzz_partially_signed_transaction_deserialize_OBJECTS) $(test_fuzz_partially_signed_transaction_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/prefilled_transaction_deserialize$(EXEEXT): $(test_fuzz_prefilled_transaction_deserialize_OBJECTS) $(test_fuzz_prefilled_transaction_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_prefilled_transaction_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/prefilled_transaction_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_prefilled_transaction_deserialize_LINK) $(test_fuzz_prefilled_transaction_deserialize_OBJECTS) $(test_fuzz_prefilled_transaction_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message$(EXEEXT): $(test_fuzz_process_message_OBJECTS) $(test_fuzz_process_message_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_LINK) $(test_fuzz_process_message_OBJECTS) $(test_fuzz_process_message_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_addr-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_addr-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_addr$(EXEEXT): $(test_fuzz_process_message_addr_OBJECTS) $(test_fuzz_process_message_addr_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_addr_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_addr$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_addr_LINK) $(test_fuzz_process_message_addr_OBJECTS) $(test_fuzz_process_message_addr_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_block-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_block-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_block$(EXEEXT): $(test_fuzz_process_message_block_OBJECTS) $(test_fuzz_process_message_block_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_block_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_block$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_block_LINK) $(test_fuzz_process_message_block_OBJECTS) $(test_fuzz_process_message_block_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_blocktxn-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_blocktxn-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_blocktxn$(EXEEXT): $(test_fuzz_process_message_blocktxn_OBJECTS) $(test_fuzz_process_message_blocktxn_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_blocktxn_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_blocktxn$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_blocktxn_LINK) $(test_fuzz_process_message_blocktxn_OBJECTS) $(test_fuzz_process_message_blocktxn_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_cmpctblock-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_cmpctblock$(EXEEXT): $(test_fuzz_process_message_cmpctblock_OBJECTS) $(test_fuzz_process_message_cmpctblock_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_cmpctblock_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_cmpctblock$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_cmpctblock_LINK) $(test_fuzz_process_message_cmpctblock_OBJECTS) $(test_fuzz_process_message_cmpctblock_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_feefilter-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_feefilter-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_feefilter$(EXEEXT): $(test_fuzz_process_message_feefilter_OBJECTS) $(test_fuzz_process_message_feefilter_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_feefilter_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_feefilter$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_feefilter_LINK) $(test_fuzz_process_message_feefilter_OBJECTS) $(test_fuzz_process_message_feefilter_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_filteradd-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_filteradd-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_filteradd$(EXEEXT): $(test_fuzz_process_message_filteradd_OBJECTS) $(test_fuzz_process_message_filteradd_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_filteradd_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_filteradd$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_filteradd_LINK) $(test_fuzz_process_message_filteradd_OBJECTS) $(test_fuzz_process_message_filteradd_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_filterclear-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_filterclear-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_filterclear$(EXEEXT): $(test_fuzz_process_message_filterclear_OBJECTS) $(test_fuzz_process_message_filterclear_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_filterclear_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_filterclear$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_filterclear_LINK) $(test_fuzz_process_message_filterclear_OBJECTS) $(test_fuzz_process_message_filterclear_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_filterload-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_filterload-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_filterload$(EXEEXT): $(test_fuzz_process_message_filterload_OBJECTS) $(test_fuzz_process_message_filterload_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_filterload_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_filterload$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_filterload_LINK) $(test_fuzz_process_message_filterload_OBJECTS) $(test_fuzz_process_message_filterload_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_getaddr-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_getaddr-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_getaddr$(EXEEXT): $(test_fuzz_process_message_getaddr_OBJECTS) $(test_fuzz_process_message_getaddr_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_getaddr_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_getaddr$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_getaddr_LINK) $(test_fuzz_process_message_getaddr_OBJECTS) $(test_fuzz_process_message_getaddr_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_getblocks-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_getblocks-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_getblocks$(EXEEXT): $(test_fuzz_process_message_getblocks_OBJECTS) $(test_fuzz_process_message_getblocks_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_getblocks_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_getblocks$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_getblocks_LINK) $(test_fuzz_process_message_getblocks_OBJECTS) $(test_fuzz_process_message_getblocks_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_getblocktxn-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_getblocktxn$(EXEEXT): $(test_fuzz_process_message_getblocktxn_OBJECTS) $(test_fuzz_process_message_getblocktxn_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_getblocktxn_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_getblocktxn$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_getblocktxn_LINK) $(test_fuzz_process_message_getblocktxn_OBJECTS) $(test_fuzz_process_message_getblocktxn_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_getdata-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_getdata-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_getdata$(EXEEXT): $(test_fuzz_process_message_getdata_OBJECTS) $(test_fuzz_process_message_getdata_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_getdata_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_getdata$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_getdata_LINK) $(test_fuzz_process_message_getdata_OBJECTS) $(test_fuzz_process_message_getdata_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_getheaders-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_getheaders-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_getheaders$(EXEEXT): $(test_fuzz_process_message_getheaders_OBJECTS) $(test_fuzz_process_message_getheaders_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_getheaders_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_getheaders$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_getheaders_LINK) $(test_fuzz_process_message_getheaders_OBJECTS) $(test_fuzz_process_message_getheaders_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_headers-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_headers-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_headers$(EXEEXT): $(test_fuzz_process_message_headers_OBJECTS) $(test_fuzz_process_message_headers_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_headers_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_headers$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_headers_LINK) $(test_fuzz_process_message_headers_OBJECTS) $(test_fuzz_process_message_headers_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_inv-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_inv-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_inv$(EXEEXT): $(test_fuzz_process_message_inv_OBJECTS) $(test_fuzz_process_message_inv_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_inv_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_inv$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_inv_LINK) $(test_fuzz_process_message_inv_OBJECTS) $(test_fuzz_process_message_inv_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_mempool-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_mempool-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_mempool$(EXEEXT): $(test_fuzz_process_message_mempool_OBJECTS) $(test_fuzz_process_message_mempool_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_mempool_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_mempool$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_mempool_LINK) $(test_fuzz_process_message_mempool_OBJECTS) $(test_fuzz_process_message_mempool_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_notfound-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_notfound-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_notfound$(EXEEXT): $(test_fuzz_process_message_notfound_OBJECTS) $(test_fuzz_process_message_notfound_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_notfound_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_notfound$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_notfound_LINK) $(test_fuzz_process_message_notfound_OBJECTS) $(test_fuzz_process_message_notfound_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_ping-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_ping-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_ping$(EXEEXT): $(test_fuzz_process_message_ping_OBJECTS) $(test_fuzz_process_message_ping_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_ping_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_ping$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_ping_LINK) $(test_fuzz_process_message_ping_OBJECTS) $(test_fuzz_process_message_ping_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_pong-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_pong-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_pong$(EXEEXT): $(test_fuzz_process_message_pong_OBJECTS) $(test_fuzz_process_message_pong_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_pong_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_pong$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_pong_LINK) $(test_fuzz_process_message_pong_OBJECTS) $(test_fuzz_process_message_pong_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_sendcmpct-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_sendcmpct$(EXEEXT): $(test_fuzz_process_message_sendcmpct_OBJECTS) $(test_fuzz_process_message_sendcmpct_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_sendcmpct_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_sendcmpct$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_sendcmpct_LINK) $(test_fuzz_process_message_sendcmpct_OBJECTS) $(test_fuzz_process_message_sendcmpct_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_sendheaders-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_sendheaders-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_sendheaders$(EXEEXT): $(test_fuzz_process_message_sendheaders_OBJECTS) $(test_fuzz_process_message_sendheaders_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_sendheaders_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_sendheaders$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_sendheaders_LINK) $(test_fuzz_process_message_sendheaders_OBJECTS) $(test_fuzz_process_message_sendheaders_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_tx-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_tx-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_tx$(EXEEXT): $(test_fuzz_process_message_tx_OBJECTS) $(test_fuzz_process_message_tx_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_tx_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_tx$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_tx_LINK) $(test_fuzz_process_message_tx_OBJECTS) $(test_fuzz_process_message_tx_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_verack-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_verack-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_verack$(EXEEXT): $(test_fuzz_process_message_verack_OBJECTS) $(test_fuzz_process_message_verack_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_verack_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_verack$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_verack_LINK) $(test_fuzz_process_message_verack_OBJECTS) $(test_fuzz_process_message_verack_LDADD) $(LIBS)
test/fuzz/test_fuzz_process_message_version-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_process_message_version-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/process_message_version$(EXEEXT): $(test_fuzz_process_message_version_OBJECTS) $(test_fuzz_process_message_version_DEPENDENCIES) $(EXTRA_test_fuzz_process_message_version_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/process_message_version$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_process_message_version_LINK) $(test_fuzz_process_message_version_OBJECTS) $(test_fuzz_process_message_version_LDADD) $(LIBS)
test/fuzz/test_fuzz_psbt-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_psbt-psbt.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/psbt$(EXEEXT): $(test_fuzz_psbt_OBJECTS) $(test_fuzz_psbt_DEPENDENCIES) $(EXTRA_test_fuzz_psbt_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/psbt$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_psbt_LINK) $(test_fuzz_psbt_OBJECTS) $(test_fuzz_psbt_LDADD) $(LIBS)
test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/psbt_input_deserialize$(EXEEXT): $(test_fuzz_psbt_input_deserialize_OBJECTS) $(test_fuzz_psbt_input_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_psbt_input_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/psbt_input_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_psbt_input_deserialize_LINK) $(test_fuzz_psbt_input_deserialize_OBJECTS) $(test_fuzz_psbt_input_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/psbt_output_deserialize$(EXEEXT): $(test_fuzz_psbt_output_deserialize_OBJECTS) $(test_fuzz_psbt_output_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_psbt_output_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/psbt_output_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_psbt_output_deserialize_LINK) $(test_fuzz_psbt_output_deserialize_OBJECTS) $(test_fuzz_psbt_output_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_pub_key_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_pub_key_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/pub_key_deserialize$(EXEEXT): $(test_fuzz_pub_key_deserialize_OBJECTS) $(test_fuzz_pub_key_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_pub_key_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/pub_key_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_pub_key_deserialize_LINK) $(test_fuzz_pub_key_deserialize_OBJECTS) $(test_fuzz_pub_key_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/rolling_bloom_filter$(EXEEXT): $(test_fuzz_rolling_bloom_filter_OBJECTS) $(test_fuzz_rolling_bloom_filter_DEPENDENCIES) $(EXTRA_test_fuzz_rolling_bloom_filter_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/rolling_bloom_filter$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_rolling_bloom_filter_LINK) $(test_fuzz_rolling_bloom_filter_OBJECTS) $(test_fuzz_rolling_bloom_filter_LDADD) $(LIBS)
test/fuzz/test_fuzz_script-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_script-script.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/script$(EXEEXT): $(test_fuzz_script_OBJECTS) $(test_fuzz_script_DEPENDENCIES) $(EXTRA_test_fuzz_script_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/script$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_script_LINK) $(test_fuzz_script_OBJECTS) $(test_fuzz_script_LDADD) $(LIBS)
test/fuzz/test_fuzz_script_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_script_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/script_deserialize$(EXEEXT): $(test_fuzz_script_deserialize_OBJECTS) $(test_fuzz_script_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_script_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/script_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_script_deserialize_LINK) $(test_fuzz_script_deserialize_OBJECTS) $(test_fuzz_script_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_script_flags-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_script_flags-script_flags.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/script_flags$(EXEEXT): $(test_fuzz_script_flags_OBJECTS) $(test_fuzz_script_flags_DEPENDENCIES) $(EXTRA_test_fuzz_script_flags_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/script_flags$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_script_flags_LINK) $(test_fuzz_script_flags_OBJECTS) $(test_fuzz_script_flags_LDADD) $(LIBS)
test/fuzz/test_fuzz_script_ops-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_script_ops-script_ops.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/script_ops$(EXEEXT): $(test_fuzz_script_ops_OBJECTS) $(test_fuzz_script_ops_DEPENDENCIES) $(EXTRA_test_fuzz_script_ops_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/script_ops$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_script_ops_LINK) $(test_fuzz_script_ops_OBJECTS) $(test_fuzz_script_ops_LDADD) $(LIBS)
test/fuzz/test_fuzz_scriptnum_ops-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/scriptnum_ops$(EXEEXT): $(test_fuzz_scriptnum_ops_OBJECTS) $(test_fuzz_scriptnum_ops_DEPENDENCIES) $(EXTRA_test_fuzz_scriptnum_ops_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/scriptnum_ops$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_scriptnum_ops_LINK) $(test_fuzz_scriptnum_ops_OBJECTS) $(test_fuzz_scriptnum_ops_LDADD) $(LIBS)
test/fuzz/test_fuzz_service_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_service_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/service_deserialize$(EXEEXT): $(test_fuzz_service_deserialize_OBJECTS) $(test_fuzz_service_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_service_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/service_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_service_deserialize_LINK) $(test_fuzz_service_deserialize_OBJECTS) $(test_fuzz_service_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/snapshotmetadata_deserialize$(EXEEXT): $(test_fuzz_snapshotmetadata_deserialize_OBJECTS) $(test_fuzz_snapshotmetadata_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_snapshotmetadata_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/snapshotmetadata_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_snapshotmetadata_deserialize_LINK) $(test_fuzz_snapshotmetadata_deserialize_OBJECTS) $(test_fuzz_snapshotmetadata_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_spanparsing-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_spanparsing-spanparsing.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/spanparsing$(EXEEXT): $(test_fuzz_spanparsing_OBJECTS) $(test_fuzz_spanparsing_DEPENDENCIES) $(EXTRA_test_fuzz_spanparsing_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/spanparsing$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_spanparsing_LINK) $(test_fuzz_spanparsing_OBJECTS) $(test_fuzz_spanparsing_LDADD) $(LIBS)
test/fuzz/test_fuzz_strprintf-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_strprintf-strprintf.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/strprintf$(EXEEXT): $(test_fuzz_strprintf_OBJECTS) $(test_fuzz_strprintf_DEPENDENCIES) $(EXTRA_test_fuzz_strprintf_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/strprintf$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_strprintf_LINK) $(test_fuzz_strprintf_OBJECTS) $(test_fuzz_strprintf_LDADD) $(LIBS)
test/fuzz/test_fuzz_sub_net_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_sub_net_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/sub_net_deserialize$(EXEEXT): $(test_fuzz_sub_net_deserialize_OBJECTS) $(test_fuzz_sub_net_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_sub_net_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/sub_net_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_sub_net_deserialize_LINK) $(test_fuzz_sub_net_deserialize_OBJECTS) $(test_fuzz_sub_net_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_transaction-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_transaction-transaction.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/transaction$(EXEEXT): $(test_fuzz_transaction_OBJECTS) $(test_fuzz_transaction_DEPENDENCIES) $(EXTRA_test_fuzz_transaction_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/transaction$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_transaction_LINK) $(test_fuzz_transaction_OBJECTS) $(test_fuzz_transaction_LDADD) $(LIBS)
test/fuzz/test_fuzz_tx_in-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_tx_in-tx_in.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/tx_in$(EXEEXT): $(test_fuzz_tx_in_OBJECTS) $(test_fuzz_tx_in_DEPENDENCIES) $(EXTRA_test_fuzz_tx_in_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/tx_in$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_tx_in_LINK) $(test_fuzz_tx_in_OBJECTS) $(test_fuzz_tx_in_LDADD) $(LIBS)
test/fuzz/test_fuzz_tx_in_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_tx_in_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/tx_in_deserialize$(EXEEXT): $(test_fuzz_tx_in_deserialize_OBJECTS) $(test_fuzz_tx_in_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_tx_in_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/tx_in_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_tx_in_deserialize_LINK) $(test_fuzz_tx_in_deserialize_OBJECTS) $(test_fuzz_tx_in_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_tx_out-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_tx_out-tx_out.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/tx_out$(EXEEXT): $(test_fuzz_tx_out_OBJECTS) $(test_fuzz_tx_out_DEPENDENCIES) $(EXTRA_test_fuzz_tx_out_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/tx_out$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_tx_out_LINK) $(test_fuzz_tx_out_OBJECTS) $(test_fuzz_tx_out_LDADD) $(LIBS)
test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/txoutcompressor_deserialize$(EXEEXT): $(test_fuzz_txoutcompressor_deserialize_OBJECTS) $(test_fuzz_txoutcompressor_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_txoutcompressor_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/txoutcompressor_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_txoutcompressor_deserialize_LINK) $(test_fuzz_txoutcompressor_deserialize_OBJECTS) $(test_fuzz_txoutcompressor_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_txundo_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_txundo_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/txundo_deserialize$(EXEEXT): $(test_fuzz_txundo_deserialize_OBJECTS) $(test_fuzz_txundo_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_txundo_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/txundo_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_txundo_deserialize_LINK) $(test_fuzz_txundo_deserialize_OBJECTS) $(test_fuzz_txundo_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_uint160_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_uint160_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/uint160_deserialize$(EXEEXT): $(test_fuzz_uint160_deserialize_OBJECTS) $(test_fuzz_uint160_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_uint160_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/uint160_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_uint160_deserialize_LINK) $(test_fuzz_uint160_deserialize_OBJECTS) $(test_fuzz_uint160_deserialize_LDADD) $(LIBS)
test/fuzz/test_fuzz_uint256_deserialize-fuzz.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_uint256_deserialize-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/uint256_deserialize$(EXEEXT): $(test_fuzz_uint256_deserialize_OBJECTS) $(test_fuzz_uint256_deserialize_DEPENDENCIES) $(EXTRA_test_fuzz_uint256_deserialize_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/uint256_deserialize$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_uint256_deserialize_LINK) $(test_fuzz_uint256_deserialize_OBJECTS) $(test_fuzz_uint256_deserialize_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-main.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/gen/$(am__dirstamp):
	@$(MKDIR_P) test/gen
	@: > test/gen/$(am__dirstamp)
test/gen/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/gen/$(DEPDIR)
	@: > test/gen/$(DEPDIR)/$(am__dirstamp)
test/gen/test_test_bitsilver-crypto_gen.$(OBJEXT):  \
	test/gen/$(am__dirstamp) test/gen/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-init_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-arith_uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-addrman_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-amount_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-allocator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-bech32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-blockchain_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-blockencodings_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-blockfilter_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-blockfilter_index_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-checkqueue_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-compilerbug_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-compress_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-cuckoocache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-denialofservice_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-descriptor_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-flatfile_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-fs_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-key_io_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-limitedmap_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-logging_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-dbwrapper_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-validation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-mempool_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-merkle_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-merkleblock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-multisig_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-net_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-netbase_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-policyestimator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-prevector_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-raii_event_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-random_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-reverselock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-scheduler_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-script_p2sh_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-script_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-script_standard_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-scriptnum_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-serialize_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-settings_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-sighash_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-sigopcount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-skiplist_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-streams_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-sync_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-util_threadnames_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-timedata_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-torcontrol_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-transaction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-txindex_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-txvalidation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-txvalidationcache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-validation_block_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-validation_flush_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-versionbits_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitsilver-key_properties.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-db_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-psbt_wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-wallet_crypto_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-coinselector_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-init_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-ismine_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitsilver-scriptpubkeyman_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)

test/test_bitsilver$(EXEEXT): $(test_test_bitsilver_OBJECTS) $(test_test_bitsilver_DEPENDENCIES) $(EXTRA_test_test_bitsilver_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitsilver$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitsilver_LINK) $(test_test_bitsilver_OBJECTS) $(test_test_bitsilver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bench/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f consensus/*.$(OBJEXT)
	-rm -f consensus/*.lo
	-rm -f crc32c/src/*.$(OBJEXT)
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f index/*.$(OBJEXT)
	-rm -f interfaces/*.$(OBJEXT)
	-rm -f leveldb/db/*.$(OBJEXT)
	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)
	-rm -f leveldb/table/*.$(OBJEXT)
	-rm -f leveldb/util/*.$(OBJEXT)
	-rm -f node/*.$(OBJEXT)
	-rm -f policy/*.$(OBJEXT)
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f qt/*.$(OBJEXT)
	-rm -f qt/res/*.$(OBJEXT)
	-rm -f qt/test/*.$(OBJEXT)
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f support/*.lo
	-rm -f test/*.$(OBJEXT)
	-rm -f test/fuzz/*.$(OBJEXT)
	-rm -f test/gen/*.$(OBJEXT)
	-rm -f test/util/*.$(OBJEXT)
	-rm -f util/*.$(OBJEXT)
	-rm -f util/*.lo
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/test/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bitsilver_cli-bitsilver-cli.Po
include ./$(DEPDIR)/bitsilver_tx-bitsilver-tx.Po
include ./$(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Po
include ./$(DEPDIR)/bitsilverd-bitsilverd.Po
include ./$(DEPDIR)/libbitsilver_common_a-base58.Po
include ./$(DEPDIR)/libbitsilver_common_a-bech32.Po
include ./$(DEPDIR)/libbitsilver_common_a-bloom.Po
include ./$(DEPDIR)/libbitsilver_common_a-chainparams.Po
include ./$(DEPDIR)/libbitsilver_common_a-coins.Po
include ./$(DEPDIR)/libbitsilver_common_a-compressor.Po
include ./$(DEPDIR)/libbitsilver_common_a-core_read.Po
include ./$(DEPDIR)/libbitsilver_common_a-core_write.Po
include ./$(DEPDIR)/libbitsilver_common_a-key.Po
include ./$(DEPDIR)/libbitsilver_common_a-key_io.Po
include ./$(DEPDIR)/libbitsilver_common_a-merkleblock.Po
include ./$(DEPDIR)/libbitsilver_common_a-net_permissions.Po
include ./$(DEPDIR)/libbitsilver_common_a-netaddress.Po
include ./$(DEPDIR)/libbitsilver_common_a-netbase.Po
include ./$(DEPDIR)/libbitsilver_common_a-outputtype.Po
include ./$(DEPDIR)/libbitsilver_common_a-protocol.Po
include ./$(DEPDIR)/libbitsilver_common_a-psbt.Po
include ./$(DEPDIR)/libbitsilver_common_a-scheduler.Po
include ./$(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Po
include ./$(DEPDIR)/libbitsilver_common_a-warnings.Po
include ./$(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Po
include ./$(DEPDIR)/libbitsilver_consensus_a-hash.Po
include ./$(DEPDIR)/libbitsilver_consensus_a-pubkey.Po
include ./$(DEPDIR)/libbitsilver_consensus_a-uint256.Po
include ./$(DEPDIR)/libbitsilver_server_a-addrdb.Po
include ./$(DEPDIR)/libbitsilver_server_a-addrman.Po
include ./$(DEPDIR)/libbitsilver_server_a-banman.Po
include ./$(DEPDIR)/libbitsilver_server_a-blockencodings.Po
include ./$(DEPDIR)/libbitsilver_server_a-blockfilter.Po
include ./$(DEPDIR)/libbitsilver_server_a-chain.Po
include ./$(DEPDIR)/libbitsilver_server_a-dbwrapper.Po
include ./$(DEPDIR)/libbitsilver_server_a-dummywallet.Po
include ./$(DEPDIR)/libbitsilver_server_a-flatfile.Po
include ./$(DEPDIR)/libbitsilver_server_a-httprpc.Po
include ./$(DEPDIR)/libbitsilver_server_a-httpserver.Po
include ./$(DEPDIR)/libbitsilver_server_a-init.Po
include ./$(DEPDIR)/libbitsilver_server_a-miner.Po
include ./$(DEPDIR)/libbitsilver_server_a-net.Po
include ./$(DEPDIR)/libbitsilver_server_a-net_processing.Po
include ./$(DEPDIR)/libbitsilver_server_a-noui.Po
include ./$(DEPDIR)/libbitsilver_server_a-pow.Po
include ./$(DEPDIR)/libbitsilver_server_a-rest.Po
include ./$(DEPDIR)/libbitsilver_server_a-shutdown.Po
include ./$(DEPDIR)/libbitsilver_server_a-timedata.Po
include ./$(DEPDIR)/libbitsilver_server_a-torcontrol.Po
include ./$(DEPDIR)/libbitsilver_server_a-txdb.Po
include ./$(DEPDIR)/libbitsilver_server_a-txmempool.Po
include ./$(DEPDIR)/libbitsilver_server_a-ui_interface.Po
include ./$(DEPDIR)/libbitsilver_server_a-validation.Po
include ./$(DEPDIR)/libbitsilver_server_a-validationinterface.Po
include ./$(DEPDIR)/libbitsilver_server_a-versionbits.Po
include ./$(DEPDIR)/libbitsilver_util_a-chainparamsbase.Po
include ./$(DEPDIR)/libbitsilver_util_a-clientversion.Po
include ./$(DEPDIR)/libbitsilver_util_a-fs.Po
include ./$(DEPDIR)/libbitsilver_util_a-logging.Po
include ./$(DEPDIR)/libbitsilver_util_a-random.Po
include ./$(DEPDIR)/libbitsilver_util_a-randomenv.Po
include ./$(DEPDIR)/libbitsilver_util_a-sync.Po
include ./$(DEPDIR)/libbitsilver_util_a-threadinterrupt.Po
include ./$(DEPDIR)/libbitsilverconsensus_la-arith_uint256.Plo
include ./$(DEPDIR)/libbitsilverconsensus_la-hash.Plo
include ./$(DEPDIR)/libbitsilverconsensus_la-pubkey.Plo
include ./$(DEPDIR)/libbitsilverconsensus_la-uint256.Plo
include bench/$(DEPDIR)/bench_bench_bitsilver-base58.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-bench.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-data.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-examples.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Po
include bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Po
include compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Po
include compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Po
include compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Po
include compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Po
include compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Po
include compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Po
include compat/$(DEPDIR)/libbitsilverconsensus_la-glibc_compat.Plo
include consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Po
include consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Po
include consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Po
include consensus/$(DEPDIR)/libbitsilverconsensus_la-merkle.Plo
include consensus/$(DEPDIR)/libbitsilverconsensus_la-tx_check.Plo
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Po
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Po
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Po
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Po
include crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Po
include crypto/$(DEPDIR)/libbitsilverconsensus_la-aes.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha20.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha_poly_aead.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-hkdf_sha256_32.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha256.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-poly1305.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-ripemd160.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-sha1.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256_sse4.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-sha512.Plo
include crypto/$(DEPDIR)/libbitsilverconsensus_la-siphash.Plo
include index/$(DEPDIR)/libbitsilver_server_a-base.Po
include index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Po
include index/$(DEPDIR)/libbitsilver_server_a-txindex.Po
include interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Po
include interfaces/$(DEPDIR)/libbitsilver_server_a-node.Po
include interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Po
include interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
include leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
include node/$(DEPDIR)/libbitsilver_server_a-coin.Po
include node/$(DEPDIR)/libbitsilver_server_a-coinstats.Po
include node/$(DEPDIR)/libbitsilver_server_a-context.Po
include node/$(DEPDIR)/libbitsilver_server_a-psbt.Po
include node/$(DEPDIR)/libbitsilver_server_a-transaction.Po
include policy/$(DEPDIR)/libbitsilver_common_a-feerate.Po
include policy/$(DEPDIR)/libbitsilver_common_a-policy.Po
include policy/$(DEPDIR)/libbitsilver_server_a-fees.Po
include policy/$(DEPDIR)/libbitsilver_server_a-rbf.Po
include policy/$(DEPDIR)/libbitsilver_server_a-settings.Po
include primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Po
include primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Po
include primitives/$(DEPDIR)/libbitsilverconsensus_la-block.Plo
include primitives/$(DEPDIR)/libbitsilverconsensus_la-transaction.Plo
include qt/$(DEPDIR)/qt_bitsilver_qt-main.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Po
include qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Po
include qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Po
include rpc/$(DEPDIR)/libbitsilver_cli_a-client.Po
include rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Po
include rpc/$(DEPDIR)/libbitsilver_common_a-util.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-mining.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-misc.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-net.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Po
include rpc/$(DEPDIR)/libbitsilver_server_a-server.Po
include rpc/$(DEPDIR)/libbitsilver_util_a-request.Po
include script/$(DEPDIR)/libbitsilver_common_a-descriptor.Po
include script/$(DEPDIR)/libbitsilver_common_a-sign.Po
include script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Po
include script/$(DEPDIR)/libbitsilver_common_a-standard.Po
include script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Po
include script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Po
include script/$(DEPDIR)/libbitsilver_consensus_a-script.Po
include script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Po
include script/$(DEPDIR)/libbitsilver_server_a-sigcache.Po
include script/$(DEPDIR)/libbitsilverconsensus_la-bitsilverconsensus.Plo
include script/$(DEPDIR)/libbitsilverconsensus_la-interpreter.Plo
include script/$(DEPDIR)/libbitsilverconsensus_la-script.Plo
include script/$(DEPDIR)/libbitsilverconsensus_la-script_error.Plo
include support/$(DEPDIR)/libbitsilver_util_a-cleanse.Po
include support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Po
include support/$(DEPDIR)/libbitsilverconsensus_la-cleanse.Plo
include test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-amount_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-base32_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-base58_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-base64_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-coins_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-compress_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-fs_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-hash_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-key_properties.Po
include test/$(DEPDIR)/test_test_bitsilver-key_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-logging_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-main.Po
include test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-miner_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-net_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-pow_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-random_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-script_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-settings_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-streams_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-sync_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-util_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-validation_tests.Po
include test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Po
include test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Po
include test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Po
include test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block-block.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Po
include test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Po
include test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_float-float.Po
include test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Po
include test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Po
include test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key-key.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Po
include test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Po
include test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Po
include test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script-script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Po
include test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Po
include test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Po
include test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Po
include test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Po
include test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Po
include test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Po
include test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Po
include test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
include test/util/$(DEPDIR)/libtest_util_a-logging.Po
include test/util/$(DEPDIR)/libtest_util_a-mining.Po
include test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
include test/util/$(DEPDIR)/libtest_util_a-str.Po
include test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
include test/util/$(DEPDIR)/libtest_util_a-wallet.Po
include util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Po
include util/$(DEPDIR)/libbitsilver_util_a-asmap.Po
include util/$(DEPDIR)/libbitsilver_util_a-bip32.Po
include util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Po
include util/$(DEPDIR)/libbitsilver_util_a-error.Po
include util/$(DEPDIR)/libbitsilver_util_a-fees.Po
include util/$(DEPDIR)/libbitsilver_util_a-message.Po
include util/$(DEPDIR)/libbitsilver_util_a-moneystr.Po
include util/$(DEPDIR)/libbitsilver_util_a-rbf.Po
include util/$(DEPDIR)/libbitsilver_util_a-settings.Po
include util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Po
include util/$(DEPDIR)/libbitsilver_util_a-strencodings.Po
include util/$(DEPDIR)/libbitsilver_util_a-string.Po
include util/$(DEPDIR)/libbitsilver_util_a-system.Po
include util/$(DEPDIR)/libbitsilver_util_a-threadnames.Po
include util/$(DEPDIR)/libbitsilver_util_a-time.Po
include util/$(DEPDIR)/libbitsilver_util_a-url.Po
include util/$(DEPDIR)/libbitsilverconsensus_la-strencodings.Plo
include wallet/$(DEPDIR)/libbitsilver_server_a-init.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Po
include wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Po
include wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Po
include zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Po
include zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Po
include zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Po
include zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Po

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

crc32c/src/crc32c_libcrc32c_a-crc32c.o: crc32c/src/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_a-crc32c.o -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Tpo -c -o crc32c/src/crc32c_libcrc32c_a-crc32c.o `test -f 'crc32c/src/crc32c.cc' || echo '$(srcdir)/'`crc32c/src/crc32c.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c.cc' object='crc32c/src/crc32c_libcrc32c_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_a-crc32c.o `test -f 'crc32c/src/crc32c.cc' || echo '$(srcdir)/'`crc32c/src/crc32c.cc

crc32c/src/crc32c_libcrc32c_a-crc32c.obj: crc32c/src/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_a-crc32c.obj -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Tpo -c -o crc32c/src/crc32c_libcrc32c_a-crc32c.obj `if test -f 'crc32c/src/crc32c.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c.cc' object='crc32c/src/crc32c_libcrc32c_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_a-crc32c.obj `if test -f 'crc32c/src/crc32c.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c.cc'; fi`

crc32c/src/crc32c_libcrc32c_a-crc32c_portable.o: crc32c/src/crc32c_portable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_a-crc32c_portable.o -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Tpo -c -o crc32c/src/crc32c_libcrc32c_a-crc32c_portable.o `test -f 'crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_portable.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_portable.cc' object='crc32c/src/crc32c_libcrc32c_a-crc32c_portable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_a-crc32c_portable.o `test -f 'crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_portable.cc

crc32c/src/crc32c_libcrc32c_a-crc32c_portable.obj: crc32c/src/crc32c_portable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_a-crc32c_portable.obj -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Tpo -c -o crc32c/src/crc32c_libcrc32c_a-crc32c_portable.obj `if test -f 'crc32c/src/crc32c_portable.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_portable.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_portable.cc'; fi`
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_a-crc32c_portable.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_portable.cc' object='crc32c/src/crc32c_libcrc32c_a-crc32c_portable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_a-crc32c_portable.obj `if test -f 'crc32c/src/crc32c_portable.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_portable.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_portable.cc'; fi`

crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.o: crc32c/src/crc32c_arm64.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.o -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Tpo -c -o crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.o `test -f 'crc32c/src/crc32c_arm64.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_arm64.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_arm64.cc' object='crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.o `test -f 'crc32c/src/crc32c_arm64.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_arm64.cc

crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.obj: crc32c/src/crc32c_arm64.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.obj -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Tpo -c -o crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.obj `if test -f 'crc32c/src/crc32c_arm64.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_arm64.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_arm64.cc'; fi`
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_arm64.cc' object='crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_arm_crc_a-crc32c_arm64.obj `if test -f 'crc32c/src/crc32c_arm64.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_arm64.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_arm64.cc'; fi`

crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.o: crc32c/src/crc32c_sse42.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.o -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Tpo -c -o crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.o `test -f 'crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_sse42.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_sse42.cc' object='crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.o `test -f 'crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_sse42.cc

crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.obj: crc32c/src/crc32c_sse42.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.obj -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Tpo -c -o crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.obj `if test -f 'crc32c/src/crc32c_sse42.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_sse42.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_sse42.cc'; fi`
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_a-crc32c_sse42.Po
#	$(AM_V_CXX)source='crc32c/src/crc32c_sse42.cc' object='crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_sse42_a-crc32c_sse42.obj `if test -f 'crc32c/src/crc32c_sse42.cc'; then $(CYGPATH_W) 'crc32c/src/crc32c_sse42.cc'; else $(CYGPATH_W) '$(srcdir)/crc32c/src/crc32c_sse42.cc'; fi`

crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.o: crypto/sha256_avx2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Tpo -c -o crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.o `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Po
#	$(AM_V_CXX)source='crypto/sha256_avx2.cpp' object='crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.o `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp

crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.obj: crypto/sha256_avx2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Tpo -c -o crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.obj `if test -f 'crypto/sha256_avx2.cpp'; then $(CYGPATH_W) 'crypto/sha256_avx2.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_avx2.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.Po
#	$(AM_V_CXX)source='crypto/sha256_avx2.cpp' object='crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_avx2_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_avx2_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_avx2_a-sha256_avx2.obj `if test -f 'crypto/sha256_avx2.cpp'; then $(CYGPATH_W) 'crypto/sha256_avx2.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_avx2.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-aes.o: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-aes.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/crypto_libbitsilver_crypto_base_a-aes.obj: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-aes.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.o: crypto/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.o `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Po
#	$(AM_V_CXX)source='crypto/chacha_poly_aead.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.o `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp

crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.obj: crypto/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.obj `if test -f 'crypto/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'crypto/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha_poly_aead.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.Po
#	$(AM_V_CXX)source='crypto/chacha_poly_aead.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha_poly_aead.obj `if test -f 'crypto/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'crypto/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha_poly_aead.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-chacha20.o: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-chacha20.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/crypto_libbitsilver_crypto_base_a-chacha20.obj: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-chacha20.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.o: crypto/hkdf_sha256_32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.o `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Po
#	$(AM_V_CXX)source='crypto/hkdf_sha256_32.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.o `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp

crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.obj: crypto/hkdf_sha256_32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.obj `if test -f 'crypto/hkdf_sha256_32.cpp'; then $(CYGPATH_W) 'crypto/hkdf_sha256_32.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hkdf_sha256_32.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.Po
#	$(AM_V_CXX)source='crypto/hkdf_sha256_32.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hkdf_sha256_32.obj `if test -f 'crypto/hkdf_sha256_32.cpp'; then $(CYGPATH_W) 'crypto/hkdf_sha256_32.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hkdf_sha256_32.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.o: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-poly1305.o: crypto/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-poly1305.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-poly1305.o `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Po
#	$(AM_V_CXX)source='crypto/poly1305.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-poly1305.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-poly1305.o `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp

crypto/crypto_libbitsilver_crypto_base_a-poly1305.obj: crypto/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-poly1305.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-poly1305.obj `if test -f 'crypto/poly1305.cpp'; then $(CYGPATH_W) 'crypto/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/poly1305.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-poly1305.Po
#	$(AM_V_CXX)source='crypto/poly1305.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-poly1305.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-poly1305.obj `if test -f 'crypto/poly1305.cpp'; then $(CYGPATH_W) 'crypto/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/poly1305.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_libbitsilver_crypto_base_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_libbitsilver_crypto_base_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_libbitsilver_crypto_base_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_libbitsilver_crypto_base_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-siphash.o: crypto/siphash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-siphash.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-siphash.o `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Po
#	$(AM_V_CXX)source='crypto/siphash.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-siphash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-siphash.o `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp

crypto/crypto_libbitsilver_crypto_base_a-siphash.obj: crypto/siphash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-siphash.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-siphash.obj `if test -f 'crypto/siphash.cpp'; then $(CYGPATH_W) 'crypto/siphash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/siphash.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-siphash.Po
#	$(AM_V_CXX)source='crypto/siphash.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-siphash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-siphash.obj `if test -f 'crypto/siphash.cpp'; then $(CYGPATH_W) 'crypto/siphash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/siphash.cpp'; fi`

crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.o: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.obj: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Tpo -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_base_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_base_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_base_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_base_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`

crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.o: crypto/sha256_shani.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Tpo -c -o crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.o `test -f 'crypto/sha256_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_shani.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Po
#	$(AM_V_CXX)source='crypto/sha256_shani.cpp' object='crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.o `test -f 'crypto/sha256_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_shani.cpp

crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.obj: crypto/sha256_shani.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Tpo -c -o crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.obj `if test -f 'crypto/sha256_shani.cpp'; then $(CYGPATH_W) 'crypto/sha256_shani.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_shani.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_shani_a-sha256_shani.Po
#	$(AM_V_CXX)source='crypto/sha256_shani.cpp' object='crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_shani_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_shani_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_shani_a-sha256_shani.obj `if test -f 'crypto/sha256_shani.cpp'; then $(CYGPATH_W) 'crypto/sha256_shani.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_shani.cpp'; fi`

crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.o: crypto/sha256_sse41.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Tpo -c -o crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.o `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Po
#	$(AM_V_CXX)source='crypto/sha256_sse41.cpp' object='crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.o `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp

crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.obj: crypto/sha256_sse41.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Tpo -c -o crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.obj `if test -f 'crypto/sha256_sse41.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse41.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse41.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Tpo crypto/$(DEPDIR)/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.Po
#	$(AM_V_CXX)source='crypto/sha256_sse41.cpp' object='crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitsilver_crypto_sse41_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitsilver_crypto_sse41_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitsilver_crypto_sse41_a-sha256_sse41.obj `if test -f 'crypto/sha256_sse41.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse41.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse41.cpp'; fi`

leveldb/db/leveldb_libleveldb_a-builder.o: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc

leveldb/db/leveldb_libleveldb_a-builder.obj: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`

leveldb/db/leveldb_libleveldb_a-c.o: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc

leveldb/db/leveldb_libleveldb_a-c.obj: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dbformat.o: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc

leveldb/db/leveldb_libleveldb_a-dbformat.obj: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_impl.o: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc

leveldb/db/leveldb_libleveldb_a-db_impl.obj: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_iter.o: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc

leveldb/db/leveldb_libleveldb_a-db_iter.obj: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dumpfile.o: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc

leveldb/db/leveldb_libleveldb_a-dumpfile.obj: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`

leveldb/db/leveldb_libleveldb_a-filename.o: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc

leveldb/db/leveldb_libleveldb_a-filename.obj: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_reader.o: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc

leveldb/db/leveldb_libleveldb_a-log_reader.obj: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_writer.o: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc

leveldb/db/leveldb_libleveldb_a-log_writer.obj: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`

leveldb/db/leveldb_libleveldb_a-memtable.o: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc

leveldb/db/leveldb_libleveldb_a-memtable.obj: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`

leveldb/db/leveldb_libleveldb_a-repair.o: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc

leveldb/db/leveldb_libleveldb_a-repair.obj: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`

leveldb/db/leveldb_libleveldb_a-table_cache.o: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc

leveldb/db/leveldb_libleveldb_a-table_cache.obj: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_edit.o: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc

leveldb/db/leveldb_libleveldb_a-version_edit.obj: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_set.o: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc

leveldb/db/leveldb_libleveldb_a-version_set.obj: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`

leveldb/db/leveldb_libleveldb_a-write_batch.o: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc

leveldb/db/leveldb_libleveldb_a-write_batch.obj: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block_builder.o: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc

leveldb/table/leveldb_libleveldb_a-block_builder.obj: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block.o: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc

leveldb/table/leveldb_libleveldb_a-block.obj: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-filter_block.o: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc

leveldb/table/leveldb_libleveldb_a-filter_block.obj: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-format.o: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc

leveldb/table/leveldb_libleveldb_a-format.obj: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`

leveldb/table/leveldb_libleveldb_a-iterator.o: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc

leveldb/table/leveldb_libleveldb_a-iterator.obj: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`

leveldb/table/leveldb_libleveldb_a-merger.o: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc

leveldb/table/leveldb_libleveldb_a-merger.obj: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table_builder.o: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc

leveldb/table/leveldb_libleveldb_a-table_builder.obj: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table.o: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc

leveldb/table/leveldb_libleveldb_a-table.obj: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`

leveldb/table/leveldb_libleveldb_a-two_level_iterator.o: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc

leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-arena.o: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc

leveldb/util/leveldb_libleveldb_a-arena.obj: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`

leveldb/util/leveldb_libleveldb_a-bloom.o: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc

leveldb/util/leveldb_libleveldb_a-bloom.obj: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`

leveldb/util/leveldb_libleveldb_a-cache.o: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc

leveldb/util/leveldb_libleveldb_a-cache.obj: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`

leveldb/util/leveldb_libleveldb_a-coding.o: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc

leveldb/util/leveldb_libleveldb_a-coding.obj: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`

leveldb/util/leveldb_libleveldb_a-comparator.o: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc

leveldb/util/leveldb_libleveldb_a-comparator.obj: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-crc32c.o: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc

leveldb/util/leveldb_libleveldb_a-crc32c.obj: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env.o: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc

leveldb/util/leveldb_libleveldb_a-env.obj: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`

leveldb/util/leveldb_libleveldb_a-filter_policy.o: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc

leveldb/util/leveldb_libleveldb_a-filter_policy.obj: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`

leveldb/util/leveldb_libleveldb_a-hash.o: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc

leveldb/util/leveldb_libleveldb_a-hash.obj: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`

leveldb/util/leveldb_libleveldb_a-histogram.o: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc

leveldb/util/leveldb_libleveldb_a-histogram.obj: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`

leveldb/util/leveldb_libleveldb_a-logging.o: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc

leveldb/util/leveldb_libleveldb_a-logging.obj: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`

leveldb/util/leveldb_libleveldb_a-options.o: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc

leveldb/util/leveldb_libleveldb_a-options.obj: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`

leveldb/util/leveldb_libleveldb_a-status.o: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc

leveldb/util/leveldb_libleveldb_a-status.obj: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_windows.o: leveldb/util/env_windows.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_windows.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_windows.o `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Po
#	$(AM_V_CXX)source='leveldb/util/env_windows.cc' object='leveldb/util/leveldb_libleveldb_a-env_windows.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_windows.o `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc

leveldb/util/leveldb_libleveldb_a-env_windows.obj: leveldb/util/env_windows.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_windows.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_windows.obj `if test -f 'leveldb/util/env_windows.cc'; then $(CYGPATH_W) 'leveldb/util/env_windows.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_windows.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_windows.Po
#	$(AM_V_CXX)source='leveldb/util/env_windows.cc' object='leveldb/util/leveldb_libleveldb_a-env_windows.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_windows.obj `if test -f 'leveldb/util/env_windows.cc'; then $(CYGPATH_W) 'leveldb/util/env_windows.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_windows.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_posix.o: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc

leveldb/util/leveldb_libleveldb_a-env_posix.obj: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`

compat/libbitsilver_cli_a-stdin.o: compat/stdin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_cli_a-stdin.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Tpo -c -o compat/libbitsilver_cli_a-stdin.o `test -f 'compat/stdin.cpp' || echo '$(srcdir)/'`compat/stdin.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Tpo compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Po
#	$(AM_V_CXX)source='compat/stdin.cpp' object='compat/libbitsilver_cli_a-stdin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_cli_a-stdin.o `test -f 'compat/stdin.cpp' || echo '$(srcdir)/'`compat/stdin.cpp

compat/libbitsilver_cli_a-stdin.obj: compat/stdin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_cli_a-stdin.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Tpo -c -o compat/libbitsilver_cli_a-stdin.obj `if test -f 'compat/stdin.cpp'; then $(CYGPATH_W) 'compat/stdin.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/stdin.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Tpo compat/$(DEPDIR)/libbitsilver_cli_a-stdin.Po
#	$(AM_V_CXX)source='compat/stdin.cpp' object='compat/libbitsilver_cli_a-stdin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_cli_a-stdin.obj `if test -f 'compat/stdin.cpp'; then $(CYGPATH_W) 'compat/stdin.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/stdin.cpp'; fi`

rpc/libbitsilver_cli_a-client.o: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_cli_a-client.Tpo -c -o rpc/libbitsilver_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_cli_a-client.Tpo rpc/$(DEPDIR)/libbitsilver_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitsilver_cli_a-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libbitsilver_cli_a-client.obj: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_cli_a-client.Tpo -c -o rpc/libbitsilver_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_cli_a-client.Tpo rpc/$(DEPDIR)/libbitsilver_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitsilver_cli_a-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

libbitsilver_common_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-base58.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-base58.Tpo -c -o libbitsilver_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-base58.Tpo $(DEPDIR)/libbitsilver_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitsilver_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libbitsilver_common_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-base58.Tpo -c -o libbitsilver_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-base58.Tpo $(DEPDIR)/libbitsilver_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitsilver_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libbitsilver_common_a-bech32.o: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-bech32.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-bech32.Tpo -c -o libbitsilver_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-bech32.Tpo $(DEPDIR)/libbitsilver_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libbitsilver_common_a-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp

libbitsilver_common_a-bech32.obj: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-bech32.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-bech32.Tpo -c -o libbitsilver_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-bech32.Tpo $(DEPDIR)/libbitsilver_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libbitsilver_common_a-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`

libbitsilver_common_a-bloom.o: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-bloom.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-bloom.Tpo -c -o libbitsilver_common_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-bloom.Tpo $(DEPDIR)/libbitsilver_common_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libbitsilver_common_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp

libbitsilver_common_a-bloom.obj: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-bloom.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-bloom.Tpo -c -o libbitsilver_common_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-bloom.Tpo $(DEPDIR)/libbitsilver_common_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libbitsilver_common_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`

libbitsilver_common_a-chainparams.o: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-chainparams.Tpo -c -o libbitsilver_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-chainparams.Tpo $(DEPDIR)/libbitsilver_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitsilver_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libbitsilver_common_a-chainparams.obj: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-chainparams.Tpo -c -o libbitsilver_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-chainparams.Tpo $(DEPDIR)/libbitsilver_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitsilver_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libbitsilver_common_a-coins.o: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-coins.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-coins.Tpo -c -o libbitsilver_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-coins.Tpo $(DEPDIR)/libbitsilver_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitsilver_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libbitsilver_common_a-coins.obj: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-coins.Tpo -c -o libbitsilver_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-coins.Tpo $(DEPDIR)/libbitsilver_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitsilver_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

libbitsilver_common_a-compressor.o: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-compressor.Tpo -c -o libbitsilver_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-compressor.Tpo $(DEPDIR)/libbitsilver_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitsilver_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libbitsilver_common_a-compressor.obj: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-compressor.Tpo -c -o libbitsilver_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-compressor.Tpo $(DEPDIR)/libbitsilver_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitsilver_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

libbitsilver_common_a-core_read.o: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-core_read.Tpo -c -o libbitsilver_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-core_read.Tpo $(DEPDIR)/libbitsilver_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitsilver_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libbitsilver_common_a-core_read.obj: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-core_read.Tpo -c -o libbitsilver_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-core_read.Tpo $(DEPDIR)/libbitsilver_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitsilver_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libbitsilver_common_a-core_write.o: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-core_write.Tpo -c -o libbitsilver_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-core_write.Tpo $(DEPDIR)/libbitsilver_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitsilver_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libbitsilver_common_a-core_write.obj: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-core_write.Tpo -c -o libbitsilver_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-core_write.Tpo $(DEPDIR)/libbitsilver_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitsilver_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

libbitsilver_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-key.Tpo -c -o libbitsilver_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-key.Tpo $(DEPDIR)/libbitsilver_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitsilver_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitsilver_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-key.Tpo -c -o libbitsilver_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-key.Tpo $(DEPDIR)/libbitsilver_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitsilver_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libbitsilver_common_a-key_io.o: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-key_io.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-key_io.Tpo -c -o libbitsilver_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-key_io.Tpo $(DEPDIR)/libbitsilver_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libbitsilver_common_a-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp

libbitsilver_common_a-key_io.obj: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-key_io.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-key_io.Tpo -c -o libbitsilver_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-key_io.Tpo $(DEPDIR)/libbitsilver_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libbitsilver_common_a-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`

libbitsilver_common_a-merkleblock.o: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-merkleblock.Tpo -c -o libbitsilver_common_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-merkleblock.Tpo $(DEPDIR)/libbitsilver_common_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitsilver_common_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libbitsilver_common_a-merkleblock.obj: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-merkleblock.Tpo -c -o libbitsilver_common_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-merkleblock.Tpo $(DEPDIR)/libbitsilver_common_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitsilver_common_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libbitsilver_common_a-netaddress.o: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-netaddress.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-netaddress.Tpo -c -o libbitsilver_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-netaddress.Tpo $(DEPDIR)/libbitsilver_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libbitsilver_common_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp

libbitsilver_common_a-netaddress.obj: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-netaddress.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-netaddress.Tpo -c -o libbitsilver_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-netaddress.Tpo $(DEPDIR)/libbitsilver_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libbitsilver_common_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`

libbitsilver_common_a-netbase.o: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-netbase.Tpo -c -o libbitsilver_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-netbase.Tpo $(DEPDIR)/libbitsilver_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitsilver_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libbitsilver_common_a-netbase.obj: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-netbase.Tpo -c -o libbitsilver_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-netbase.Tpo $(DEPDIR)/libbitsilver_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitsilver_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

libbitsilver_common_a-net_permissions.o: net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-net_permissions.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-net_permissions.Tpo -c -o libbitsilver_common_a-net_permissions.o `test -f 'net_permissions.cpp' || echo '$(srcdir)/'`net_permissions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-net_permissions.Tpo $(DEPDIR)/libbitsilver_common_a-net_permissions.Po
#	$(AM_V_CXX)source='net_permissions.cpp' object='libbitsilver_common_a-net_permissions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-net_permissions.o `test -f 'net_permissions.cpp' || echo '$(srcdir)/'`net_permissions.cpp

libbitsilver_common_a-net_permissions.obj: net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-net_permissions.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-net_permissions.Tpo -c -o libbitsilver_common_a-net_permissions.obj `if test -f 'net_permissions.cpp'; then $(CYGPATH_W) 'net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/net_permissions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-net_permissions.Tpo $(DEPDIR)/libbitsilver_common_a-net_permissions.Po
#	$(AM_V_CXX)source='net_permissions.cpp' object='libbitsilver_common_a-net_permissions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-net_permissions.obj `if test -f 'net_permissions.cpp'; then $(CYGPATH_W) 'net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/net_permissions.cpp'; fi`

libbitsilver_common_a-outputtype.o: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-outputtype.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-outputtype.Tpo -c -o libbitsilver_common_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-outputtype.Tpo $(DEPDIR)/libbitsilver_common_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libbitsilver_common_a-outputtype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp

libbitsilver_common_a-outputtype.obj: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-outputtype.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-outputtype.Tpo -c -o libbitsilver_common_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-outputtype.Tpo $(DEPDIR)/libbitsilver_common_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libbitsilver_common_a-outputtype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`

policy/libbitsilver_common_a-feerate.o: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_common_a-feerate.o -MD -MP -MF policy/$(DEPDIR)/libbitsilver_common_a-feerate.Tpo -c -o policy/libbitsilver_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_common_a-feerate.Tpo policy/$(DEPDIR)/libbitsilver_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libbitsilver_common_a-feerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp

policy/libbitsilver_common_a-feerate.obj: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_common_a-feerate.obj -MD -MP -MF policy/$(DEPDIR)/libbitsilver_common_a-feerate.Tpo -c -o policy/libbitsilver_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_common_a-feerate.Tpo policy/$(DEPDIR)/libbitsilver_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libbitsilver_common_a-feerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`

policy/libbitsilver_common_a-policy.o: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_common_a-policy.o -MD -MP -MF policy/$(DEPDIR)/libbitsilver_common_a-policy.Tpo -c -o policy/libbitsilver_common_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_common_a-policy.Tpo policy/$(DEPDIR)/libbitsilver_common_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitsilver_common_a-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_common_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libbitsilver_common_a-policy.obj: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_common_a-policy.obj -MD -MP -MF policy/$(DEPDIR)/libbitsilver_common_a-policy.Tpo -c -o policy/libbitsilver_common_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_common_a-policy.Tpo policy/$(DEPDIR)/libbitsilver_common_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitsilver_common_a-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_common_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`

libbitsilver_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-protocol.Tpo -c -o libbitsilver_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-protocol.Tpo $(DEPDIR)/libbitsilver_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitsilver_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libbitsilver_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-protocol.Tpo -c -o libbitsilver_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-protocol.Tpo $(DEPDIR)/libbitsilver_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitsilver_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libbitsilver_common_a-psbt.o: psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-psbt.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-psbt.Tpo -c -o libbitsilver_common_a-psbt.o `test -f 'psbt.cpp' || echo '$(srcdir)/'`psbt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-psbt.Tpo $(DEPDIR)/libbitsilver_common_a-psbt.Po
#	$(AM_V_CXX)source='psbt.cpp' object='libbitsilver_common_a-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-psbt.o `test -f 'psbt.cpp' || echo '$(srcdir)/'`psbt.cpp

libbitsilver_common_a-psbt.obj: psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-psbt.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-psbt.Tpo -c -o libbitsilver_common_a-psbt.obj `if test -f 'psbt.cpp'; then $(CYGPATH_W) 'psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-psbt.Tpo $(DEPDIR)/libbitsilver_common_a-psbt.Po
#	$(AM_V_CXX)source='psbt.cpp' object='libbitsilver_common_a-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-psbt.obj `if test -f 'psbt.cpp'; then $(CYGPATH_W) 'psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/psbt.cpp'; fi`

rpc/libbitsilver_common_a-rawtransaction_util.o: rpc/rawtransaction_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_common_a-rawtransaction_util.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Tpo -c -o rpc/libbitsilver_common_a-rawtransaction_util.o `test -f 'rpc/rawtransaction_util.cpp' || echo '$(srcdir)/'`rpc/rawtransaction_util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Tpo rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Po
#	$(AM_V_CXX)source='rpc/rawtransaction_util.cpp' object='rpc/libbitsilver_common_a-rawtransaction_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_common_a-rawtransaction_util.o `test -f 'rpc/rawtransaction_util.cpp' || echo '$(srcdir)/'`rpc/rawtransaction_util.cpp

rpc/libbitsilver_common_a-rawtransaction_util.obj: rpc/rawtransaction_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_common_a-rawtransaction_util.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Tpo -c -o rpc/libbitsilver_common_a-rawtransaction_util.obj `if test -f 'rpc/rawtransaction_util.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction_util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Tpo rpc/$(DEPDIR)/libbitsilver_common_a-rawtransaction_util.Po
#	$(AM_V_CXX)source='rpc/rawtransaction_util.cpp' object='rpc/libbitsilver_common_a-rawtransaction_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_common_a-rawtransaction_util.obj `if test -f 'rpc/rawtransaction_util.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction_util.cpp'; fi`

rpc/libbitsilver_common_a-util.o: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_common_a-util.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_common_a-util.Tpo -c -o rpc/libbitsilver_common_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_common_a-util.Tpo rpc/$(DEPDIR)/libbitsilver_common_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libbitsilver_common_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_common_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp

rpc/libbitsilver_common_a-util.obj: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_common_a-util.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_common_a-util.Tpo -c -o rpc/libbitsilver_common_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_common_a-util.Tpo rpc/$(DEPDIR)/libbitsilver_common_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libbitsilver_common_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_common_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`

libbitsilver_common_a-scheduler.o: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-scheduler.Tpo -c -o libbitsilver_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-scheduler.Tpo $(DEPDIR)/libbitsilver_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitsilver_common_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libbitsilver_common_a-scheduler.obj: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-scheduler.Tpo -c -o libbitsilver_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-scheduler.Tpo $(DEPDIR)/libbitsilver_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitsilver_common_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libbitsilver_common_a-descriptor.o: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-descriptor.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-descriptor.Tpo -c -o script/libbitsilver_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-descriptor.Tpo script/$(DEPDIR)/libbitsilver_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libbitsilver_common_a-descriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp

script/libbitsilver_common_a-descriptor.obj: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-descriptor.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-descriptor.Tpo -c -o script/libbitsilver_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-descriptor.Tpo script/$(DEPDIR)/libbitsilver_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libbitsilver_common_a-descriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`

script/libbitsilver_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-sign.Tpo -c -o script/libbitsilver_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-sign.Tpo script/$(DEPDIR)/libbitsilver_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitsilver_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libbitsilver_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-sign.Tpo -c -o script/libbitsilver_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-sign.Tpo script/$(DEPDIR)/libbitsilver_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitsilver_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libbitsilver_common_a-signingprovider.o: script/signingprovider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-signingprovider.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Tpo -c -o script/libbitsilver_common_a-signingprovider.o `test -f 'script/signingprovider.cpp' || echo '$(srcdir)/'`script/signingprovider.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Tpo script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Po
#	$(AM_V_CXX)source='script/signingprovider.cpp' object='script/libbitsilver_common_a-signingprovider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-signingprovider.o `test -f 'script/signingprovider.cpp' || echo '$(srcdir)/'`script/signingprovider.cpp

script/libbitsilver_common_a-signingprovider.obj: script/signingprovider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-signingprovider.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Tpo -c -o script/libbitsilver_common_a-signingprovider.obj `if test -f 'script/signingprovider.cpp'; then $(CYGPATH_W) 'script/signingprovider.cpp'; else $(CYGPATH_W) '$(srcdir)/script/signingprovider.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Tpo script/$(DEPDIR)/libbitsilver_common_a-signingprovider.Po
#	$(AM_V_CXX)source='script/signingprovider.cpp' object='script/libbitsilver_common_a-signingprovider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-signingprovider.obj `if test -f 'script/signingprovider.cpp'; then $(CYGPATH_W) 'script/signingprovider.cpp'; else $(CYGPATH_W) '$(srcdir)/script/signingprovider.cpp'; fi`

script/libbitsilver_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-standard.Tpo -c -o script/libbitsilver_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-standard.Tpo script/$(DEPDIR)/libbitsilver_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitsilver_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libbitsilver_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_common_a-standard.Tpo -c -o script/libbitsilver_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_common_a-standard.Tpo script/$(DEPDIR)/libbitsilver_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitsilver_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libbitsilver_common_a-versionbitsinfo.o: versionbitsinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-versionbitsinfo.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Tpo -c -o libbitsilver_common_a-versionbitsinfo.o `test -f 'versionbitsinfo.cpp' || echo '$(srcdir)/'`versionbitsinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Tpo $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Po
#	$(AM_V_CXX)source='versionbitsinfo.cpp' object='libbitsilver_common_a-versionbitsinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-versionbitsinfo.o `test -f 'versionbitsinfo.cpp' || echo '$(srcdir)/'`versionbitsinfo.cpp

libbitsilver_common_a-versionbitsinfo.obj: versionbitsinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-versionbitsinfo.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Tpo -c -o libbitsilver_common_a-versionbitsinfo.obj `if test -f 'versionbitsinfo.cpp'; then $(CYGPATH_W) 'versionbitsinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbitsinfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Tpo $(DEPDIR)/libbitsilver_common_a-versionbitsinfo.Po
#	$(AM_V_CXX)source='versionbitsinfo.cpp' object='libbitsilver_common_a-versionbitsinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-versionbitsinfo.obj `if test -f 'versionbitsinfo.cpp'; then $(CYGPATH_W) 'versionbitsinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbitsinfo.cpp'; fi`

libbitsilver_common_a-warnings.o: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-warnings.o -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-warnings.Tpo -c -o libbitsilver_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-warnings.Tpo $(DEPDIR)/libbitsilver_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitsilver_common_a-warnings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp

libbitsilver_common_a-warnings.obj: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_common_a-warnings.obj -MD -MP -MF $(DEPDIR)/libbitsilver_common_a-warnings.Tpo -c -o libbitsilver_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_common_a-warnings.Tpo $(DEPDIR)/libbitsilver_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitsilver_common_a-warnings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`

libbitsilver_consensus_a-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Tpo -c -o libbitsilver_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitsilver_consensus_a-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitsilver_consensus_a-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Tpo -c -o libbitsilver_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitsilver_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitsilver_consensus_a-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

consensus/libbitsilver_consensus_a-merkle.o: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_consensus_a-merkle.o -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Tpo -c -o consensus/libbitsilver_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitsilver_consensus_a-merkle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitsilver_consensus_a-merkle.obj: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_consensus_a-merkle.obj -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Tpo -c -o consensus/libbitsilver_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitsilver_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitsilver_consensus_a-merkle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`

consensus/libbitsilver_consensus_a-tx_check.o: consensus/tx_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_consensus_a-tx_check.o -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Tpo -c -o consensus/libbitsilver_consensus_a-tx_check.o `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Tpo consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Po
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitsilver_consensus_a-tx_check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_consensus_a-tx_check.o `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp

consensus/libbitsilver_consensus_a-tx_check.obj: consensus/tx_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_consensus_a-tx_check.obj -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Tpo -c -o consensus/libbitsilver_consensus_a-tx_check.obj `if test -f 'consensus/tx_check.cpp'; then $(CYGPATH_W) 'consensus/tx_check.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_check.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Tpo consensus/$(DEPDIR)/libbitsilver_consensus_a-tx_check.Po
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitsilver_consensus_a-tx_check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_consensus_a-tx_check.obj `if test -f 'consensus/tx_check.cpp'; then $(CYGPATH_W) 'consensus/tx_check.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_check.cpp'; fi`

libbitsilver_consensus_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-hash.o -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-hash.Tpo -c -o libbitsilver_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-hash.Tpo $(DEPDIR)/libbitsilver_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitsilver_consensus_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbitsilver_consensus_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-hash.obj -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-hash.Tpo -c -o libbitsilver_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-hash.Tpo $(DEPDIR)/libbitsilver_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitsilver_consensus_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

primitives/libbitsilver_consensus_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilver_consensus_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Tpo -c -o primitives/libbitsilver_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitsilver_consensus_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilver_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitsilver_consensus_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilver_consensus_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Tpo -c -o primitives/libbitsilver_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitsilver_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitsilver_consensus_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilver_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libbitsilver_consensus_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilver_consensus_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Tpo -c -o primitives/libbitsilver_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitsilver_consensus_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilver_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libbitsilver_consensus_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilver_consensus_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Tpo -c -o primitives/libbitsilver_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitsilver_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitsilver_consensus_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilver_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libbitsilver_consensus_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-pubkey.o -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-pubkey.Tpo -c -o libbitsilver_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-pubkey.Tpo $(DEPDIR)/libbitsilver_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitsilver_consensus_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libbitsilver_consensus_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-pubkey.Tpo -c -o libbitsilver_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-pubkey.Tpo $(DEPDIR)/libbitsilver_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitsilver_consensus_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

script/libbitsilver_consensus_a-bitsilverconsensus.o: script/bitsilverconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-bitsilverconsensus.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Tpo -c -o script/libbitsilver_consensus_a-bitsilverconsensus.o `test -f 'script/bitsilverconsensus.cpp' || echo '$(srcdir)/'`script/bitsilverconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Po
#	$(AM_V_CXX)source='script/bitsilverconsensus.cpp' object='script/libbitsilver_consensus_a-bitsilverconsensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-bitsilverconsensus.o `test -f 'script/bitsilverconsensus.cpp' || echo '$(srcdir)/'`script/bitsilverconsensus.cpp

script/libbitsilver_consensus_a-bitsilverconsensus.obj: script/bitsilverconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-bitsilverconsensus.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Tpo -c -o script/libbitsilver_consensus_a-bitsilverconsensus.obj `if test -f 'script/bitsilverconsensus.cpp'; then $(CYGPATH_W) 'script/bitsilverconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitsilverconsensus.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-bitsilverconsensus.Po
#	$(AM_V_CXX)source='script/bitsilverconsensus.cpp' object='script/libbitsilver_consensus_a-bitsilverconsensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-bitsilverconsensus.obj `if test -f 'script/bitsilverconsensus.cpp'; then $(CYGPATH_W) 'script/bitsilverconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitsilverconsensus.cpp'; fi`

script/libbitsilver_consensus_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Tpo -c -o script/libbitsilver_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitsilver_consensus_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitsilver_consensus_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Tpo -c -o script/libbitsilver_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitsilver_consensus_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libbitsilver_consensus_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-script.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-script.Tpo -c -o script/libbitsilver_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-script.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitsilver_consensus_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitsilver_consensus_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-script.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-script.Tpo -c -o script/libbitsilver_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-script.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitsilver_consensus_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libbitsilver_consensus_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Tpo -c -o script/libbitsilver_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitsilver_consensus_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libbitsilver_consensus_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_consensus_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Tpo -c -o script/libbitsilver_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitsilver_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitsilver_consensus_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

libbitsilver_consensus_a-uint256.o: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-uint256.o -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-uint256.Tpo -c -o libbitsilver_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-uint256.Tpo $(DEPDIR)/libbitsilver_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libbitsilver_consensus_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libbitsilver_consensus_a-uint256.obj: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_consensus_a-uint256.obj -MD -MP -MF $(DEPDIR)/libbitsilver_consensus_a-uint256.Tpo -c -o libbitsilver_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_consensus_a-uint256.Tpo $(DEPDIR)/libbitsilver_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libbitsilver_consensus_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

util/libbitsilver_consensus_a-strencodings.o: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_consensus_a-strencodings.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Tpo -c -o util/libbitsilver_consensus_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Tpo util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitsilver_consensus_a-strencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_consensus_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

util/libbitsilver_consensus_a-strencodings.obj: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_consensus_a-strencodings.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Tpo -c -o util/libbitsilver_consensus_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Tpo util/$(DEPDIR)/libbitsilver_consensus_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitsilver_consensus_a-strencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_consensus_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`

libbitsilver_server_a-addrdb.o: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-addrdb.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-addrdb.Tpo -c -o libbitsilver_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-addrdb.Tpo $(DEPDIR)/libbitsilver_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitsilver_server_a-addrdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp

libbitsilver_server_a-addrdb.obj: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-addrdb.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-addrdb.Tpo -c -o libbitsilver_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-addrdb.Tpo $(DEPDIR)/libbitsilver_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitsilver_server_a-addrdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`

libbitsilver_server_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-addrman.Tpo -c -o libbitsilver_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-addrman.Tpo $(DEPDIR)/libbitsilver_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitsilver_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libbitsilver_server_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-addrman.Tpo -c -o libbitsilver_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-addrman.Tpo $(DEPDIR)/libbitsilver_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitsilver_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libbitsilver_server_a-banman.o: banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-banman.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-banman.Tpo -c -o libbitsilver_server_a-banman.o `test -f 'banman.cpp' || echo '$(srcdir)/'`banman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-banman.Tpo $(DEPDIR)/libbitsilver_server_a-banman.Po
#	$(AM_V_CXX)source='banman.cpp' object='libbitsilver_server_a-banman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-banman.o `test -f 'banman.cpp' || echo '$(srcdir)/'`banman.cpp

libbitsilver_server_a-banman.obj: banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-banman.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-banman.Tpo -c -o libbitsilver_server_a-banman.obj `if test -f 'banman.cpp'; then $(CYGPATH_W) 'banman.cpp'; else $(CYGPATH_W) '$(srcdir)/banman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-banman.Tpo $(DEPDIR)/libbitsilver_server_a-banman.Po
#	$(AM_V_CXX)source='banman.cpp' object='libbitsilver_server_a-banman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-banman.obj `if test -f 'banman.cpp'; then $(CYGPATH_W) 'banman.cpp'; else $(CYGPATH_W) '$(srcdir)/banman.cpp'; fi`

libbitsilver_server_a-blockencodings.o: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-blockencodings.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-blockencodings.Tpo -c -o libbitsilver_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-blockencodings.Tpo $(DEPDIR)/libbitsilver_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitsilver_server_a-blockencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp

libbitsilver_server_a-blockencodings.obj: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-blockencodings.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-blockencodings.Tpo -c -o libbitsilver_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-blockencodings.Tpo $(DEPDIR)/libbitsilver_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitsilver_server_a-blockencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`

libbitsilver_server_a-blockfilter.o: blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-blockfilter.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-blockfilter.Tpo -c -o libbitsilver_server_a-blockfilter.o `test -f 'blockfilter.cpp' || echo '$(srcdir)/'`blockfilter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-blockfilter.Tpo $(DEPDIR)/libbitsilver_server_a-blockfilter.Po
#	$(AM_V_CXX)source='blockfilter.cpp' object='libbitsilver_server_a-blockfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-blockfilter.o `test -f 'blockfilter.cpp' || echo '$(srcdir)/'`blockfilter.cpp

libbitsilver_server_a-blockfilter.obj: blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-blockfilter.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-blockfilter.Tpo -c -o libbitsilver_server_a-blockfilter.obj `if test -f 'blockfilter.cpp'; then $(CYGPATH_W) 'blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-blockfilter.Tpo $(DEPDIR)/libbitsilver_server_a-blockfilter.Po
#	$(AM_V_CXX)source='blockfilter.cpp' object='libbitsilver_server_a-blockfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-blockfilter.obj `if test -f 'blockfilter.cpp'; then $(CYGPATH_W) 'blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfilter.cpp'; fi`

libbitsilver_server_a-chain.o: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-chain.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-chain.Tpo -c -o libbitsilver_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-chain.Tpo $(DEPDIR)/libbitsilver_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitsilver_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libbitsilver_server_a-chain.obj: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-chain.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-chain.Tpo -c -o libbitsilver_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-chain.Tpo $(DEPDIR)/libbitsilver_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitsilver_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

consensus/libbitsilver_server_a-tx_verify.o: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_server_a-tx_verify.o -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Tpo -c -o consensus/libbitsilver_server_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Tpo consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libbitsilver_server_a-tx_verify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_server_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp

consensus/libbitsilver_server_a-tx_verify.obj: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilver_server_a-tx_verify.obj -MD -MP -MF consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Tpo -c -o consensus/libbitsilver_server_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Tpo consensus/$(DEPDIR)/libbitsilver_server_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libbitsilver_server_a-tx_verify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilver_server_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`

libbitsilver_server_a-flatfile.o: flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-flatfile.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-flatfile.Tpo -c -o libbitsilver_server_a-flatfile.o `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-flatfile.Tpo $(DEPDIR)/libbitsilver_server_a-flatfile.Po
#	$(AM_V_CXX)source='flatfile.cpp' object='libbitsilver_server_a-flatfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-flatfile.o `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp

libbitsilver_server_a-flatfile.obj: flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-flatfile.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-flatfile.Tpo -c -o libbitsilver_server_a-flatfile.obj `if test -f 'flatfile.cpp'; then $(CYGPATH_W) 'flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/flatfile.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-flatfile.Tpo $(DEPDIR)/libbitsilver_server_a-flatfile.Po
#	$(AM_V_CXX)source='flatfile.cpp' object='libbitsilver_server_a-flatfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-flatfile.obj `if test -f 'flatfile.cpp'; then $(CYGPATH_W) 'flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/flatfile.cpp'; fi`

libbitsilver_server_a-httprpc.o: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-httprpc.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-httprpc.Tpo -c -o libbitsilver_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-httprpc.Tpo $(DEPDIR)/libbitsilver_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitsilver_server_a-httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libbitsilver_server_a-httprpc.obj: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-httprpc.Tpo -c -o libbitsilver_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-httprpc.Tpo $(DEPDIR)/libbitsilver_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitsilver_server_a-httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libbitsilver_server_a-httpserver.o: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-httpserver.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-httpserver.Tpo -c -o libbitsilver_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-httpserver.Tpo $(DEPDIR)/libbitsilver_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitsilver_server_a-httpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libbitsilver_server_a-httpserver.obj: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-httpserver.Tpo -c -o libbitsilver_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-httpserver.Tpo $(DEPDIR)/libbitsilver_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitsilver_server_a-httpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

index/libbitsilver_server_a-base.o: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-base.o -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-base.Tpo -c -o index/libbitsilver_server_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-base.Tpo index/$(DEPDIR)/libbitsilver_server_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libbitsilver_server_a-base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp

index/libbitsilver_server_a-base.obj: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-base.obj -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-base.Tpo -c -o index/libbitsilver_server_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-base.Tpo index/$(DEPDIR)/libbitsilver_server_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libbitsilver_server_a-base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`

index/libbitsilver_server_a-blockfilterindex.o: index/blockfilterindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-blockfilterindex.o -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Tpo -c -o index/libbitsilver_server_a-blockfilterindex.o `test -f 'index/blockfilterindex.cpp' || echo '$(srcdir)/'`index/blockfilterindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Tpo index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Po
#	$(AM_V_CXX)source='index/blockfilterindex.cpp' object='index/libbitsilver_server_a-blockfilterindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-blockfilterindex.o `test -f 'index/blockfilterindex.cpp' || echo '$(srcdir)/'`index/blockfilterindex.cpp

index/libbitsilver_server_a-blockfilterindex.obj: index/blockfilterindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-blockfilterindex.obj -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Tpo -c -o index/libbitsilver_server_a-blockfilterindex.obj `if test -f 'index/blockfilterindex.cpp'; then $(CYGPATH_W) 'index/blockfilterindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/blockfilterindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Tpo index/$(DEPDIR)/libbitsilver_server_a-blockfilterindex.Po
#	$(AM_V_CXX)source='index/blockfilterindex.cpp' object='index/libbitsilver_server_a-blockfilterindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-blockfilterindex.obj `if test -f 'index/blockfilterindex.cpp'; then $(CYGPATH_W) 'index/blockfilterindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/blockfilterindex.cpp'; fi`

index/libbitsilver_server_a-txindex.o: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-txindex.o -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-txindex.Tpo -c -o index/libbitsilver_server_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-txindex.Tpo index/$(DEPDIR)/libbitsilver_server_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libbitsilver_server_a-txindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp

index/libbitsilver_server_a-txindex.obj: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitsilver_server_a-txindex.obj -MD -MP -MF index/$(DEPDIR)/libbitsilver_server_a-txindex.Tpo -c -o index/libbitsilver_server_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitsilver_server_a-txindex.Tpo index/$(DEPDIR)/libbitsilver_server_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libbitsilver_server_a-txindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitsilver_server_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`

interfaces/libbitsilver_server_a-chain.o: interfaces/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_server_a-chain.o -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Tpo -c -o interfaces/libbitsilver_server_a-chain.o `test -f 'interfaces/chain.cpp' || echo '$(srcdir)/'`interfaces/chain.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Tpo interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Po
#	$(AM_V_CXX)source='interfaces/chain.cpp' object='interfaces/libbitsilver_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_server_a-chain.o `test -f 'interfaces/chain.cpp' || echo '$(srcdir)/'`interfaces/chain.cpp

interfaces/libbitsilver_server_a-chain.obj: interfaces/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_server_a-chain.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Tpo -c -o interfaces/libbitsilver_server_a-chain.obj `if test -f 'interfaces/chain.cpp'; then $(CYGPATH_W) 'interfaces/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Tpo interfaces/$(DEPDIR)/libbitsilver_server_a-chain.Po
#	$(AM_V_CXX)source='interfaces/chain.cpp' object='interfaces/libbitsilver_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_server_a-chain.obj `if test -f 'interfaces/chain.cpp'; then $(CYGPATH_W) 'interfaces/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/chain.cpp'; fi`

interfaces/libbitsilver_server_a-node.o: interfaces/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_server_a-node.o -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_server_a-node.Tpo -c -o interfaces/libbitsilver_server_a-node.o `test -f 'interfaces/node.cpp' || echo '$(srcdir)/'`interfaces/node.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_server_a-node.Tpo interfaces/$(DEPDIR)/libbitsilver_server_a-node.Po
#	$(AM_V_CXX)source='interfaces/node.cpp' object='interfaces/libbitsilver_server_a-node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_server_a-node.o `test -f 'interfaces/node.cpp' || echo '$(srcdir)/'`interfaces/node.cpp

interfaces/libbitsilver_server_a-node.obj: interfaces/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_server_a-node.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_server_a-node.Tpo -c -o interfaces/libbitsilver_server_a-node.obj `if test -f 'interfaces/node.cpp'; then $(CYGPATH_W) 'interfaces/node.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/node.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_server_a-node.Tpo interfaces/$(DEPDIR)/libbitsilver_server_a-node.Po
#	$(AM_V_CXX)source='interfaces/node.cpp' object='interfaces/libbitsilver_server_a-node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_server_a-node.obj `if test -f 'interfaces/node.cpp'; then $(CYGPATH_W) 'interfaces/node.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/node.cpp'; fi`

libbitsilver_server_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-init.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-init.Tpo -c -o libbitsilver_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-init.Tpo $(DEPDIR)/libbitsilver_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitsilver_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libbitsilver_server_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-init.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-init.Tpo -c -o libbitsilver_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-init.Tpo $(DEPDIR)/libbitsilver_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitsilver_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libbitsilver_server_a-dbwrapper.o: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-dbwrapper.Tpo -c -o libbitsilver_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-dbwrapper.Tpo $(DEPDIR)/libbitsilver_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitsilver_server_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libbitsilver_server_a-dbwrapper.obj: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-dbwrapper.Tpo -c -o libbitsilver_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-dbwrapper.Tpo $(DEPDIR)/libbitsilver_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitsilver_server_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

libbitsilver_server_a-miner.o: miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-miner.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-miner.Tpo -c -o libbitsilver_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-miner.Tpo $(DEPDIR)/libbitsilver_server_a-miner.Po
#	$(AM_V_CXX)source='miner.cpp' object='libbitsilver_server_a-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-miner.o `test -f 'miner.cpp' || echo '$(srcdir)/'`miner.cpp

libbitsilver_server_a-miner.obj: miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-miner.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-miner.Tpo -c -o libbitsilver_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-miner.Tpo $(DEPDIR)/libbitsilver_server_a-miner.Po
#	$(AM_V_CXX)source='miner.cpp' object='libbitsilver_server_a-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-miner.obj `if test -f 'miner.cpp'; then $(CYGPATH_W) 'miner.cpp'; else $(CYGPATH_W) '$(srcdir)/miner.cpp'; fi`

libbitsilver_server_a-net.o: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-net.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-net.Tpo -c -o libbitsilver_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-net.Tpo $(DEPDIR)/libbitsilver_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitsilver_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libbitsilver_server_a-net.obj: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-net.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-net.Tpo -c -o libbitsilver_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-net.Tpo $(DEPDIR)/libbitsilver_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitsilver_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libbitsilver_server_a-net_processing.o: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-net_processing.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-net_processing.Tpo -c -o libbitsilver_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-net_processing.Tpo $(DEPDIR)/libbitsilver_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libbitsilver_server_a-net_processing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp

libbitsilver_server_a-net_processing.obj: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-net_processing.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-net_processing.Tpo -c -o libbitsilver_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-net_processing.Tpo $(DEPDIR)/libbitsilver_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libbitsilver_server_a-net_processing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`

node/libbitsilver_server_a-coin.o: node/coin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-coin.o -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-coin.Tpo -c -o node/libbitsilver_server_a-coin.o `test -f 'node/coin.cpp' || echo '$(srcdir)/'`node/coin.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-coin.Tpo node/$(DEPDIR)/libbitsilver_server_a-coin.Po
#	$(AM_V_CXX)source='node/coin.cpp' object='node/libbitsilver_server_a-coin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-coin.o `test -f 'node/coin.cpp' || echo '$(srcdir)/'`node/coin.cpp

node/libbitsilver_server_a-coin.obj: node/coin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-coin.obj -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-coin.Tpo -c -o node/libbitsilver_server_a-coin.obj `if test -f 'node/coin.cpp'; then $(CYGPATH_W) 'node/coin.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coin.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-coin.Tpo node/$(DEPDIR)/libbitsilver_server_a-coin.Po
#	$(AM_V_CXX)source='node/coin.cpp' object='node/libbitsilver_server_a-coin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-coin.obj `if test -f 'node/coin.cpp'; then $(CYGPATH_W) 'node/coin.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coin.cpp'; fi`

node/libbitsilver_server_a-coinstats.o: node/coinstats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-coinstats.o -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-coinstats.Tpo -c -o node/libbitsilver_server_a-coinstats.o `test -f 'node/coinstats.cpp' || echo '$(srcdir)/'`node/coinstats.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-coinstats.Tpo node/$(DEPDIR)/libbitsilver_server_a-coinstats.Po
#	$(AM_V_CXX)source='node/coinstats.cpp' object='node/libbitsilver_server_a-coinstats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-coinstats.o `test -f 'node/coinstats.cpp' || echo '$(srcdir)/'`node/coinstats.cpp

node/libbitsilver_server_a-coinstats.obj: node/coinstats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-coinstats.obj -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-coinstats.Tpo -c -o node/libbitsilver_server_a-coinstats.obj `if test -f 'node/coinstats.cpp'; then $(CYGPATH_W) 'node/coinstats.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coinstats.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-coinstats.Tpo node/$(DEPDIR)/libbitsilver_server_a-coinstats.Po
#	$(AM_V_CXX)source='node/coinstats.cpp' object='node/libbitsilver_server_a-coinstats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-coinstats.obj `if test -f 'node/coinstats.cpp'; then $(CYGPATH_W) 'node/coinstats.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coinstats.cpp'; fi`

node/libbitsilver_server_a-context.o: node/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-context.o -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-context.Tpo -c -o node/libbitsilver_server_a-context.o `test -f 'node/context.cpp' || echo '$(srcdir)/'`node/context.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-context.Tpo node/$(DEPDIR)/libbitsilver_server_a-context.Po
#	$(AM_V_CXX)source='node/context.cpp' object='node/libbitsilver_server_a-context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-context.o `test -f 'node/context.cpp' || echo '$(srcdir)/'`node/context.cpp

node/libbitsilver_server_a-context.obj: node/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-context.obj -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-context.Tpo -c -o node/libbitsilver_server_a-context.obj `if test -f 'node/context.cpp'; then $(CYGPATH_W) 'node/context.cpp'; else $(CYGPATH_W) '$(srcdir)/node/context.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-context.Tpo node/$(DEPDIR)/libbitsilver_server_a-context.Po
#	$(AM_V_CXX)source='node/context.cpp' object='node/libbitsilver_server_a-context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-context.obj `if test -f 'node/context.cpp'; then $(CYGPATH_W) 'node/context.cpp'; else $(CYGPATH_W) '$(srcdir)/node/context.cpp'; fi`

node/libbitsilver_server_a-psbt.o: node/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-psbt.o -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-psbt.Tpo -c -o node/libbitsilver_server_a-psbt.o `test -f 'node/psbt.cpp' || echo '$(srcdir)/'`node/psbt.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-psbt.Tpo node/$(DEPDIR)/libbitsilver_server_a-psbt.Po
#	$(AM_V_CXX)source='node/psbt.cpp' object='node/libbitsilver_server_a-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-psbt.o `test -f 'node/psbt.cpp' || echo '$(srcdir)/'`node/psbt.cpp

node/libbitsilver_server_a-psbt.obj: node/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-psbt.obj -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-psbt.Tpo -c -o node/libbitsilver_server_a-psbt.obj `if test -f 'node/psbt.cpp'; then $(CYGPATH_W) 'node/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/node/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-psbt.Tpo node/$(DEPDIR)/libbitsilver_server_a-psbt.Po
#	$(AM_V_CXX)source='node/psbt.cpp' object='node/libbitsilver_server_a-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-psbt.obj `if test -f 'node/psbt.cpp'; then $(CYGPATH_W) 'node/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/node/psbt.cpp'; fi`

node/libbitsilver_server_a-transaction.o: node/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-transaction.o -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-transaction.Tpo -c -o node/libbitsilver_server_a-transaction.o `test -f 'node/transaction.cpp' || echo '$(srcdir)/'`node/transaction.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-transaction.Tpo node/$(DEPDIR)/libbitsilver_server_a-transaction.Po
#	$(AM_V_CXX)source='node/transaction.cpp' object='node/libbitsilver_server_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-transaction.o `test -f 'node/transaction.cpp' || echo '$(srcdir)/'`node/transaction.cpp

node/libbitsilver_server_a-transaction.obj: node/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitsilver_server_a-transaction.obj -MD -MP -MF node/$(DEPDIR)/libbitsilver_server_a-transaction.Tpo -c -o node/libbitsilver_server_a-transaction.obj `if test -f 'node/transaction.cpp'; then $(CYGPATH_W) 'node/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/node/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitsilver_server_a-transaction.Tpo node/$(DEPDIR)/libbitsilver_server_a-transaction.Po
#	$(AM_V_CXX)source='node/transaction.cpp' object='node/libbitsilver_server_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitsilver_server_a-transaction.obj `if test -f 'node/transaction.cpp'; then $(CYGPATH_W) 'node/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/node/transaction.cpp'; fi`

libbitsilver_server_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-noui.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-noui.Tpo -c -o libbitsilver_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-noui.Tpo $(DEPDIR)/libbitsilver_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitsilver_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libbitsilver_server_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-noui.Tpo -c -o libbitsilver_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-noui.Tpo $(DEPDIR)/libbitsilver_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitsilver_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

policy/libbitsilver_server_a-fees.o: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-fees.Tpo -c -o policy/libbitsilver_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-fees.Tpo policy/$(DEPDIR)/libbitsilver_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitsilver_server_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libbitsilver_server_a-fees.obj: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-fees.Tpo -c -o policy/libbitsilver_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-fees.Tpo policy/$(DEPDIR)/libbitsilver_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitsilver_server_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

policy/libbitsilver_server_a-rbf.o: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-rbf.o -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-rbf.Tpo -c -o policy/libbitsilver_server_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-rbf.Tpo policy/$(DEPDIR)/libbitsilver_server_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libbitsilver_server_a-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp

policy/libbitsilver_server_a-rbf.obj: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-rbf.obj -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-rbf.Tpo -c -o policy/libbitsilver_server_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-rbf.Tpo policy/$(DEPDIR)/libbitsilver_server_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libbitsilver_server_a-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`

policy/libbitsilver_server_a-settings.o: policy/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-settings.o -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-settings.Tpo -c -o policy/libbitsilver_server_a-settings.o `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-settings.Tpo policy/$(DEPDIR)/libbitsilver_server_a-settings.Po
#	$(AM_V_CXX)source='policy/settings.cpp' object='policy/libbitsilver_server_a-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-settings.o `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp

policy/libbitsilver_server_a-settings.obj: policy/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitsilver_server_a-settings.obj -MD -MP -MF policy/$(DEPDIR)/libbitsilver_server_a-settings.Tpo -c -o policy/libbitsilver_server_a-settings.obj `if test -f 'policy/settings.cpp'; then $(CYGPATH_W) 'policy/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/settings.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitsilver_server_a-settings.Tpo policy/$(DEPDIR)/libbitsilver_server_a-settings.Po
#	$(AM_V_CXX)source='policy/settings.cpp' object='policy/libbitsilver_server_a-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitsilver_server_a-settings.obj `if test -f 'policy/settings.cpp'; then $(CYGPATH_W) 'policy/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/settings.cpp'; fi`

libbitsilver_server_a-pow.o: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-pow.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-pow.Tpo -c -o libbitsilver_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-pow.Tpo $(DEPDIR)/libbitsilver_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitsilver_server_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libbitsilver_server_a-pow.obj: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-pow.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-pow.Tpo -c -o libbitsilver_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-pow.Tpo $(DEPDIR)/libbitsilver_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitsilver_server_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libbitsilver_server_a-rest.o: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-rest.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-rest.Tpo -c -o libbitsilver_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-rest.Tpo $(DEPDIR)/libbitsilver_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitsilver_server_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libbitsilver_server_a-rest.obj: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-rest.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-rest.Tpo -c -o libbitsilver_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-rest.Tpo $(DEPDIR)/libbitsilver_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitsilver_server_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libbitsilver_server_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Tpo -c -o rpc/libbitsilver_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitsilver_server_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libbitsilver_server_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Tpo -c -o rpc/libbitsilver_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitsilver_server_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libbitsilver_server_a-mining.o: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-mining.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-mining.Tpo -c -o rpc/libbitsilver_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-mining.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitsilver_server_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp

rpc/libbitsilver_server_a-mining.obj: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-mining.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-mining.Tpo -c -o rpc/libbitsilver_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-mining.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitsilver_server_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`

rpc/libbitsilver_server_a-misc.o: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-misc.Tpo -c -o rpc/libbitsilver_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-misc.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitsilver_server_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libbitsilver_server_a-misc.obj: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-misc.Tpo -c -o rpc/libbitsilver_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-misc.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitsilver_server_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libbitsilver_server_a-net.o: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-net.Tpo -c -o rpc/libbitsilver_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-net.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitsilver_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libbitsilver_server_a-net.obj: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-net.Tpo -c -o rpc/libbitsilver_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-net.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitsilver_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libbitsilver_server_a-rawtransaction.o: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Tpo -c -o rpc/libbitsilver_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitsilver_server_a-rawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libbitsilver_server_a-rawtransaction.obj: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Tpo -c -o rpc/libbitsilver_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitsilver_server_a-rawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libbitsilver_server_a-server.o: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-server.Tpo -c -o rpc/libbitsilver_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-server.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitsilver_server_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libbitsilver_server_a-server.obj: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_server_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_server_a-server.Tpo -c -o rpc/libbitsilver_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_server_a-server.Tpo rpc/$(DEPDIR)/libbitsilver_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitsilver_server_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

script/libbitsilver_server_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libbitsilver_server_a-sigcache.Tpo -c -o script/libbitsilver_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_server_a-sigcache.Tpo script/$(DEPDIR)/libbitsilver_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitsilver_server_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libbitsilver_server_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilver_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libbitsilver_server_a-sigcache.Tpo -c -o script/libbitsilver_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilver_server_a-sigcache.Tpo script/$(DEPDIR)/libbitsilver_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitsilver_server_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilver_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

libbitsilver_server_a-shutdown.o: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-shutdown.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-shutdown.Tpo -c -o libbitsilver_server_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-shutdown.Tpo $(DEPDIR)/libbitsilver_server_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libbitsilver_server_a-shutdown.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp

libbitsilver_server_a-shutdown.obj: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-shutdown.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-shutdown.Tpo -c -o libbitsilver_server_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-shutdown.Tpo $(DEPDIR)/libbitsilver_server_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libbitsilver_server_a-shutdown.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`

libbitsilver_server_a-timedata.o: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-timedata.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-timedata.Tpo -c -o libbitsilver_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-timedata.Tpo $(DEPDIR)/libbitsilver_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitsilver_server_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libbitsilver_server_a-timedata.obj: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-timedata.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-timedata.Tpo -c -o libbitsilver_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-timedata.Tpo $(DEPDIR)/libbitsilver_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitsilver_server_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libbitsilver_server_a-torcontrol.o: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-torcontrol.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-torcontrol.Tpo -c -o libbitsilver_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-torcontrol.Tpo $(DEPDIR)/libbitsilver_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libbitsilver_server_a-torcontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp

libbitsilver_server_a-torcontrol.obj: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-torcontrol.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-torcontrol.Tpo -c -o libbitsilver_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-torcontrol.Tpo $(DEPDIR)/libbitsilver_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libbitsilver_server_a-torcontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`

libbitsilver_server_a-txdb.o: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-txdb.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-txdb.Tpo -c -o libbitsilver_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-txdb.Tpo $(DEPDIR)/libbitsilver_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitsilver_server_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libbitsilver_server_a-txdb.obj: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-txdb.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-txdb.Tpo -c -o libbitsilver_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-txdb.Tpo $(DEPDIR)/libbitsilver_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitsilver_server_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libbitsilver_server_a-txmempool.o: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-txmempool.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-txmempool.Tpo -c -o libbitsilver_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-txmempool.Tpo $(DEPDIR)/libbitsilver_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitsilver_server_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libbitsilver_server_a-txmempool.obj: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-txmempool.Tpo -c -o libbitsilver_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-txmempool.Tpo $(DEPDIR)/libbitsilver_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitsilver_server_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libbitsilver_server_a-ui_interface.o: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-ui_interface.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-ui_interface.Tpo -c -o libbitsilver_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-ui_interface.Tpo $(DEPDIR)/libbitsilver_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libbitsilver_server_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp

libbitsilver_server_a-ui_interface.obj: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-ui_interface.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-ui_interface.Tpo -c -o libbitsilver_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-ui_interface.Tpo $(DEPDIR)/libbitsilver_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libbitsilver_server_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`

libbitsilver_server_a-validation.o: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-validation.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-validation.Tpo -c -o libbitsilver_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-validation.Tpo $(DEPDIR)/libbitsilver_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitsilver_server_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libbitsilver_server_a-validation.obj: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-validation.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-validation.Tpo -c -o libbitsilver_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-validation.Tpo $(DEPDIR)/libbitsilver_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitsilver_server_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`

libbitsilver_server_a-validationinterface.o: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-validationinterface.Tpo -c -o libbitsilver_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-validationinterface.Tpo $(DEPDIR)/libbitsilver_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitsilver_server_a-validationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libbitsilver_server_a-validationinterface.obj: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-validationinterface.Tpo -c -o libbitsilver_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-validationinterface.Tpo $(DEPDIR)/libbitsilver_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitsilver_server_a-validationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

libbitsilver_server_a-versionbits.o: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-versionbits.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-versionbits.Tpo -c -o libbitsilver_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-versionbits.Tpo $(DEPDIR)/libbitsilver_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libbitsilver_server_a-versionbits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp

libbitsilver_server_a-versionbits.obj: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-versionbits.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-versionbits.Tpo -c -o libbitsilver_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-versionbits.Tpo $(DEPDIR)/libbitsilver_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libbitsilver_server_a-versionbits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`

wallet/libbitsilver_server_a-init.o: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_server_a-init.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_server_a-init.Tpo -c -o wallet/libbitsilver_server_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_server_a-init.Tpo wallet/$(DEPDIR)/libbitsilver_server_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libbitsilver_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_server_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp

wallet/libbitsilver_server_a-init.obj: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_server_a-init.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_server_a-init.Tpo -c -o wallet/libbitsilver_server_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_server_a-init.Tpo wallet/$(DEPDIR)/libbitsilver_server_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libbitsilver_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_server_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`

libbitsilver_server_a-dummywallet.o: dummywallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-dummywallet.o -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-dummywallet.Tpo -c -o libbitsilver_server_a-dummywallet.o `test -f 'dummywallet.cpp' || echo '$(srcdir)/'`dummywallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-dummywallet.Tpo $(DEPDIR)/libbitsilver_server_a-dummywallet.Po
#	$(AM_V_CXX)source='dummywallet.cpp' object='libbitsilver_server_a-dummywallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-dummywallet.o `test -f 'dummywallet.cpp' || echo '$(srcdir)/'`dummywallet.cpp

libbitsilver_server_a-dummywallet.obj: dummywallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_server_a-dummywallet.obj -MD -MP -MF $(DEPDIR)/libbitsilver_server_a-dummywallet.Tpo -c -o libbitsilver_server_a-dummywallet.obj `if test -f 'dummywallet.cpp'; then $(CYGPATH_W) 'dummywallet.cpp'; else $(CYGPATH_W) '$(srcdir)/dummywallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_server_a-dummywallet.Tpo $(DEPDIR)/libbitsilver_server_a-dummywallet.Po
#	$(AM_V_CXX)source='dummywallet.cpp' object='libbitsilver_server_a-dummywallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_server_a-dummywallet.obj `if test -f 'dummywallet.cpp'; then $(CYGPATH_W) 'dummywallet.cpp'; else $(CYGPATH_W) '$(srcdir)/dummywallet.cpp'; fi`

support/libbitsilver_util_a-lockedpool.o: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitsilver_util_a-lockedpool.o -MD -MP -MF support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Tpo -c -o support/libbitsilver_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitsilver_util_a-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitsilver_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

support/libbitsilver_util_a-lockedpool.obj: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitsilver_util_a-lockedpool.obj -MD -MP -MF support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Tpo -c -o support/libbitsilver_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitsilver_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitsilver_util_a-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitsilver_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`

libbitsilver_util_a-chainparamsbase.o: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Tpo -c -o libbitsilver_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitsilver_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libbitsilver_util_a-chainparamsbase.obj: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Tpo -c -o libbitsilver_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitsilver_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitsilver_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libbitsilver_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-clientversion.Tpo -c -o libbitsilver_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-clientversion.Tpo $(DEPDIR)/libbitsilver_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitsilver_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitsilver_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-clientversion.Tpo -c -o libbitsilver_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-clientversion.Tpo $(DEPDIR)/libbitsilver_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitsilver_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

compat/libbitsilver_util_a-glibc_sanity_fdelt.o: compat/glibc_sanity_fdelt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_sanity_fdelt.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Tpo -c -o compat/libbitsilver_util_a-glibc_sanity_fdelt.o `test -f 'compat/glibc_sanity_fdelt.cpp' || echo '$(srcdir)/'`compat/glibc_sanity_fdelt.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Po
#	$(AM_V_CXX)source='compat/glibc_sanity_fdelt.cpp' object='compat/libbitsilver_util_a-glibc_sanity_fdelt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_sanity_fdelt.o `test -f 'compat/glibc_sanity_fdelt.cpp' || echo '$(srcdir)/'`compat/glibc_sanity_fdelt.cpp

compat/libbitsilver_util_a-glibc_sanity_fdelt.obj: compat/glibc_sanity_fdelt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_sanity_fdelt.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Tpo -c -o compat/libbitsilver_util_a-glibc_sanity_fdelt.obj `if test -f 'compat/glibc_sanity_fdelt.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity_fdelt.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity_fdelt.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity_fdelt.Po
#	$(AM_V_CXX)source='compat/glibc_sanity_fdelt.cpp' object='compat/libbitsilver_util_a-glibc_sanity_fdelt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_sanity_fdelt.obj `if test -f 'compat/glibc_sanity_fdelt.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity_fdelt.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity_fdelt.cpp'; fi`

compat/libbitsilver_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Tpo -c -o compat/libbitsilver_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitsilver_util_a-glibc_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/libbitsilver_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Tpo -c -o compat/libbitsilver_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitsilver_util_a-glibc_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/libbitsilver_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Tpo -c -o compat/libbitsilver_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitsilver_util_a-glibcxx_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/libbitsilver_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Tpo -c -o compat/libbitsilver_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitsilver_util_a-glibcxx_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

compat/libbitsilver_util_a-strnlen.o: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Tpo -c -o compat/libbitsilver_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitsilver_util_a-strnlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/libbitsilver_util_a-strnlen.obj: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Tpo -c -o compat/libbitsilver_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitsilver_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitsilver_util_a-strnlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

libbitsilver_util_a-fs.o: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-fs.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-fs.Tpo -c -o libbitsilver_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-fs.Tpo $(DEPDIR)/libbitsilver_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitsilver_util_a-fs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libbitsilver_util_a-fs.obj: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-fs.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-fs.Tpo -c -o libbitsilver_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-fs.Tpo $(DEPDIR)/libbitsilver_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitsilver_util_a-fs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`

interfaces/libbitsilver_util_a-handler.o: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_util_a-handler.o -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Tpo -c -o interfaces/libbitsilver_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Tpo interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libbitsilver_util_a-handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp

interfaces/libbitsilver_util_a-handler.obj: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_util_a-handler.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Tpo -c -o interfaces/libbitsilver_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Tpo interfaces/$(DEPDIR)/libbitsilver_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libbitsilver_util_a-handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`

libbitsilver_util_a-logging.o: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-logging.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-logging.Tpo -c -o libbitsilver_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-logging.Tpo $(DEPDIR)/libbitsilver_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitsilver_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

libbitsilver_util_a-logging.obj: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-logging.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-logging.Tpo -c -o libbitsilver_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-logging.Tpo $(DEPDIR)/libbitsilver_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitsilver_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`

libbitsilver_util_a-random.o: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-random.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-random.Tpo -c -o libbitsilver_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-random.Tpo $(DEPDIR)/libbitsilver_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitsilver_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libbitsilver_util_a-random.obj: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-random.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-random.Tpo -c -o libbitsilver_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-random.Tpo $(DEPDIR)/libbitsilver_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitsilver_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

libbitsilver_util_a-randomenv.o: randomenv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-randomenv.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-randomenv.Tpo -c -o libbitsilver_util_a-randomenv.o `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-randomenv.Tpo $(DEPDIR)/libbitsilver_util_a-randomenv.Po
#	$(AM_V_CXX)source='randomenv.cpp' object='libbitsilver_util_a-randomenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-randomenv.o `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp

libbitsilver_util_a-randomenv.obj: randomenv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-randomenv.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-randomenv.Tpo -c -o libbitsilver_util_a-randomenv.obj `if test -f 'randomenv.cpp'; then $(CYGPATH_W) 'randomenv.cpp'; else $(CYGPATH_W) '$(srcdir)/randomenv.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-randomenv.Tpo $(DEPDIR)/libbitsilver_util_a-randomenv.Po
#	$(AM_V_CXX)source='randomenv.cpp' object='libbitsilver_util_a-randomenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-randomenv.obj `if test -f 'randomenv.cpp'; then $(CYGPATH_W) 'randomenv.cpp'; else $(CYGPATH_W) '$(srcdir)/randomenv.cpp'; fi`

rpc/libbitsilver_util_a-request.o: rpc/request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_util_a-request.o -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_util_a-request.Tpo -c -o rpc/libbitsilver_util_a-request.o `test -f 'rpc/request.cpp' || echo '$(srcdir)/'`rpc/request.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_util_a-request.Tpo rpc/$(DEPDIR)/libbitsilver_util_a-request.Po
#	$(AM_V_CXX)source='rpc/request.cpp' object='rpc/libbitsilver_util_a-request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_util_a-request.o `test -f 'rpc/request.cpp' || echo '$(srcdir)/'`rpc/request.cpp

rpc/libbitsilver_util_a-request.obj: rpc/request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitsilver_util_a-request.obj -MD -MP -MF rpc/$(DEPDIR)/libbitsilver_util_a-request.Tpo -c -o rpc/libbitsilver_util_a-request.obj `if test -f 'rpc/request.cpp'; then $(CYGPATH_W) 'rpc/request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/request.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitsilver_util_a-request.Tpo rpc/$(DEPDIR)/libbitsilver_util_a-request.Po
#	$(AM_V_CXX)source='rpc/request.cpp' object='rpc/libbitsilver_util_a-request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitsilver_util_a-request.obj `if test -f 'rpc/request.cpp'; then $(CYGPATH_W) 'rpc/request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/request.cpp'; fi`

support/libbitsilver_util_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitsilver_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libbitsilver_util_a-cleanse.Tpo -c -o support/libbitsilver_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitsilver_util_a-cleanse.Tpo support/$(DEPDIR)/libbitsilver_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitsilver_util_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitsilver_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libbitsilver_util_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitsilver_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libbitsilver_util_a-cleanse.Tpo -c -o support/libbitsilver_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitsilver_util_a-cleanse.Tpo support/$(DEPDIR)/libbitsilver_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitsilver_util_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitsilver_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libbitsilver_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-sync.Tpo -c -o libbitsilver_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-sync.Tpo $(DEPDIR)/libbitsilver_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitsilver_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitsilver_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-sync.Tpo -c -o libbitsilver_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-sync.Tpo $(DEPDIR)/libbitsilver_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitsilver_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libbitsilver_util_a-threadinterrupt.o: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-threadinterrupt.o -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Tpo -c -o libbitsilver_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitsilver_util_a-threadinterrupt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libbitsilver_util_a-threadinterrupt.obj: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitsilver_util_a-threadinterrupt.obj -MD -MP -MF $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Tpo -c -o libbitsilver_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitsilver_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitsilver_util_a-threadinterrupt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilver_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`

util/libbitsilver_util_a-asmap.o: util/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-asmap.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-asmap.Tpo -c -o util/libbitsilver_util_a-asmap.o `test -f 'util/asmap.cpp' || echo '$(srcdir)/'`util/asmap.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-asmap.Tpo util/$(DEPDIR)/libbitsilver_util_a-asmap.Po
#	$(AM_V_CXX)source='util/asmap.cpp' object='util/libbitsilver_util_a-asmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-asmap.o `test -f 'util/asmap.cpp' || echo '$(srcdir)/'`util/asmap.cpp

util/libbitsilver_util_a-asmap.obj: util/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-asmap.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-asmap.Tpo -c -o util/libbitsilver_util_a-asmap.obj `if test -f 'util/asmap.cpp'; then $(CYGPATH_W) 'util/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/util/asmap.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-asmap.Tpo util/$(DEPDIR)/libbitsilver_util_a-asmap.Po
#	$(AM_V_CXX)source='util/asmap.cpp' object='util/libbitsilver_util_a-asmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-asmap.obj `if test -f 'util/asmap.cpp'; then $(CYGPATH_W) 'util/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/util/asmap.cpp'; fi`

util/libbitsilver_util_a-bip32.o: util/bip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-bip32.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-bip32.Tpo -c -o util/libbitsilver_util_a-bip32.o `test -f 'util/bip32.cpp' || echo '$(srcdir)/'`util/bip32.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-bip32.Tpo util/$(DEPDIR)/libbitsilver_util_a-bip32.Po
#	$(AM_V_CXX)source='util/bip32.cpp' object='util/libbitsilver_util_a-bip32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-bip32.o `test -f 'util/bip32.cpp' || echo '$(srcdir)/'`util/bip32.cpp

util/libbitsilver_util_a-bip32.obj: util/bip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-bip32.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-bip32.Tpo -c -o util/libbitsilver_util_a-bip32.obj `if test -f 'util/bip32.cpp'; then $(CYGPATH_W) 'util/bip32.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bip32.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-bip32.Tpo util/$(DEPDIR)/libbitsilver_util_a-bip32.Po
#	$(AM_V_CXX)source='util/bip32.cpp' object='util/libbitsilver_util_a-bip32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-bip32.obj `if test -f 'util/bip32.cpp'; then $(CYGPATH_W) 'util/bip32.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bip32.cpp'; fi`

util/libbitsilver_util_a-bytevectorhash.o: util/bytevectorhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-bytevectorhash.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Tpo -c -o util/libbitsilver_util_a-bytevectorhash.o `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Tpo util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Po
#	$(AM_V_CXX)source='util/bytevectorhash.cpp' object='util/libbitsilver_util_a-bytevectorhash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-bytevectorhash.o `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp

util/libbitsilver_util_a-bytevectorhash.obj: util/bytevectorhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-bytevectorhash.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Tpo -c -o util/libbitsilver_util_a-bytevectorhash.obj `if test -f 'util/bytevectorhash.cpp'; then $(CYGPATH_W) 'util/bytevectorhash.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bytevectorhash.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Tpo util/$(DEPDIR)/libbitsilver_util_a-bytevectorhash.Po
#	$(AM_V_CXX)source='util/bytevectorhash.cpp' object='util/libbitsilver_util_a-bytevectorhash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-bytevectorhash.obj `if test -f 'util/bytevectorhash.cpp'; then $(CYGPATH_W) 'util/bytevectorhash.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bytevectorhash.cpp'; fi`

util/libbitsilver_util_a-error.o: util/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-error.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-error.Tpo -c -o util/libbitsilver_util_a-error.o `test -f 'util/error.cpp' || echo '$(srcdir)/'`util/error.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-error.Tpo util/$(DEPDIR)/libbitsilver_util_a-error.Po
#	$(AM_V_CXX)source='util/error.cpp' object='util/libbitsilver_util_a-error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-error.o `test -f 'util/error.cpp' || echo '$(srcdir)/'`util/error.cpp

util/libbitsilver_util_a-error.obj: util/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-error.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-error.Tpo -c -o util/libbitsilver_util_a-error.obj `if test -f 'util/error.cpp'; then $(CYGPATH_W) 'util/error.cpp'; else $(CYGPATH_W) '$(srcdir)/util/error.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-error.Tpo util/$(DEPDIR)/libbitsilver_util_a-error.Po
#	$(AM_V_CXX)source='util/error.cpp' object='util/libbitsilver_util_a-error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-error.obj `if test -f 'util/error.cpp'; then $(CYGPATH_W) 'util/error.cpp'; else $(CYGPATH_W) '$(srcdir)/util/error.cpp'; fi`

util/libbitsilver_util_a-fees.o: util/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-fees.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-fees.Tpo -c -o util/libbitsilver_util_a-fees.o `test -f 'util/fees.cpp' || echo '$(srcdir)/'`util/fees.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-fees.Tpo util/$(DEPDIR)/libbitsilver_util_a-fees.Po
#	$(AM_V_CXX)source='util/fees.cpp' object='util/libbitsilver_util_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-fees.o `test -f 'util/fees.cpp' || echo '$(srcdir)/'`util/fees.cpp

util/libbitsilver_util_a-fees.obj: util/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-fees.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-fees.Tpo -c -o util/libbitsilver_util_a-fees.obj `if test -f 'util/fees.cpp'; then $(CYGPATH_W) 'util/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/util/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-fees.Tpo util/$(DEPDIR)/libbitsilver_util_a-fees.Po
#	$(AM_V_CXX)source='util/fees.cpp' object='util/libbitsilver_util_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-fees.obj `if test -f 'util/fees.cpp'; then $(CYGPATH_W) 'util/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/util/fees.cpp'; fi`

util/libbitsilver_util_a-system.o: util/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-system.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-system.Tpo -c -o util/libbitsilver_util_a-system.o `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-system.Tpo util/$(DEPDIR)/libbitsilver_util_a-system.Po
#	$(AM_V_CXX)source='util/system.cpp' object='util/libbitsilver_util_a-system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-system.o `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp

util/libbitsilver_util_a-system.obj: util/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-system.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-system.Tpo -c -o util/libbitsilver_util_a-system.obj `if test -f 'util/system.cpp'; then $(CYGPATH_W) 'util/system.cpp'; else $(CYGPATH_W) '$(srcdir)/util/system.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-system.Tpo util/$(DEPDIR)/libbitsilver_util_a-system.Po
#	$(AM_V_CXX)source='util/system.cpp' object='util/libbitsilver_util_a-system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-system.obj `if test -f 'util/system.cpp'; then $(CYGPATH_W) 'util/system.cpp'; else $(CYGPATH_W) '$(srcdir)/util/system.cpp'; fi`

util/libbitsilver_util_a-message.o: util/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-message.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-message.Tpo -c -o util/libbitsilver_util_a-message.o `test -f 'util/message.cpp' || echo '$(srcdir)/'`util/message.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-message.Tpo util/$(DEPDIR)/libbitsilver_util_a-message.Po
#	$(AM_V_CXX)source='util/message.cpp' object='util/libbitsilver_util_a-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-message.o `test -f 'util/message.cpp' || echo '$(srcdir)/'`util/message.cpp

util/libbitsilver_util_a-message.obj: util/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-message.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-message.Tpo -c -o util/libbitsilver_util_a-message.obj `if test -f 'util/message.cpp'; then $(CYGPATH_W) 'util/message.cpp'; else $(CYGPATH_W) '$(srcdir)/util/message.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-message.Tpo util/$(DEPDIR)/libbitsilver_util_a-message.Po
#	$(AM_V_CXX)source='util/message.cpp' object='util/libbitsilver_util_a-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-message.obj `if test -f 'util/message.cpp'; then $(CYGPATH_W) 'util/message.cpp'; else $(CYGPATH_W) '$(srcdir)/util/message.cpp'; fi`

util/libbitsilver_util_a-moneystr.o: util/moneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-moneystr.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-moneystr.Tpo -c -o util/libbitsilver_util_a-moneystr.o `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-moneystr.Tpo util/$(DEPDIR)/libbitsilver_util_a-moneystr.Po
#	$(AM_V_CXX)source='util/moneystr.cpp' object='util/libbitsilver_util_a-moneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-moneystr.o `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp

util/libbitsilver_util_a-moneystr.obj: util/moneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-moneystr.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-moneystr.Tpo -c -o util/libbitsilver_util_a-moneystr.obj `if test -f 'util/moneystr.cpp'; then $(CYGPATH_W) 'util/moneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/util/moneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-moneystr.Tpo util/$(DEPDIR)/libbitsilver_util_a-moneystr.Po
#	$(AM_V_CXX)source='util/moneystr.cpp' object='util/libbitsilver_util_a-moneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-moneystr.obj `if test -f 'util/moneystr.cpp'; then $(CYGPATH_W) 'util/moneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/util/moneystr.cpp'; fi`

util/libbitsilver_util_a-rbf.o: util/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-rbf.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-rbf.Tpo -c -o util/libbitsilver_util_a-rbf.o `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-rbf.Tpo util/$(DEPDIR)/libbitsilver_util_a-rbf.Po
#	$(AM_V_CXX)source='util/rbf.cpp' object='util/libbitsilver_util_a-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-rbf.o `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp

util/libbitsilver_util_a-rbf.obj: util/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-rbf.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-rbf.Tpo -c -o util/libbitsilver_util_a-rbf.obj `if test -f 'util/rbf.cpp'; then $(CYGPATH_W) 'util/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/util/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-rbf.Tpo util/$(DEPDIR)/libbitsilver_util_a-rbf.Po
#	$(AM_V_CXX)source='util/rbf.cpp' object='util/libbitsilver_util_a-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-rbf.obj `if test -f 'util/rbf.cpp'; then $(CYGPATH_W) 'util/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/util/rbf.cpp'; fi`

util/libbitsilver_util_a-settings.o: util/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-settings.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-settings.Tpo -c -o util/libbitsilver_util_a-settings.o `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-settings.Tpo util/$(DEPDIR)/libbitsilver_util_a-settings.Po
#	$(AM_V_CXX)source='util/settings.cpp' object='util/libbitsilver_util_a-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-settings.o `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp

util/libbitsilver_util_a-settings.obj: util/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-settings.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-settings.Tpo -c -o util/libbitsilver_util_a-settings.obj `if test -f 'util/settings.cpp'; then $(CYGPATH_W) 'util/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/settings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-settings.Tpo util/$(DEPDIR)/libbitsilver_util_a-settings.Po
#	$(AM_V_CXX)source='util/settings.cpp' object='util/libbitsilver_util_a-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-settings.obj `if test -f 'util/settings.cpp'; then $(CYGPATH_W) 'util/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/settings.cpp'; fi`

util/libbitsilver_util_a-threadnames.o: util/threadnames.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-threadnames.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-threadnames.Tpo -c -o util/libbitsilver_util_a-threadnames.o `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-threadnames.Tpo util/$(DEPDIR)/libbitsilver_util_a-threadnames.Po
#	$(AM_V_CXX)source='util/threadnames.cpp' object='util/libbitsilver_util_a-threadnames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-threadnames.o `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp

util/libbitsilver_util_a-threadnames.obj: util/threadnames.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-threadnames.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-threadnames.Tpo -c -o util/libbitsilver_util_a-threadnames.obj `if test -f 'util/threadnames.cpp'; then $(CYGPATH_W) 'util/threadnames.cpp'; else $(CYGPATH_W) '$(srcdir)/util/threadnames.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-threadnames.Tpo util/$(DEPDIR)/libbitsilver_util_a-threadnames.Po
#	$(AM_V_CXX)source='util/threadnames.cpp' object='util/libbitsilver_util_a-threadnames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-threadnames.obj `if test -f 'util/threadnames.cpp'; then $(CYGPATH_W) 'util/threadnames.cpp'; else $(CYGPATH_W) '$(srcdir)/util/threadnames.cpp'; fi`

util/libbitsilver_util_a-spanparsing.o: util/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-spanparsing.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Tpo -c -o util/libbitsilver_util_a-spanparsing.o `test -f 'util/spanparsing.cpp' || echo '$(srcdir)/'`util/spanparsing.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Tpo util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Po
#	$(AM_V_CXX)source='util/spanparsing.cpp' object='util/libbitsilver_util_a-spanparsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-spanparsing.o `test -f 'util/spanparsing.cpp' || echo '$(srcdir)/'`util/spanparsing.cpp

util/libbitsilver_util_a-spanparsing.obj: util/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-spanparsing.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Tpo -c -o util/libbitsilver_util_a-spanparsing.obj `if test -f 'util/spanparsing.cpp'; then $(CYGPATH_W) 'util/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/util/spanparsing.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Tpo util/$(DEPDIR)/libbitsilver_util_a-spanparsing.Po
#	$(AM_V_CXX)source='util/spanparsing.cpp' object='util/libbitsilver_util_a-spanparsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-spanparsing.obj `if test -f 'util/spanparsing.cpp'; then $(CYGPATH_W) 'util/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/util/spanparsing.cpp'; fi`

util/libbitsilver_util_a-strencodings.o: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-strencodings.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-strencodings.Tpo -c -o util/libbitsilver_util_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-strencodings.Tpo util/$(DEPDIR)/libbitsilver_util_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitsilver_util_a-strencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

util/libbitsilver_util_a-strencodings.obj: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-strencodings.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-strencodings.Tpo -c -o util/libbitsilver_util_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-strencodings.Tpo util/$(DEPDIR)/libbitsilver_util_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitsilver_util_a-strencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`

util/libbitsilver_util_a-string.o: util/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-string.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-string.Tpo -c -o util/libbitsilver_util_a-string.o `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-string.Tpo util/$(DEPDIR)/libbitsilver_util_a-string.Po
#	$(AM_V_CXX)source='util/string.cpp' object='util/libbitsilver_util_a-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-string.o `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp

util/libbitsilver_util_a-string.obj: util/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-string.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-string.Tpo -c -o util/libbitsilver_util_a-string.obj `if test -f 'util/string.cpp'; then $(CYGPATH_W) 'util/string.cpp'; else $(CYGPATH_W) '$(srcdir)/util/string.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-string.Tpo util/$(DEPDIR)/libbitsilver_util_a-string.Po
#	$(AM_V_CXX)source='util/string.cpp' object='util/libbitsilver_util_a-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-string.obj `if test -f 'util/string.cpp'; then $(CYGPATH_W) 'util/string.cpp'; else $(CYGPATH_W) '$(srcdir)/util/string.cpp'; fi`

util/libbitsilver_util_a-time.o: util/time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-time.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-time.Tpo -c -o util/libbitsilver_util_a-time.o `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-time.Tpo util/$(DEPDIR)/libbitsilver_util_a-time.Po
#	$(AM_V_CXX)source='util/time.cpp' object='util/libbitsilver_util_a-time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-time.o `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp

util/libbitsilver_util_a-time.obj: util/time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-time.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-time.Tpo -c -o util/libbitsilver_util_a-time.obj `if test -f 'util/time.cpp'; then $(CYGPATH_W) 'util/time.cpp'; else $(CYGPATH_W) '$(srcdir)/util/time.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-time.Tpo util/$(DEPDIR)/libbitsilver_util_a-time.Po
#	$(AM_V_CXX)source='util/time.cpp' object='util/libbitsilver_util_a-time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-time.obj `if test -f 'util/time.cpp'; then $(CYGPATH_W) 'util/time.cpp'; else $(CYGPATH_W) '$(srcdir)/util/time.cpp'; fi`

util/libbitsilver_util_a-url.o: util/url.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-url.o -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-url.Tpo -c -o util/libbitsilver_util_a-url.o `test -f 'util/url.cpp' || echo '$(srcdir)/'`util/url.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-url.Tpo util/$(DEPDIR)/libbitsilver_util_a-url.Po
#	$(AM_V_CXX)source='util/url.cpp' object='util/libbitsilver_util_a-url.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-url.o `test -f 'util/url.cpp' || echo '$(srcdir)/'`util/url.cpp

util/libbitsilver_util_a-url.obj: util/url.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilver_util_a-url.obj -MD -MP -MF util/$(DEPDIR)/libbitsilver_util_a-url.Tpo -c -o util/libbitsilver_util_a-url.obj `if test -f 'util/url.cpp'; then $(CYGPATH_W) 'util/url.cpp'; else $(CYGPATH_W) '$(srcdir)/util/url.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilver_util_a-url.Tpo util/$(DEPDIR)/libbitsilver_util_a-url.Po
#	$(AM_V_CXX)source='util/url.cpp' object='util/libbitsilver_util_a-url.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilver_util_a-url.obj `if test -f 'util/url.cpp'; then $(CYGPATH_W) 'util/url.cpp'; else $(CYGPATH_W) '$(srcdir)/util/url.cpp'; fi`

compat/libbitsilver_util_a-glibc_compat.o: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Tpo -c -o compat/libbitsilver_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitsilver_util_a-glibc_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/libbitsilver_util_a-glibc_compat.obj: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilver_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Tpo -c -o compat/libbitsilver_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitsilver_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitsilver_util_a-glibc_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilver_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

interfaces/libbitsilver_wallet_a-wallet.o: interfaces/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_wallet_a-wallet.o -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo -c -o interfaces/libbitsilver_wallet_a-wallet.o `test -f 'interfaces/wallet.cpp' || echo '$(srcdir)/'`interfaces/wallet.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
#	$(AM_V_CXX)source='interfaces/wallet.cpp' object='interfaces/libbitsilver_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_wallet_a-wallet.o `test -f 'interfaces/wallet.cpp' || echo '$(srcdir)/'`interfaces/wallet.cpp

interfaces/libbitsilver_wallet_a-wallet.obj: interfaces/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitsilver_wallet_a-wallet.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo -c -o interfaces/libbitsilver_wallet_a-wallet.obj `if test -f 'interfaces/wallet.cpp'; then $(CYGPATH_W) 'interfaces/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo interfaces/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
#	$(AM_V_CXX)source='interfaces/wallet.cpp' object='interfaces/libbitsilver_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitsilver_wallet_a-wallet.obj `if test -f 'interfaces/wallet.cpp'; then $(CYGPATH_W) 'interfaces/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/wallet.cpp'; fi`

wallet/libbitsilver_wallet_a-coincontrol.o: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-coincontrol.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Tpo -c -o wallet/libbitsilver_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libbitsilver_wallet_a-coincontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp

wallet/libbitsilver_wallet_a-coincontrol.obj: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-coincontrol.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Tpo -c -o wallet/libbitsilver_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libbitsilver_wallet_a-coincontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`

wallet/libbitsilver_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Tpo -c -o wallet/libbitsilver_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitsilver_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libbitsilver_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Tpo -c -o wallet/libbitsilver_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitsilver_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libbitsilver_wallet_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Tpo -c -o wallet/libbitsilver_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitsilver_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libbitsilver_wallet_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Tpo -c -o wallet/libbitsilver_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitsilver_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/libbitsilver_wallet_a-feebumper.o: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-feebumper.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Tpo -c -o wallet/libbitsilver_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libbitsilver_wallet_a-feebumper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp

wallet/libbitsilver_wallet_a-feebumper.obj: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-feebumper.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Tpo -c -o wallet/libbitsilver_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libbitsilver_wallet_a-feebumper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`

wallet/libbitsilver_wallet_a-fees.o: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-fees.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Tpo -c -o wallet/libbitsilver_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libbitsilver_wallet_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp

wallet/libbitsilver_wallet_a-fees.obj: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-fees.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Tpo -c -o wallet/libbitsilver_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libbitsilver_wallet_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`

wallet/libbitsilver_wallet_a-load.o: wallet/load.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-load.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Tpo -c -o wallet/libbitsilver_wallet_a-load.o `test -f 'wallet/load.cpp' || echo '$(srcdir)/'`wallet/load.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Po
#	$(AM_V_CXX)source='wallet/load.cpp' object='wallet/libbitsilver_wallet_a-load.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-load.o `test -f 'wallet/load.cpp' || echo '$(srcdir)/'`wallet/load.cpp

wallet/libbitsilver_wallet_a-load.obj: wallet/load.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-load.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Tpo -c -o wallet/libbitsilver_wallet_a-load.obj `if test -f 'wallet/load.cpp'; then $(CYGPATH_W) 'wallet/load.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/load.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-load.Po
#	$(AM_V_CXX)source='wallet/load.cpp' object='wallet/libbitsilver_wallet_a-load.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-load.obj `if test -f 'wallet/load.cpp'; then $(CYGPATH_W) 'wallet/load.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/load.cpp'; fi`

wallet/libbitsilver_wallet_a-rpcdump.o: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-rpcdump.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Tpo -c -o wallet/libbitsilver_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitsilver_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp

wallet/libbitsilver_wallet_a-rpcdump.obj: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-rpcdump.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Tpo -c -o wallet/libbitsilver_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitsilver_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`

wallet/libbitsilver_wallet_a-rpcwallet.o: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-rpcwallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Tpo -c -o wallet/libbitsilver_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitsilver_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp

wallet/libbitsilver_wallet_a-rpcwallet.obj: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-rpcwallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Tpo -c -o wallet/libbitsilver_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitsilver_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`

wallet/libbitsilver_wallet_a-scriptpubkeyman.o: wallet/scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-scriptpubkeyman.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Tpo -c -o wallet/libbitsilver_wallet_a-scriptpubkeyman.o `test -f 'wallet/scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/scriptpubkeyman.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/scriptpubkeyman.cpp' object='wallet/libbitsilver_wallet_a-scriptpubkeyman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-scriptpubkeyman.o `test -f 'wallet/scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/scriptpubkeyman.cpp

wallet/libbitsilver_wallet_a-scriptpubkeyman.obj: wallet/scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-scriptpubkeyman.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Tpo -c -o wallet/libbitsilver_wallet_a-scriptpubkeyman.obj `if test -f 'wallet/scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/scriptpubkeyman.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/scriptpubkeyman.cpp' object='wallet/libbitsilver_wallet_a-scriptpubkeyman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-scriptpubkeyman.obj `if test -f 'wallet/scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/scriptpubkeyman.cpp'; fi`

wallet/libbitsilver_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo -c -o wallet/libbitsilver_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitsilver_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libbitsilver_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo -c -o wallet/libbitsilver_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitsilver_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libbitsilver_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Tpo -c -o wallet/libbitsilver_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitsilver_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libbitsilver_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Tpo -c -o wallet/libbitsilver_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitsilver_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

wallet/libbitsilver_wallet_a-walletutil.o: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-walletutil.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Tpo -c -o wallet/libbitsilver_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libbitsilver_wallet_a-walletutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp

wallet/libbitsilver_wallet_a-walletutil.obj: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-walletutil.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Tpo -c -o wallet/libbitsilver_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libbitsilver_wallet_a-walletutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`

wallet/libbitsilver_wallet_a-coinselection.o: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-coinselection.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Tpo -c -o wallet/libbitsilver_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libbitsilver_wallet_a-coinselection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp

wallet/libbitsilver_wallet_a-coinselection.obj: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_a-coinselection.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Tpo -c -o wallet/libbitsilver_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libbitsilver_wallet_a-coinselection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`

wallet/libbitsilver_wallet_tool_a-wallettool.o: wallet/wallettool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_tool_a-wallettool.o -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Tpo -c -o wallet/libbitsilver_wallet_tool_a-wallettool.o `test -f 'wallet/wallettool.cpp' || echo '$(srcdir)/'`wallet/wallettool.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Po
#	$(AM_V_CXX)source='wallet/wallettool.cpp' object='wallet/libbitsilver_wallet_tool_a-wallettool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_tool_a-wallettool.o `test -f 'wallet/wallettool.cpp' || echo '$(srcdir)/'`wallet/wallettool.cpp

wallet/libbitsilver_wallet_tool_a-wallettool.obj: wallet/wallettool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitsilver_wallet_tool_a-wallettool.obj -MD -MP -MF wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Tpo -c -o wallet/libbitsilver_wallet_tool_a-wallettool.obj `if test -f 'wallet/wallettool.cpp'; then $(CYGPATH_W) 'wallet/wallettool.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettool.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Tpo wallet/$(DEPDIR)/libbitsilver_wallet_tool_a-wallettool.Po
#	$(AM_V_CXX)source='wallet/wallettool.cpp' object='wallet/libbitsilver_wallet_tool_a-wallettool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitsilver_wallet_tool_a-wallettool.obj `if test -f 'wallet/wallettool.cpp'; then $(CYGPATH_W) 'wallet/wallettool.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettool.cpp'; fi`

zmq/libbitsilver_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitsilver_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitsilver_zmq_a-zmqabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libbitsilver_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitsilver_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitsilver_zmq_a-zmqabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libbitsilver_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitsilver_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitsilver_zmq_a-zmqnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libbitsilver_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitsilver_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitsilver_zmq_a-zmqnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libbitsilver_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitsilver_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitsilver_zmq_a-zmqpublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libbitsilver_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitsilver_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitsilver_zmq_a-zmqpublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

zmq/libbitsilver_zmq_a-zmqrpc.o: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqrpc.o -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Tpo -c -o zmq/libbitsilver_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libbitsilver_zmq_a-zmqrpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp

zmq/libbitsilver_zmq_a-zmqrpc.obj: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitsilver_zmq_a-zmqrpc.obj -MD -MP -MF zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Tpo -c -o zmq/libbitsilver_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libbitsilver_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libbitsilver_zmq_a-zmqrpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilver_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitsilver_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitsilver_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`

test/util/libtest_util_a-blockfilter.o: test/util/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-blockfilter.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo -c -o test/util/libtest_util_a-blockfilter.o `test -f 'test/util/blockfilter.cpp' || echo '$(srcdir)/'`test/util/blockfilter.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
#	$(AM_V_CXX)source='test/util/blockfilter.cpp' object='test/util/libtest_util_a-blockfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-blockfilter.o `test -f 'test/util/blockfilter.cpp' || echo '$(srcdir)/'`test/util/blockfilter.cpp

test/util/libtest_util_a-blockfilter.obj: test/util/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-blockfilter.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo -c -o test/util/libtest_util_a-blockfilter.obj `if test -f 'test/util/blockfilter.cpp'; then $(CYGPATH_W) 'test/util/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/blockfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
#	$(AM_V_CXX)source='test/util/blockfilter.cpp' object='test/util/libtest_util_a-blockfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-blockfilter.obj `if test -f 'test/util/blockfilter.cpp'; then $(CYGPATH_W) 'test/util/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/blockfilter.cpp'; fi`

test/util/libtest_util_a-logging.o: test/util/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-logging.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-logging.Tpo -c -o test/util/libtest_util_a-logging.o `test -f 'test/util/logging.cpp' || echo '$(srcdir)/'`test/util/logging.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-logging.Tpo test/util/$(DEPDIR)/libtest_util_a-logging.Po
#	$(AM_V_CXX)source='test/util/logging.cpp' object='test/util/libtest_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-logging.o `test -f 'test/util/logging.cpp' || echo '$(srcdir)/'`test/util/logging.cpp

test/util/libtest_util_a-logging.obj: test/util/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-logging.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-logging.Tpo -c -o test/util/libtest_util_a-logging.obj `if test -f 'test/util/logging.cpp'; then $(CYGPATH_W) 'test/util/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-logging.Tpo test/util/$(DEPDIR)/libtest_util_a-logging.Po
#	$(AM_V_CXX)source='test/util/logging.cpp' object='test/util/libtest_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-logging.obj `if test -f 'test/util/logging.cpp'; then $(CYGPATH_W) 'test/util/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/logging.cpp'; fi`

test/util/libtest_util_a-mining.o: test/util/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-mining.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-mining.Tpo -c -o test/util/libtest_util_a-mining.o `test -f 'test/util/mining.cpp' || echo '$(srcdir)/'`test/util/mining.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-mining.Tpo test/util/$(DEPDIR)/libtest_util_a-mining.Po
#	$(AM_V_CXX)source='test/util/mining.cpp' object='test/util/libtest_util_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-mining.o `test -f 'test/util/mining.cpp' || echo '$(srcdir)/'`test/util/mining.cpp

test/util/libtest_util_a-mining.obj: test/util/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-mining.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-mining.Tpo -c -o test/util/libtest_util_a-mining.obj `if test -f 'test/util/mining.cpp'; then $(CYGPATH_W) 'test/util/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-mining.Tpo test/util/$(DEPDIR)/libtest_util_a-mining.Po
#	$(AM_V_CXX)source='test/util/mining.cpp' object='test/util/libtest_util_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-mining.obj `if test -f 'test/util/mining.cpp'; then $(CYGPATH_W) 'test/util/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/mining.cpp'; fi`

test/util/libtest_util_a-setup_common.o: test/util/setup_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-setup_common.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo -c -o test/util/libtest_util_a-setup_common.o `test -f 'test/util/setup_common.cpp' || echo '$(srcdir)/'`test/util/setup_common.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
#	$(AM_V_CXX)source='test/util/setup_common.cpp' object='test/util/libtest_util_a-setup_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-setup_common.o `test -f 'test/util/setup_common.cpp' || echo '$(srcdir)/'`test/util/setup_common.cpp

test/util/libtest_util_a-setup_common.obj: test/util/setup_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-setup_common.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo -c -o test/util/libtest_util_a-setup_common.obj `if test -f 'test/util/setup_common.cpp'; then $(CYGPATH_W) 'test/util/setup_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/setup_common.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
#	$(AM_V_CXX)source='test/util/setup_common.cpp' object='test/util/libtest_util_a-setup_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-setup_common.obj `if test -f 'test/util/setup_common.cpp'; then $(CYGPATH_W) 'test/util/setup_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/setup_common.cpp'; fi`

test/util/libtest_util_a-str.o: test/util/str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-str.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-str.Tpo -c -o test/util/libtest_util_a-str.o `test -f 'test/util/str.cpp' || echo '$(srcdir)/'`test/util/str.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-str.Tpo test/util/$(DEPDIR)/libtest_util_a-str.Po
#	$(AM_V_CXX)source='test/util/str.cpp' object='test/util/libtest_util_a-str.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-str.o `test -f 'test/util/str.cpp' || echo '$(srcdir)/'`test/util/str.cpp

test/util/libtest_util_a-str.obj: test/util/str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-str.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-str.Tpo -c -o test/util/libtest_util_a-str.obj `if test -f 'test/util/str.cpp'; then $(CYGPATH_W) 'test/util/str.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/str.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-str.Tpo test/util/$(DEPDIR)/libtest_util_a-str.Po
#	$(AM_V_CXX)source='test/util/str.cpp' object='test/util/libtest_util_a-str.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-str.obj `if test -f 'test/util/str.cpp'; then $(CYGPATH_W) 'test/util/str.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/str.cpp'; fi`

test/util/libtest_util_a-transaction_utils.o: test/util/transaction_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-transaction_utils.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo -c -o test/util/libtest_util_a-transaction_utils.o `test -f 'test/util/transaction_utils.cpp' || echo '$(srcdir)/'`test/util/transaction_utils.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
#	$(AM_V_CXX)source='test/util/transaction_utils.cpp' object='test/util/libtest_util_a-transaction_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-transaction_utils.o `test -f 'test/util/transaction_utils.cpp' || echo '$(srcdir)/'`test/util/transaction_utils.cpp

test/util/libtest_util_a-transaction_utils.obj: test/util/transaction_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-transaction_utils.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo -c -o test/util/libtest_util_a-transaction_utils.obj `if test -f 'test/util/transaction_utils.cpp'; then $(CYGPATH_W) 'test/util/transaction_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/transaction_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
#	$(AM_V_CXX)source='test/util/transaction_utils.cpp' object='test/util/libtest_util_a-transaction_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-transaction_utils.obj `if test -f 'test/util/transaction_utils.cpp'; then $(CYGPATH_W) 'test/util/transaction_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/transaction_utils.cpp'; fi`

test/util/libtest_util_a-wallet.o: test/util/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-wallet.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo -c -o test/util/libtest_util_a-wallet.o `test -f 'test/util/wallet.cpp' || echo '$(srcdir)/'`test/util/wallet.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo test/util/$(DEPDIR)/libtest_util_a-wallet.Po
#	$(AM_V_CXX)source='test/util/wallet.cpp' object='test/util/libtest_util_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-wallet.o `test -f 'test/util/wallet.cpp' || echo '$(srcdir)/'`test/util/wallet.cpp

test/util/libtest_util_a-wallet.obj: test/util/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-wallet.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo -c -o test/util/libtest_util_a-wallet.obj `if test -f 'test/util/wallet.cpp'; then $(CYGPATH_W) 'test/util/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo test/util/$(DEPDIR)/libtest_util_a-wallet.Po
#	$(AM_V_CXX)source='test/util/wallet.cpp' object='test/util/libtest_util_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-wallet.obj `if test -f 'test/util/wallet.cpp'; then $(CYGPATH_W) 'test/util/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/wallet.cpp'; fi`

qt/qt_libbitsilverqt_a-bantablemodel.o: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libbitsilverqt_a-bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp

qt/qt_libbitsilverqt_a-bantablemodel.obj: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libbitsilverqt_a-bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-bitsilver.o: qt/bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilver.o `test -f 'qt/bitsilver.cpp' || echo '$(srcdir)/'`qt/bitsilver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Po
#	$(AM_V_CXX)source='qt/bitsilver.cpp' object='qt/qt_libbitsilverqt_a-bitsilver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilver.o `test -f 'qt/bitsilver.cpp' || echo '$(srcdir)/'`qt/bitsilver.cpp

qt/qt_libbitsilverqt_a-bitsilver.obj: qt/bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilver.obj `if test -f 'qt/bitsilver.cpp'; then $(CYGPATH_W) 'qt/bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilver.Po
#	$(AM_V_CXX)source='qt/bitsilver.cpp' object='qt/qt_libbitsilverqt_a-bitsilver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilver.obj `if test -f 'qt/bitsilver.cpp'; then $(CYGPATH_W) 'qt/bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilver.cpp'; fi`

qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.o: qt/bitsilveraddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.o `test -f 'qt/bitsilveraddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitsilveraddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitsilveraddressvalidator.cpp' object='qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.o `test -f 'qt/bitsilveraddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitsilveraddressvalidator.cpp

qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.obj: qt/bitsilveraddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.obj `if test -f 'qt/bitsilveraddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitsilveraddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilveraddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveraddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitsilveraddressvalidator.cpp' object='qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilveraddressvalidator.obj `if test -f 'qt/bitsilveraddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitsilveraddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilveraddressvalidator.cpp'; fi`

qt/qt_libbitsilverqt_a-bitsilveramountfield.o: qt/bitsilveramountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilveramountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilveramountfield.o `test -f 'qt/bitsilveramountfield.cpp' || echo '$(srcdir)/'`qt/bitsilveramountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Po
#	$(AM_V_CXX)source='qt/bitsilveramountfield.cpp' object='qt/qt_libbitsilverqt_a-bitsilveramountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilveramountfield.o `test -f 'qt/bitsilveramountfield.cpp' || echo '$(srcdir)/'`qt/bitsilveramountfield.cpp

qt/qt_libbitsilverqt_a-bitsilveramountfield.obj: qt/bitsilveramountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilveramountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilveramountfield.obj `if test -f 'qt/bitsilveramountfield.cpp'; then $(CYGPATH_W) 'qt/bitsilveramountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilveramountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilveramountfield.Po
#	$(AM_V_CXX)source='qt/bitsilveramountfield.cpp' object='qt/qt_libbitsilverqt_a-bitsilveramountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilveramountfield.obj `if test -f 'qt/bitsilveramountfield.cpp'; then $(CYGPATH_W) 'qt/bitsilveramountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilveramountfield.cpp'; fi`

qt/qt_libbitsilverqt_a-bitsilvergui.o: qt/bitsilvergui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilvergui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilvergui.o `test -f 'qt/bitsilvergui.cpp' || echo '$(srcdir)/'`qt/bitsilvergui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Po
#	$(AM_V_CXX)source='qt/bitsilvergui.cpp' object='qt/qt_libbitsilverqt_a-bitsilvergui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilvergui.o `test -f 'qt/bitsilvergui.cpp' || echo '$(srcdir)/'`qt/bitsilvergui.cpp

qt/qt_libbitsilverqt_a-bitsilvergui.obj: qt/bitsilvergui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilvergui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilvergui.obj `if test -f 'qt/bitsilvergui.cpp'; then $(CYGPATH_W) 'qt/bitsilvergui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilvergui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilvergui.Po
#	$(AM_V_CXX)source='qt/bitsilvergui.cpp' object='qt/qt_libbitsilverqt_a-bitsilvergui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilvergui.obj `if test -f 'qt/bitsilvergui.cpp'; then $(CYGPATH_W) 'qt/bitsilvergui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilvergui.cpp'; fi`

qt/qt_libbitsilverqt_a-bitsilverunits.o: qt/bitsilverunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilverunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilverunits.o `test -f 'qt/bitsilverunits.cpp' || echo '$(srcdir)/'`qt/bitsilverunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Po
#	$(AM_V_CXX)source='qt/bitsilverunits.cpp' object='qt/qt_libbitsilverqt_a-bitsilverunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilverunits.o `test -f 'qt/bitsilverunits.cpp' || echo '$(srcdir)/'`qt/bitsilverunits.cpp

qt/qt_libbitsilverqt_a-bitsilverunits.obj: qt/bitsilverunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-bitsilverunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Tpo -c -o qt/qt_libbitsilverqt_a-bitsilverunits.obj `if test -f 'qt/bitsilverunits.cpp'; then $(CYGPATH_W) 'qt/bitsilverunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilverunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-bitsilverunits.Po
#	$(AM_V_CXX)source='qt/bitsilverunits.cpp' object='qt/qt_libbitsilverqt_a-bitsilverunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-bitsilverunits.obj `if test -f 'qt/bitsilverunits.cpp'; then $(CYGPATH_W) 'qt/bitsilverunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitsilverunits.cpp'; fi`

qt/qt_libbitsilverqt_a-clientmodel.o: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Tpo -c -o qt/qt_libbitsilverqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitsilverqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp

qt/qt_libbitsilverqt_a-clientmodel.obj: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Tpo -c -o qt/qt_libbitsilverqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitsilverqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitsilverqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitsilverqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp

qt/qt_libbitsilverqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitsilverqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitsilverqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`

qt/qt_libbitsilverqt_a-guiutil.o: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Tpo -c -o qt/qt_libbitsilverqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitsilverqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp

qt/qt_libbitsilverqt_a-guiutil.obj: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Tpo -c -o qt/qt_libbitsilverqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitsilverqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`

qt/qt_libbitsilverqt_a-intro.o: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Tpo -c -o qt/qt_libbitsilverqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libbitsilverqt_a-intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp

qt/qt_libbitsilverqt_a-intro.obj: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Tpo -c -o qt/qt_libbitsilverqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libbitsilverqt_a-intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`

qt/qt_libbitsilverqt_a-modaloverlay.o: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Tpo -c -o qt/qt_libbitsilverqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libbitsilverqt_a-modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp

qt/qt_libbitsilverqt_a-modaloverlay.obj: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Tpo -c -o qt/qt_libbitsilverqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libbitsilverqt_a-modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`

qt/qt_libbitsilverqt_a-networkstyle.o: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-networkstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Tpo -c -o qt/qt_libbitsilverqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitsilverqt_a-networkstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp

qt/qt_libbitsilverqt_a-networkstyle.obj: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-networkstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Tpo -c -o qt/qt_libbitsilverqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitsilverqt_a-networkstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`

qt/qt_libbitsilverqt_a-notificator.o: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Tpo -c -o qt/qt_libbitsilverqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitsilverqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp

qt/qt_libbitsilverqt_a-notificator.obj: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Tpo -c -o qt/qt_libbitsilverqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitsilverqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`

qt/qt_libbitsilverqt_a-optionsdialog.o: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitsilverqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp

qt/qt_libbitsilverqt_a-optionsdialog.obj: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitsilverqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-optionsmodel.o: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Tpo -c -o qt/qt_libbitsilverqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitsilverqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp

qt/qt_libbitsilverqt_a-optionsmodel.obj: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Tpo -c -o qt/qt_libbitsilverqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitsilverqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-peertablemodel.o: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libbitsilverqt_a-peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp

qt/qt_libbitsilverqt_a-peertablemodel.obj: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libbitsilverqt_a-peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-platformstyle.o: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-platformstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Tpo -c -o qt/qt_libbitsilverqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libbitsilverqt_a-platformstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp

qt/qt_libbitsilverqt_a-platformstyle.obj: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-platformstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Tpo -c -o qt/qt_libbitsilverqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libbitsilverqt_a-platformstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`

qt/qt_libbitsilverqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitsilverqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitsilverqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp

qt/qt_libbitsilverqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitsilverqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitsilverqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`

qt/qt_libbitsilverqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitsilverqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitsilverqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp

qt/qt_libbitsilverqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitsilverqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitsilverqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`

qt/qt_libbitsilverqt_a-rpcconsole.o: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Tpo -c -o qt/qt_libbitsilverqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitsilverqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp

qt/qt_libbitsilverqt_a-rpcconsole.obj: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Tpo -c -o qt/qt_libbitsilverqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitsilverqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`

qt/qt_libbitsilverqt_a-splashscreen.o: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Tpo -c -o qt/qt_libbitsilverqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libbitsilverqt_a-splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp

qt/qt_libbitsilverqt_a-splashscreen.obj: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Tpo -c -o qt/qt_libbitsilverqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libbitsilverqt_a-splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`

qt/qt_libbitsilverqt_a-trafficgraphwidget.o: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libbitsilverqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libbitsilverqt_a-trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp

qt/qt_libbitsilverqt_a-trafficgraphwidget.obj: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libbitsilverqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libbitsilverqt_a-trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`

qt/qt_libbitsilverqt_a-utilitydialog.o: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Tpo -c -o qt/qt_libbitsilverqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libbitsilverqt_a-utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp

qt/qt_libbitsilverqt_a-utilitydialog.obj: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Tpo -c -o qt/qt_libbitsilverqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libbitsilverqt_a-utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`

qt/qt_libbitsilverqt_a-winshutdownmonitor.o: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-winshutdownmonitor.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libbitsilverqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libbitsilverqt_a-winshutdownmonitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp

qt/qt_libbitsilverqt_a-winshutdownmonitor.obj: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-winshutdownmonitor.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libbitsilverqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libbitsilverqt_a-winshutdownmonitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`

qt/qt_libbitsilverqt_a-addressbookpage.o: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Tpo -c -o qt/qt_libbitsilverqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitsilverqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp

qt/qt_libbitsilverqt_a-addressbookpage.obj: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Tpo -c -o qt/qt_libbitsilverqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitsilverqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`

qt/qt_libbitsilverqt_a-addresstablemodel.o: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitsilverqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp

qt/qt_libbitsilverqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitsilverqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitsilverqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitsilverqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp

qt/qt_libbitsilverqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitsilverqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitsilverqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`

qt/qt_libbitsilverqt_a-coincontroldialog.o: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitsilverqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitsilverqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp

qt/qt_libbitsilverqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitsilverqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitsilverqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`

qt/qt_libbitsilverqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitsilverqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitsilverqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp

qt/qt_libbitsilverqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitsilverqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitsilverqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`

qt/qt_libbitsilverqt_a-createwalletdialog.o: qt/createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-createwalletdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Tpo -c -o qt/qt_libbitsilverqt_a-createwalletdialog.o `test -f 'qt/createwalletdialog.cpp' || echo '$(srcdir)/'`qt/createwalletdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Po
#	$(AM_V_CXX)source='qt/createwalletdialog.cpp' object='qt/qt_libbitsilverqt_a-createwalletdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-createwalletdialog.o `test -f 'qt/createwalletdialog.cpp' || echo '$(srcdir)/'`qt/createwalletdialog.cpp

qt/qt_libbitsilverqt_a-createwalletdialog.obj: qt/createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-createwalletdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Tpo -c -o qt/qt_libbitsilverqt_a-createwalletdialog.obj `if test -f 'qt/createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/createwalletdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-createwalletdialog.Po
#	$(AM_V_CXX)source='qt/createwalletdialog.cpp' object='qt/qt_libbitsilverqt_a-createwalletdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-createwalletdialog.obj `if test -f 'qt/createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/createwalletdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-editaddressdialog.o: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitsilverqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitsilverqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp

qt/qt_libbitsilverqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitsilverqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitsilverqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-openuridialog.o: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Tpo -c -o qt/qt_libbitsilverqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libbitsilverqt_a-openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp

qt/qt_libbitsilverqt_a-openuridialog.obj: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Tpo -c -o qt/qt_libbitsilverqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libbitsilverqt_a-openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`

qt/qt_libbitsilverqt_a-overviewpage.o: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Tpo -c -o qt/qt_libbitsilverqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitsilverqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp

qt/qt_libbitsilverqt_a-overviewpage.obj: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Tpo -c -o qt/qt_libbitsilverqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitsilverqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`

qt/qt_libbitsilverqt_a-paymentserver.o: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Tpo -c -o qt/qt_libbitsilverqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitsilverqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp

qt/qt_libbitsilverqt_a-paymentserver.obj: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Tpo -c -o qt/qt_libbitsilverqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitsilverqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`

qt/qt_libbitsilverqt_a-qrimagewidget.o: qt/qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrimagewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Tpo -c -o qt/qt_libbitsilverqt_a-qrimagewidget.o `test -f 'qt/qrimagewidget.cpp' || echo '$(srcdir)/'`qt/qrimagewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Po
#	$(AM_V_CXX)source='qt/qrimagewidget.cpp' object='qt/qt_libbitsilverqt_a-qrimagewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrimagewidget.o `test -f 'qt/qrimagewidget.cpp' || echo '$(srcdir)/'`qt/qrimagewidget.cpp

qt/qt_libbitsilverqt_a-qrimagewidget.obj: qt/qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrimagewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Tpo -c -o qt/qt_libbitsilverqt_a-qrimagewidget.obj `if test -f 'qt/qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrimagewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrimagewidget.Po
#	$(AM_V_CXX)source='qt/qrimagewidget.cpp' object='qt/qt_libbitsilverqt_a-qrimagewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrimagewidget.obj `if test -f 'qt/qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrimagewidget.cpp'; fi`

qt/qt_libbitsilverqt_a-receivecoinsdialog.o: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp

qt/qt_libbitsilverqt_a-receivecoinsdialog.obj: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-receiverequestdialog.o: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Tpo -c -o qt/qt_libbitsilverqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libbitsilverqt_a-receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp

qt/qt_libbitsilverqt_a-receiverequestdialog.obj: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Tpo -c -o qt/qt_libbitsilverqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libbitsilverqt_a-receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-recentrequeststablemodel.o: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libbitsilverqt_a-recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp

qt/qt_libbitsilverqt_a-recentrequeststablemodel.obj: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libbitsilverqt_a-recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp

qt/qt_libbitsilverqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitsilverqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitsilverqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp

qt/qt_libbitsilverqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitsilverqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitsilverqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`

qt/qt_libbitsilverqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitsilverqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitsilverqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp

qt/qt_libbitsilverqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitsilverqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitsilverqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`

qt/qt_libbitsilverqt_a-transactiondesc.o: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Tpo -c -o qt/qt_libbitsilverqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitsilverqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp

qt/qt_libbitsilverqt_a-transactiondesc.obj: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Tpo -c -o qt/qt_libbitsilverqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitsilverqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`

qt/qt_libbitsilverqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitsilverqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitsilverqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp

qt/qt_libbitsilverqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitsilverqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitsilverqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitsilverqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitsilverqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp

qt/qt_libbitsilverqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitsilverqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitsilverqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`

qt/qt_libbitsilverqt_a-transactionrecord.o: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Tpo -c -o qt/qt_libbitsilverqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitsilverqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp

qt/qt_libbitsilverqt_a-transactionrecord.obj: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Tpo -c -o qt/qt_libbitsilverqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitsilverqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`

qt/qt_libbitsilverqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitsilverqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp

qt/qt_libbitsilverqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitsilverqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-transactionview.o: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Tpo -c -o qt/qt_libbitsilverqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitsilverqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp

qt/qt_libbitsilverqt_a-transactionview.obj: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Tpo -c -o qt/qt_libbitsilverqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitsilverqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`

qt/qt_libbitsilverqt_a-walletcontroller.o: qt/walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletcontroller.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Tpo -c -o qt/qt_libbitsilverqt_a-walletcontroller.o `test -f 'qt/walletcontroller.cpp' || echo '$(srcdir)/'`qt/walletcontroller.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Po
#	$(AM_V_CXX)source='qt/walletcontroller.cpp' object='qt/qt_libbitsilverqt_a-walletcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletcontroller.o `test -f 'qt/walletcontroller.cpp' || echo '$(srcdir)/'`qt/walletcontroller.cpp

qt/qt_libbitsilverqt_a-walletcontroller.obj: qt/walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletcontroller.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Tpo -c -o qt/qt_libbitsilverqt_a-walletcontroller.obj `if test -f 'qt/walletcontroller.cpp'; then $(CYGPATH_W) 'qt/walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletcontroller.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletcontroller.Po
#	$(AM_V_CXX)source='qt/walletcontroller.cpp' object='qt/qt_libbitsilverqt_a-walletcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletcontroller.obj `if test -f 'qt/walletcontroller.cpp'; then $(CYGPATH_W) 'qt/walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletcontroller.cpp'; fi`

qt/qt_libbitsilverqt_a-walletframe.o: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Tpo -c -o qt/qt_libbitsilverqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libbitsilverqt_a-walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp

qt/qt_libbitsilverqt_a-walletframe.obj: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Tpo -c -o qt/qt_libbitsilverqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libbitsilverqt_a-walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`

qt/qt_libbitsilverqt_a-walletmodel.o: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Tpo -c -o qt/qt_libbitsilverqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitsilverqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp

qt/qt_libbitsilverqt_a-walletmodel.obj: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Tpo -c -o qt/qt_libbitsilverqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitsilverqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-walletmodeltransaction.o: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletmodeltransaction.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libbitsilverqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libbitsilverqt_a-walletmodeltransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp

qt/qt_libbitsilverqt_a-walletmodeltransaction.obj: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletmodeltransaction.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libbitsilverqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libbitsilverqt_a-walletmodeltransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`

qt/qt_libbitsilverqt_a-walletview.o: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Tpo -c -o qt/qt_libbitsilverqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libbitsilverqt_a-walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp

qt/qt_libbitsilverqt_a-walletview.obj: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Tpo -c -o qt/qt_libbitsilverqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libbitsilverqt_a-walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitsilverqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitsilverqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp

qt/qt_libbitsilverqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitsilverqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitsilverqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp

qt/qt_libbitsilverqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp

qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_createwalletdialog.o: qt/moc_createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_createwalletdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_createwalletdialog.o `test -f 'qt/moc_createwalletdialog.cpp' || echo '$(srcdir)/'`qt/moc_createwalletdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Po
#	$(AM_V_CXX)source='qt/moc_createwalletdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_createwalletdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_createwalletdialog.o `test -f 'qt/moc_createwalletdialog.cpp' || echo '$(srcdir)/'`qt/moc_createwalletdialog.cpp

qt/qt_libbitsilverqt_a-moc_createwalletdialog.obj: qt/moc_createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_createwalletdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_createwalletdialog.obj `if test -f 'qt/moc_createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/moc_createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_createwalletdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_createwalletdialog.Po
#	$(AM_V_CXX)source='qt/moc_createwalletdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_createwalletdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_createwalletdialog.obj `if test -f 'qt/moc_createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/moc_createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_createwalletdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bantablemodel.o: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp

qt/qt_libbitsilverqt_a-moc_bantablemodel.obj: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.o: qt/moc_bitsilveraddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.o `test -f 'qt/moc_bitsilveraddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitsilveraddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitsilveraddressvalidator.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.o `test -f 'qt/moc_bitsilveraddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitsilveraddressvalidator.cpp

qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.obj: qt/moc_bitsilveraddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.obj `if test -f 'qt/moc_bitsilveraddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilveraddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilveraddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitsilveraddressvalidator.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilveraddressvalidator.obj `if test -f 'qt/moc_bitsilveraddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilveraddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilveraddressvalidator.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.o: qt/moc_bitsilveramountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.o `test -f 'qt/moc_bitsilveramountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitsilveramountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitsilveramountfield.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.o `test -f 'qt/moc_bitsilveramountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitsilveramountfield.cpp

qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.obj: qt/moc_bitsilveramountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.obj `if test -f 'qt/moc_bitsilveramountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilveramountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilveramountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilveramountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitsilveramountfield.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilveramountfield.obj `if test -f 'qt/moc_bitsilveramountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilveramountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilveramountfield.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bitsilver.o: qt/moc_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilver.o `test -f 'qt/moc_bitsilver.cpp' || echo '$(srcdir)/'`qt/moc_bitsilver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Po
#	$(AM_V_CXX)source='qt/moc_bitsilver.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilver.o `test -f 'qt/moc_bitsilver.cpp' || echo '$(srcdir)/'`qt/moc_bitsilver.cpp

qt/qt_libbitsilverqt_a-moc_bitsilver.obj: qt/moc_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilver.obj `if test -f 'qt/moc_bitsilver.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilver.Po
#	$(AM_V_CXX)source='qt/moc_bitsilver.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilver.obj `if test -f 'qt/moc_bitsilver.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilver.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bitsilvergui.o: qt/moc_bitsilvergui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilvergui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilvergui.o `test -f 'qt/moc_bitsilvergui.cpp' || echo '$(srcdir)/'`qt/moc_bitsilvergui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Po
#	$(AM_V_CXX)source='qt/moc_bitsilvergui.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilvergui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilvergui.o `test -f 'qt/moc_bitsilvergui.cpp' || echo '$(srcdir)/'`qt/moc_bitsilvergui.cpp

qt/qt_libbitsilverqt_a-moc_bitsilvergui.obj: qt/moc_bitsilvergui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilvergui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilvergui.obj `if test -f 'qt/moc_bitsilvergui.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilvergui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilvergui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilvergui.Po
#	$(AM_V_CXX)source='qt/moc_bitsilvergui.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilvergui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilvergui.obj `if test -f 'qt/moc_bitsilvergui.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilvergui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilvergui.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_bitsilverunits.o: qt/moc_bitsilverunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilverunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilverunits.o `test -f 'qt/moc_bitsilverunits.cpp' || echo '$(srcdir)/'`qt/moc_bitsilverunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Po
#	$(AM_V_CXX)source='qt/moc_bitsilverunits.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilverunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilverunits.o `test -f 'qt/moc_bitsilverunits.cpp' || echo '$(srcdir)/'`qt/moc_bitsilverunits.cpp

qt/qt_libbitsilverqt_a-moc_bitsilverunits.obj: qt/moc_bitsilverunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_bitsilverunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Tpo -c -o qt/qt_libbitsilverqt_a-moc_bitsilverunits.obj `if test -f 'qt/moc_bitsilverunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilverunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilverunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_bitsilverunits.Po
#	$(AM_V_CXX)source='qt/moc_bitsilverunits.cpp' object='qt/qt_libbitsilverqt_a-moc_bitsilverunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_bitsilverunits.obj `if test -f 'qt/moc_bitsilverunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitsilverunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitsilverunits.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp

qt/qt_libbitsilverqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitsilverqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp

qt/qt_libbitsilverqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitsilverqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp

qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitsilverqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitsilverqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp

qt/qt_libbitsilverqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitsilverqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitsilverqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp

qt/qt_libbitsilverqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_guiutil.o: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitsilverqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitsilverqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp

qt/qt_libbitsilverqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitsilverqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitsilverqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_intro.o: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Tpo -c -o qt/qt_libbitsilverqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libbitsilverqt_a-moc_intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp

qt/qt_libbitsilverqt_a-moc_intro.obj: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Tpo -c -o qt/qt_libbitsilverqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libbitsilverqt_a-moc_intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitsilverqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitsilverqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp

qt/qt_libbitsilverqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitsilverqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitsilverqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitsilverqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitsilverqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp

qt/qt_libbitsilverqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitsilverqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitsilverqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_modaloverlay.o: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libbitsilverqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libbitsilverqt_a-moc_modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp

qt/qt_libbitsilverqt_a-moc_modaloverlay.obj: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libbitsilverqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libbitsilverqt_a-moc_modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_notificator.o: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Tpo -c -o qt/qt_libbitsilverqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitsilverqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp

qt/qt_libbitsilverqt_a-moc_notificator.obj: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Tpo -c -o qt/qt_libbitsilverqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitsilverqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_openuridialog.o: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libbitsilverqt_a-moc_openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp

qt/qt_libbitsilverqt_a-moc_openuridialog.obj: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libbitsilverqt_a-moc_openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp

qt/qt_libbitsilverqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp

qt/qt_libbitsilverqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitsilverqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitsilverqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp

qt/qt_libbitsilverqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitsilverqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitsilverqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_peertablemodel.o: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp

qt/qt_libbitsilverqt_a-moc_peertablemodel.obj: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_paymentserver.o: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitsilverqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitsilverqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp

qt/qt_libbitsilverqt_a-moc_paymentserver.obj: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitsilverqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitsilverqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_qrimagewidget.o: qt/moc_qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qrimagewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qrimagewidget.o `test -f 'qt/moc_qrimagewidget.cpp' || echo '$(srcdir)/'`qt/moc_qrimagewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Po
#	$(AM_V_CXX)source='qt/moc_qrimagewidget.cpp' object='qt/qt_libbitsilverqt_a-moc_qrimagewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qrimagewidget.o `test -f 'qt/moc_qrimagewidget.cpp' || echo '$(srcdir)/'`qt/moc_qrimagewidget.cpp

qt/qt_libbitsilverqt_a-moc_qrimagewidget.obj: qt/moc_qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qrimagewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qrimagewidget.obj `if test -f 'qt/moc_qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/moc_qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrimagewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qrimagewidget.Po
#	$(AM_V_CXX)source='qt/moc_qrimagewidget.cpp' object='qt/qt_libbitsilverqt_a-moc_qrimagewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qrimagewidget.obj `if test -f 'qt/moc_qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/moc_qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrimagewidget.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp

qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitsilverqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp

qt/qt_libbitsilverqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitsilverqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitsilverqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.o: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp

qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.obj: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_receiverequestdialog.o: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp

qt/qt_libbitsilverqt_a-moc_receiverequestdialog.obj: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.o: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp

qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.obj: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitsilverqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitsilverqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp

qt/qt_libbitsilverqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitsilverqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitsilverqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp

qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitsilverqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp

qt/qt_libbitsilverqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitsilverqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp

qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_splashscreen.o: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Tpo -c -o qt/qt_libbitsilverqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libbitsilverqt_a-moc_splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp

qt/qt_libbitsilverqt_a-moc_splashscreen.obj: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Tpo -c -o qt/qt_libbitsilverqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libbitsilverqt_a-moc_splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.o: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp

qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.obj: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp

qt/qt_libbitsilverqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp

qt/qt_libbitsilverqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp

qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp

qt/qt_libbitsilverqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitsilverqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_transactionview.o: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitsilverqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp

qt/qt_libbitsilverqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitsilverqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitsilverqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_utilitydialog.o: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libbitsilverqt_a-moc_utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp

qt/qt_libbitsilverqt_a-moc_utilitydialog.obj: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libbitsilverqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libbitsilverqt_a-moc_utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_walletcontroller.o: qt/moc_walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletcontroller.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletcontroller.o `test -f 'qt/moc_walletcontroller.cpp' || echo '$(srcdir)/'`qt/moc_walletcontroller.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Po
#	$(AM_V_CXX)source='qt/moc_walletcontroller.cpp' object='qt/qt_libbitsilverqt_a-moc_walletcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletcontroller.o `test -f 'qt/moc_walletcontroller.cpp' || echo '$(srcdir)/'`qt/moc_walletcontroller.cpp

qt/qt_libbitsilverqt_a-moc_walletcontroller.obj: qt/moc_walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletcontroller.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletcontroller.obj `if test -f 'qt/moc_walletcontroller.cpp'; then $(CYGPATH_W) 'qt/moc_walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletcontroller.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletcontroller.Po
#	$(AM_V_CXX)source='qt/moc_walletcontroller.cpp' object='qt/qt_libbitsilverqt_a-moc_walletcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletcontroller.obj `if test -f 'qt/moc_walletcontroller.cpp'; then $(CYGPATH_W) 'qt/moc_walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletcontroller.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_walletframe.o: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libbitsilverqt_a-moc_walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp

qt/qt_libbitsilverqt_a-moc_walletframe.obj: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libbitsilverqt_a-moc_walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp

qt/qt_libbitsilverqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitsilverqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`

qt/qt_libbitsilverqt_a-moc_walletview.o: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libbitsilverqt_a-moc_walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp

qt/qt_libbitsilverqt_a-moc_walletview.obj: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-moc_walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Tpo -c -o qt/qt_libbitsilverqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libbitsilverqt_a-moc_walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`

qt/qt_libbitsilverqt_a-qrc_bitsilver.o: qt/qrc_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrc_bitsilver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver.o `test -f 'qt/qrc_bitsilver.cpp' || echo '$(srcdir)/'`qt/qrc_bitsilver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Po
#	$(AM_V_CXX)source='qt/qrc_bitsilver.cpp' object='qt/qt_libbitsilverqt_a-qrc_bitsilver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver.o `test -f 'qt/qrc_bitsilver.cpp' || echo '$(srcdir)/'`qt/qrc_bitsilver.cpp

qt/qt_libbitsilverqt_a-qrc_bitsilver.obj: qt/qrc_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrc_bitsilver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Tpo -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver.obj `if test -f 'qt/qrc_bitsilver.cpp'; then $(CYGPATH_W) 'qt/qrc_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitsilver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver.Po
#	$(AM_V_CXX)source='qt/qrc_bitsilver.cpp' object='qt/qt_libbitsilverqt_a-qrc_bitsilver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver.obj `if test -f 'qt/qrc_bitsilver.cpp'; then $(CYGPATH_W) 'qt/qrc_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitsilver.cpp'; fi`

qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.o: qt/qrc_bitsilver_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Tpo -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.o `test -f 'qt/qrc_bitsilver_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitsilver_locale.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Po
#	$(AM_V_CXX)source='qt/qrc_bitsilver_locale.cpp' object='qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.o `test -f 'qt/qrc_bitsilver_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitsilver_locale.cpp

qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.obj: qt/qrc_bitsilver_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Tpo -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.obj `if test -f 'qt/qrc_bitsilver_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitsilver_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitsilver_locale.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-qrc_bitsilver_locale.Po
#	$(AM_V_CXX)source='qt/qrc_bitsilver_locale.cpp' object='qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitsilverqt_a-qrc_bitsilver_locale.obj `if test -f 'qt/qrc_bitsilver_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitsilver_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitsilver_locale.cpp'; fi`

support/libbitsilverconsensus_la-cleanse.lo: support/cleanse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT support/libbitsilverconsensus_la-cleanse.lo -MD -MP -MF support/$(DEPDIR)/libbitsilverconsensus_la-cleanse.Tpo -c -o support/libbitsilverconsensus_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitsilverconsensus_la-cleanse.Tpo support/$(DEPDIR)/libbitsilverconsensus_la-cleanse.Plo
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitsilverconsensus_la-cleanse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitsilverconsensus_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

crypto/libbitsilverconsensus_la-aes.lo: crypto/aes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-aes.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-aes.Tpo -c -o crypto/libbitsilverconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-aes.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-aes.Plo
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libbitsilverconsensus_la-aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/libbitsilverconsensus_la-chacha_poly_aead.lo: crypto/chacha_poly_aead.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-chacha_poly_aead.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha_poly_aead.Tpo -c -o crypto/libbitsilverconsensus_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha_poly_aead.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha_poly_aead.Plo
#	$(AM_V_CXX)source='crypto/chacha_poly_aead.cpp' object='crypto/libbitsilverconsensus_la-chacha_poly_aead.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp

crypto/libbitsilverconsensus_la-chacha20.lo: crypto/chacha20.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-chacha20.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha20.Tpo -c -o crypto/libbitsilverconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha20.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-chacha20.Plo
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libbitsilverconsensus_la-chacha20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo: crypto/hkdf_sha256_32.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-hkdf_sha256_32.Tpo -c -o crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-hkdf_sha256_32.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-hkdf_sha256_32.Plo
#	$(AM_V_CXX)source='crypto/hkdf_sha256_32.cpp' object='crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp

crypto/libbitsilverconsensus_la-hmac_sha256.lo: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-hmac_sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha256.Tpo -c -o crypto/libbitsilverconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha256.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha256.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libbitsilverconsensus_la-hmac_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/libbitsilverconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha512.Tpo -c -o crypto/libbitsilverconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libbitsilverconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libbitsilverconsensus_la-poly1305.lo: crypto/poly1305.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-poly1305.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-poly1305.Tpo -c -o crypto/libbitsilverconsensus_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-poly1305.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-poly1305.Plo
#	$(AM_V_CXX)source='crypto/poly1305.cpp' object='crypto/libbitsilverconsensus_la-poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp

crypto/libbitsilverconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-ripemd160.Tpo -c -o crypto/libbitsilverconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libbitsilverconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libbitsilverconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-sha1.Tpo -c -o crypto/libbitsilverconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libbitsilverconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libbitsilverconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256.Tpo -c -o crypto/libbitsilverconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libbitsilverconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libbitsilverconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-sha512.Tpo -c -o crypto/libbitsilverconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libbitsilverconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libbitsilverconsensus_la-siphash.lo: crypto/siphash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-siphash.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-siphash.Tpo -c -o crypto/libbitsilverconsensus_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-siphash.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-siphash.Plo
#	$(AM_V_CXX)source='crypto/siphash.cpp' object='crypto/libbitsilverconsensus_la-siphash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp

crypto/libbitsilverconsensus_la-sha256_sse4.lo: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitsilverconsensus_la-sha256_sse4.lo -MD -MP -MF crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256_sse4.Tpo -c -o crypto/libbitsilverconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256_sse4.Tpo crypto/$(DEPDIR)/libbitsilverconsensus_la-sha256_sse4.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libbitsilverconsensus_la-sha256_sse4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitsilverconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

libbitsilverconsensus_la-arith_uint256.lo: arith_uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitsilverconsensus_la-arith_uint256.lo -MD -MP -MF $(DEPDIR)/libbitsilverconsensus_la-arith_uint256.Tpo -c -o libbitsilverconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilverconsensus_la-arith_uint256.Tpo $(DEPDIR)/libbitsilverconsensus_la-arith_uint256.Plo
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitsilverconsensus_la-arith_uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilverconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

consensus/libbitsilverconsensus_la-merkle.lo: consensus/merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilverconsensus_la-merkle.lo -MD -MP -MF consensus/$(DEPDIR)/libbitsilverconsensus_la-merkle.Tpo -c -o consensus/libbitsilverconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilverconsensus_la-merkle.Tpo consensus/$(DEPDIR)/libbitsilverconsensus_la-merkle.Plo
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitsilverconsensus_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilverconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitsilverconsensus_la-tx_check.lo: consensus/tx_check.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitsilverconsensus_la-tx_check.lo -MD -MP -MF consensus/$(DEPDIR)/libbitsilverconsensus_la-tx_check.Tpo -c -o consensus/libbitsilverconsensus_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitsilverconsensus_la-tx_check.Tpo consensus/$(DEPDIR)/libbitsilverconsensus_la-tx_check.Plo
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitsilverconsensus_la-tx_check.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitsilverconsensus_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp

libbitsilverconsensus_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitsilverconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libbitsilverconsensus_la-hash.Tpo -c -o libbitsilverconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilverconsensus_la-hash.Tpo $(DEPDIR)/libbitsilverconsensus_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libbitsilverconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilverconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libbitsilverconsensus_la-block.lo: primitives/block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilverconsensus_la-block.lo -MD -MP -MF primitives/$(DEPDIR)/libbitsilverconsensus_la-block.Tpo -c -o primitives/libbitsilverconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilverconsensus_la-block.Tpo primitives/$(DEPDIR)/libbitsilverconsensus_la-block.Plo
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitsilverconsensus_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilverconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitsilverconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitsilverconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libbitsilverconsensus_la-transaction.Tpo -c -o primitives/libbitsilverconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitsilverconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libbitsilverconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitsilverconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitsilverconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libbitsilverconsensus_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitsilverconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libbitsilverconsensus_la-pubkey.Tpo -c -o libbitsilverconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilverconsensus_la-pubkey.Tpo $(DEPDIR)/libbitsilverconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitsilverconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilverconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libbitsilverconsensus_la-bitsilverconsensus.lo: script/bitsilverconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilverconsensus_la-bitsilverconsensus.lo -MD -MP -MF script/$(DEPDIR)/libbitsilverconsensus_la-bitsilverconsensus.Tpo -c -o script/libbitsilverconsensus_la-bitsilverconsensus.lo `test -f 'script/bitsilverconsensus.cpp' || echo '$(srcdir)/'`script/bitsilverconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilverconsensus_la-bitsilverconsensus.Tpo script/$(DEPDIR)/libbitsilverconsensus_la-bitsilverconsensus.Plo
#	$(AM_V_CXX)source='script/bitsilverconsensus.cpp' object='script/libbitsilverconsensus_la-bitsilverconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilverconsensus_la-bitsilverconsensus.lo `test -f 'script/bitsilverconsensus.cpp' || echo '$(srcdir)/'`script/bitsilverconsensus.cpp

script/libbitsilverconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilverconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libbitsilverconsensus_la-interpreter.Tpo -c -o script/libbitsilverconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilverconsensus_la-interpreter.Tpo script/$(DEPDIR)/libbitsilverconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitsilverconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilverconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitsilverconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilverconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libbitsilverconsensus_la-script.Tpo -c -o script/libbitsilverconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilverconsensus_la-script.Tpo script/$(DEPDIR)/libbitsilverconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitsilverconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilverconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitsilverconsensus_la-script_error.lo: script/script_error.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitsilverconsensus_la-script_error.lo -MD -MP -MF script/$(DEPDIR)/libbitsilverconsensus_la-script_error.Tpo -c -o script/libbitsilverconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitsilverconsensus_la-script_error.Tpo script/$(DEPDIR)/libbitsilverconsensus_la-script_error.Plo
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitsilverconsensus_la-script_error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitsilverconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

libbitsilverconsensus_la-uint256.lo: uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitsilverconsensus_la-uint256.lo -MD -MP -MF $(DEPDIR)/libbitsilverconsensus_la-uint256.Tpo -c -o libbitsilverconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitsilverconsensus_la-uint256.Tpo $(DEPDIR)/libbitsilverconsensus_la-uint256.Plo
#	$(AM_V_CXX)source='uint256.cpp' object='libbitsilverconsensus_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitsilverconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

util/libbitsilverconsensus_la-strencodings.lo: util/strencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitsilverconsensus_la-strencodings.lo -MD -MP -MF util/$(DEPDIR)/libbitsilverconsensus_la-strencodings.Tpo -c -o util/libbitsilverconsensus_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitsilverconsensus_la-strencodings.Tpo util/$(DEPDIR)/libbitsilverconsensus_la-strencodings.Plo
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitsilverconsensus_la-strencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitsilverconsensus_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

compat/libbitsilverconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitsilverconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/libbitsilverconsensus_la-glibc_compat.Tpo -c -o compat/libbitsilverconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitsilverconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/libbitsilverconsensus_la-glibc_compat.Plo
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitsilverconsensus_la-glibc_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitsilverconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitsilverconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitsilverconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

bench/bench_bench_bitsilver-bench_bitsilver.o: bench/bench_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bench_bitsilver.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Tpo -c -o bench/bench_bench_bitsilver-bench_bitsilver.o `test -f 'bench/bench_bitsilver.cpp' || echo '$(srcdir)/'`bench/bench_bitsilver.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Po
#	$(AM_V_CXX)source='bench/bench_bitsilver.cpp' object='bench/bench_bench_bitsilver-bench_bitsilver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bench_bitsilver.o `test -f 'bench/bench_bitsilver.cpp' || echo '$(srcdir)/'`bench/bench_bitsilver.cpp

bench/bench_bench_bitsilver-bench_bitsilver.obj: bench/bench_bitsilver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bench_bitsilver.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Tpo -c -o bench/bench_bench_bitsilver-bench_bitsilver.obj `if test -f 'bench/bench_bitsilver.cpp'; then $(CYGPATH_W) 'bench/bench_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitsilver.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bench_bitsilver.Po
#	$(AM_V_CXX)source='bench/bench_bitsilver.cpp' object='bench/bench_bench_bitsilver-bench_bitsilver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bench_bitsilver.obj `if test -f 'bench/bench_bitsilver.cpp'; then $(CYGPATH_W) 'bench/bench_bitsilver.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitsilver.cpp'; fi`

bench/bench_bench_bitsilver-bench.o: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bench.Tpo -c -o bench/bench_bench_bitsilver-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bench.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitsilver-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp

bench/bench_bench_bitsilver-bench.obj: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bench.Tpo -c -o bench/bench_bench_bitsilver-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bench.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitsilver-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`

bench/bench_bench_bitsilver-block_assemble.o: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-block_assemble.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Tpo -c -o bench/bench_bench_bitsilver-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_bitsilver-block_assemble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp

bench/bench_bench_bitsilver-block_assemble.obj: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-block_assemble.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Tpo -c -o bench/bench_bench_bitsilver-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_bitsilver-block_assemble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`

bench/bench_bench_bitsilver-checkblock.o: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Tpo -c -o bench/bench_bench_bitsilver-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitsilver-checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp

bench/bench_bench_bitsilver-checkblock.obj: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Tpo -c -o bench/bench_bench_bitsilver-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitsilver-checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`

bench/bench_bench_bitsilver-checkqueue.o: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Tpo -c -o bench/bench_bench_bitsilver-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitsilver-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp

bench/bench_bench_bitsilver-checkqueue.obj: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Tpo -c -o bench/bench_bench_bitsilver-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitsilver-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`

bench/bench_bench_bitsilver-data.o: bench/data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-data.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-data.Tpo -c -o bench/bench_bench_bitsilver-data.o `test -f 'bench/data.cpp' || echo '$(srcdir)/'`bench/data.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-data.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-data.Po
#	$(AM_V_CXX)source='bench/data.cpp' object='bench/bench_bench_bitsilver-data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-data.o `test -f 'bench/data.cpp' || echo '$(srcdir)/'`bench/data.cpp

bench/bench_bench_bitsilver-data.obj: bench/data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-data.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-data.Tpo -c -o bench/bench_bench_bitsilver-data.obj `if test -f 'bench/data.cpp'; then $(CYGPATH_W) 'bench/data.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/data.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-data.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-data.Po
#	$(AM_V_CXX)source='bench/data.cpp' object='bench/bench_bench_bitsilver-data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-data.obj `if test -f 'bench/data.cpp'; then $(CYGPATH_W) 'bench/data.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/data.cpp'; fi`

bench/bench_bench_bitsilver-duplicate_inputs.o: bench/duplicate_inputs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-duplicate_inputs.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Tpo -c -o bench/bench_bench_bitsilver-duplicate_inputs.o `test -f 'bench/duplicate_inputs.cpp' || echo '$(srcdir)/'`bench/duplicate_inputs.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Po
#	$(AM_V_CXX)source='bench/duplicate_inputs.cpp' object='bench/bench_bench_bitsilver-duplicate_inputs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-duplicate_inputs.o `test -f 'bench/duplicate_inputs.cpp' || echo '$(srcdir)/'`bench/duplicate_inputs.cpp

bench/bench_bench_bitsilver-duplicate_inputs.obj: bench/duplicate_inputs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-duplicate_inputs.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Tpo -c -o bench/bench_bench_bitsilver-duplicate_inputs.obj `if test -f 'bench/duplicate_inputs.cpp'; then $(CYGPATH_W) 'bench/duplicate_inputs.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/duplicate_inputs.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-duplicate_inputs.Po
#	$(AM_V_CXX)source='bench/duplicate_inputs.cpp' object='bench/bench_bench_bitsilver-duplicate_inputs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-duplicate_inputs.obj `if test -f 'bench/duplicate_inputs.cpp'; then $(CYGPATH_W) 'bench/duplicate_inputs.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/duplicate_inputs.cpp'; fi`

bench/bench_bench_bitsilver-examples.o: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-examples.Tpo -c -o bench/bench_bench_bitsilver-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-examples.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_bitsilver-examples.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp

bench/bench_bench_bitsilver-examples.obj: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-examples.Tpo -c -o bench/bench_bench_bitsilver-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-examples.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_bitsilver-examples.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`

bench/bench_bench_bitsilver-rollingbloom.o: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Tpo -c -o bench/bench_bench_bitsilver-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitsilver-rollingbloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp

bench/bench_bench_bitsilver-rollingbloom.obj: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Tpo -c -o bench/bench_bench_bitsilver-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitsilver-rollingbloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`

bench/bench_bench_bitsilver-chacha20.o: bench/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-chacha20.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Tpo -c -o bench/bench_bench_bitsilver-chacha20.o `test -f 'bench/chacha20.cpp' || echo '$(srcdir)/'`bench/chacha20.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Po
#	$(AM_V_CXX)source='bench/chacha20.cpp' object='bench/bench_bench_bitsilver-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-chacha20.o `test -f 'bench/chacha20.cpp' || echo '$(srcdir)/'`bench/chacha20.cpp

bench/bench_bench_bitsilver-chacha20.obj: bench/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-chacha20.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Tpo -c -o bench/bench_bench_bitsilver-chacha20.obj `if test -f 'bench/chacha20.cpp'; then $(CYGPATH_W) 'bench/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-chacha20.Po
#	$(AM_V_CXX)source='bench/chacha20.cpp' object='bench/bench_bench_bitsilver-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-chacha20.obj `if test -f 'bench/chacha20.cpp'; then $(CYGPATH_W) 'bench/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha20.cpp'; fi`

bench/bench_bench_bitsilver-chacha_poly_aead.o: bench/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-chacha_poly_aead.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Tpo -c -o bench/bench_bench_bitsilver-chacha_poly_aead.o `test -f 'bench/chacha_poly_aead.cpp' || echo '$(srcdir)/'`bench/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Po
#	$(AM_V_CXX)source='bench/chacha_poly_aead.cpp' object='bench/bench_bench_bitsilver-chacha_poly_aead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-chacha_poly_aead.o `test -f 'bench/chacha_poly_aead.cpp' || echo '$(srcdir)/'`bench/chacha_poly_aead.cpp

bench/bench_bench_bitsilver-chacha_poly_aead.obj: bench/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-chacha_poly_aead.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Tpo -c -o bench/bench_bench_bitsilver-chacha_poly_aead.obj `if test -f 'bench/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'bench/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha_poly_aead.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-chacha_poly_aead.Po
#	$(AM_V_CXX)source='bench/chacha_poly_aead.cpp' object='bench/bench_bench_bitsilver-chacha_poly_aead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-chacha_poly_aead.obj `if test -f 'bench/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'bench/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha_poly_aead.cpp'; fi`

bench/bench_bench_bitsilver-crypto_hash.o: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Tpo -c -o bench/bench_bench_bitsilver-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitsilver-crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp

bench/bench_bench_bitsilver-crypto_hash.obj: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Tpo -c -o bench/bench_bench_bitsilver-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitsilver-crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`

bench/bench_bench_bitsilver-ccoins_caching.o: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Tpo -c -o bench/bench_bench_bitsilver-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitsilver-ccoins_caching.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp

bench/bench_bench_bitsilver-ccoins_caching.obj: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Tpo -c -o bench/bench_bench_bitsilver-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitsilver-ccoins_caching.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`

bench/bench_bench_bitsilver-gcs_filter.o: bench/gcs_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-gcs_filter.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Tpo -c -o bench/bench_bench_bitsilver-gcs_filter.o `test -f 'bench/gcs_filter.cpp' || echo '$(srcdir)/'`bench/gcs_filter.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Po
#	$(AM_V_CXX)source='bench/gcs_filter.cpp' object='bench/bench_bench_bitsilver-gcs_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-gcs_filter.o `test -f 'bench/gcs_filter.cpp' || echo '$(srcdir)/'`bench/gcs_filter.cpp

bench/bench_bench_bitsilver-gcs_filter.obj: bench/gcs_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-gcs_filter.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Tpo -c -o bench/bench_bench_bitsilver-gcs_filter.obj `if test -f 'bench/gcs_filter.cpp'; then $(CYGPATH_W) 'bench/gcs_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/gcs_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-gcs_filter.Po
#	$(AM_V_CXX)source='bench/gcs_filter.cpp' object='bench/bench_bench_bitsilver-gcs_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-gcs_filter.obj `if test -f 'bench/gcs_filter.cpp'; then $(CYGPATH_W) 'bench/gcs_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/gcs_filter.cpp'; fi`

bench/bench_bench_bitsilver-merkle_root.o: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-merkle_root.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Tpo -c -o bench/bench_bench_bitsilver-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_bitsilver-merkle_root.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp

bench/bench_bench_bitsilver-merkle_root.obj: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-merkle_root.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Tpo -c -o bench/bench_bench_bitsilver-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_bitsilver-merkle_root.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`

bench/bench_bench_bitsilver-mempool_eviction.o: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Tpo -c -o bench/bench_bench_bitsilver-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitsilver-mempool_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp

bench/bench_bench_bitsilver-mempool_eviction.obj: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Tpo -c -o bench/bench_bench_bitsilver-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitsilver-mempool_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`

bench/bench_bench_bitsilver-mempool_stress.o: bench/mempool_stress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-mempool_stress.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Tpo -c -o bench/bench_bench_bitsilver-mempool_stress.o `test -f 'bench/mempool_stress.cpp' || echo '$(srcdir)/'`bench/mempool_stress.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Po
#	$(AM_V_CXX)source='bench/mempool_stress.cpp' object='bench/bench_bench_bitsilver-mempool_stress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-mempool_stress.o `test -f 'bench/mempool_stress.cpp' || echo '$(srcdir)/'`bench/mempool_stress.cpp

bench/bench_bench_bitsilver-mempool_stress.obj: bench/mempool_stress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-mempool_stress.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Tpo -c -o bench/bench_bench_bitsilver-mempool_stress.obj `if test -f 'bench/mempool_stress.cpp'; then $(CYGPATH_W) 'bench/mempool_stress.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_stress.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-mempool_stress.Po
#	$(AM_V_CXX)source='bench/mempool_stress.cpp' object='bench/bench_bench_bitsilver-mempool_stress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-mempool_stress.obj `if test -f 'bench/mempool_stress.cpp'; then $(CYGPATH_W) 'bench/mempool_stress.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_stress.cpp'; fi`

bench/bench_bench_bitsilver-rpc_blockchain.o: bench/rpc_blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rpc_blockchain.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Tpo -c -o bench/bench_bench_bitsilver-rpc_blockchain.o `test -f 'bench/rpc_blockchain.cpp' || echo '$(srcdir)/'`bench/rpc_blockchain.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Po
#	$(AM_V_CXX)source='bench/rpc_blockchain.cpp' object='bench/bench_bench_bitsilver-rpc_blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rpc_blockchain.o `test -f 'bench/rpc_blockchain.cpp' || echo '$(srcdir)/'`bench/rpc_blockchain.cpp

bench/bench_bench_bitsilver-rpc_blockchain.obj: bench/rpc_blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rpc_blockchain.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Tpo -c -o bench/bench_bench_bitsilver-rpc_blockchain.obj `if test -f 'bench/rpc_blockchain.cpp'; then $(CYGPATH_W) 'bench/rpc_blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rpc_blockchain.Po
#	$(AM_V_CXX)source='bench/rpc_blockchain.cpp' object='bench/bench_bench_bitsilver-rpc_blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rpc_blockchain.obj `if test -f 'bench/rpc_blockchain.cpp'; then $(CYGPATH_W) 'bench/rpc_blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_blockchain.cpp'; fi`

bench/bench_bench_bitsilver-rpc_mempool.o: bench/rpc_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rpc_mempool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Tpo -c -o bench/bench_bench_bitsilver-rpc_mempool.o `test -f 'bench/rpc_mempool.cpp' || echo '$(srcdir)/'`bench/rpc_mempool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Po
#	$(AM_V_CXX)source='bench/rpc_mempool.cpp' object='bench/bench_bench_bitsilver-rpc_mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rpc_mempool.o `test -f 'bench/rpc_mempool.cpp' || echo '$(srcdir)/'`bench/rpc_mempool.cpp

bench/bench_bench_bitsilver-rpc_mempool.obj: bench/rpc_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-rpc_mempool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Tpo -c -o bench/bench_bench_bitsilver-rpc_mempool.obj `if test -f 'bench/rpc_mempool.cpp'; then $(CYGPATH_W) 'bench/rpc_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-rpc_mempool.Po
#	$(AM_V_CXX)source='bench/rpc_mempool.cpp' object='bench/bench_bench_bitsilver-rpc_mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-rpc_mempool.obj `if test -f 'bench/rpc_mempool.cpp'; then $(CYGPATH_W) 'bench/rpc_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_mempool.cpp'; fi`

bench/bench_bench_bitsilver-util_time.o: bench/util_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-util_time.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Tpo -c -o bench/bench_bench_bitsilver-util_time.o `test -f 'bench/util_time.cpp' || echo '$(srcdir)/'`bench/util_time.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Po
#	$(AM_V_CXX)source='bench/util_time.cpp' object='bench/bench_bench_bitsilver-util_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-util_time.o `test -f 'bench/util_time.cpp' || echo '$(srcdir)/'`bench/util_time.cpp

bench/bench_bench_bitsilver-util_time.obj: bench/util_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-util_time.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Tpo -c -o bench/bench_bench_bitsilver-util_time.obj `if test -f 'bench/util_time.cpp'; then $(CYGPATH_W) 'bench/util_time.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/util_time.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-util_time.Po
#	$(AM_V_CXX)source='bench/util_time.cpp' object='bench/bench_bench_bitsilver-util_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-util_time.obj `if test -f 'bench/util_time.cpp'; then $(CYGPATH_W) 'bench/util_time.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/util_time.cpp'; fi`

bench/bench_bench_bitsilver-verify_script.o: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Tpo -c -o bench/bench_bench_bitsilver-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitsilver-verify_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp

bench/bench_bench_bitsilver-verify_script.obj: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Tpo -c -o bench/bench_bench_bitsilver-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitsilver-verify_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`

bench/bench_bench_bitsilver-base58.o: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-base58.Tpo -c -o bench/bench_bench_bitsilver-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-base58.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitsilver-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp

bench/bench_bench_bitsilver-base58.obj: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-base58.Tpo -c -o bench/bench_bench_bitsilver-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-base58.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitsilver-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`

bench/bench_bench_bitsilver-bech32.o: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bech32.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Tpo -c -o bench/bench_bench_bitsilver-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_bitsilver-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp

bench/bench_bench_bitsilver-bech32.obj: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-bech32.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Tpo -c -o bench/bench_bench_bitsilver-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_bitsilver-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`

bench/bench_bench_bitsilver-lockedpool.o: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Tpo -c -o bench/bench_bench_bitsilver-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitsilver-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp

bench/bench_bench_bitsilver-lockedpool.obj: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Tpo -c -o bench/bench_bench_bitsilver-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitsilver-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`

bench/bench_bench_bitsilver-poly1305.o: bench/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-poly1305.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Tpo -c -o bench/bench_bench_bitsilver-poly1305.o `test -f 'bench/poly1305.cpp' || echo '$(srcdir)/'`bench/poly1305.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Po
#	$(AM_V_CXX)source='bench/poly1305.cpp' object='bench/bench_bench_bitsilver-poly1305.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-poly1305.o `test -f 'bench/poly1305.cpp' || echo '$(srcdir)/'`bench/poly1305.cpp

bench/bench_bench_bitsilver-poly1305.obj: bench/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-poly1305.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Tpo -c -o bench/bench_bench_bitsilver-poly1305.obj `if test -f 'bench/poly1305.cpp'; then $(CYGPATH_W) 'bench/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/poly1305.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-poly1305.Po
#	$(AM_V_CXX)source='bench/poly1305.cpp' object='bench/bench_bench_bitsilver-poly1305.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-poly1305.obj `if test -f 'bench/poly1305.cpp'; then $(CYGPATH_W) 'bench/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/poly1305.cpp'; fi`

bench/bench_bench_bitsilver-prevector.o: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-prevector.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Tpo -c -o bench/bench_bench_bitsilver-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_bitsilver-prevector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp

bench/bench_bench_bitsilver-prevector.obj: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-prevector.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Tpo -c -o bench/bench_bench_bitsilver-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_bitsilver-prevector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`

bench/bench_bench_bitsilver-coin_selection.o: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Tpo -c -o bench/bench_bench_bitsilver-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitsilver-coin_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp

bench/bench_bench_bitsilver-coin_selection.obj: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Tpo -c -o bench/bench_bench_bitsilver-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitsilver-coin_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`

bench/bench_bench_bitsilver-wallet_balance.o: bench/wallet_balance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-wallet_balance.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Tpo -c -o bench/bench_bench_bitsilver-wallet_balance.o `test -f 'bench/wallet_balance.cpp' || echo '$(srcdir)/'`bench/wallet_balance.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Po
#	$(AM_V_CXX)source='bench/wallet_balance.cpp' object='bench/bench_bench_bitsilver-wallet_balance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-wallet_balance.o `test -f 'bench/wallet_balance.cpp' || echo '$(srcdir)/'`bench/wallet_balance.cpp

bench/bench_bench_bitsilver-wallet_balance.obj: bench/wallet_balance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitsilver-wallet_balance.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Tpo -c -o bench/bench_bench_bitsilver-wallet_balance.obj `if test -f 'bench/wallet_balance.cpp'; then $(CYGPATH_W) 'bench/wallet_balance.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_balance.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Tpo bench/$(DEPDIR)/bench_bench_bitsilver-wallet_balance.Po
#	$(AM_V_CXX)source='bench/wallet_balance.cpp' object='bench/bench_bench_bitsilver-wallet_balance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitsilver_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitsilver-wallet_balance.obj `if test -f 'bench/wallet_balance.cpp'; then $(CYGPATH_W) 'bench/wallet_balance.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_balance.cpp'; fi`

bitsilver_cli-bitsilver-cli.o: bitsilver-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_cli_CPPFLAGS) $(CPPFLAGS) $(bitsilver_cli_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_cli-bitsilver-cli.o -MD -MP -MF $(DEPDIR)/bitsilver_cli-bitsilver-cli.Tpo -c -o bitsilver_cli-bitsilver-cli.o `test -f 'bitsilver-cli.cpp' || echo '$(srcdir)/'`bitsilver-cli.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_cli-bitsilver-cli.Tpo $(DEPDIR)/bitsilver_cli-bitsilver-cli.Po
#	$(AM_V_CXX)source='bitsilver-cli.cpp' object='bitsilver_cli-bitsilver-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_cli_CPPFLAGS) $(CPPFLAGS) $(bitsilver_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_cli-bitsilver-cli.o `test -f 'bitsilver-cli.cpp' || echo '$(srcdir)/'`bitsilver-cli.cpp

bitsilver_cli-bitsilver-cli.obj: bitsilver-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_cli_CPPFLAGS) $(CPPFLAGS) $(bitsilver_cli_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_cli-bitsilver-cli.obj -MD -MP -MF $(DEPDIR)/bitsilver_cli-bitsilver-cli.Tpo -c -o bitsilver_cli-bitsilver-cli.obj `if test -f 'bitsilver-cli.cpp'; then $(CYGPATH_W) 'bitsilver-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_cli-bitsilver-cli.Tpo $(DEPDIR)/bitsilver_cli-bitsilver-cli.Po
#	$(AM_V_CXX)source='bitsilver-cli.cpp' object='bitsilver_cli-bitsilver-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_cli_CPPFLAGS) $(CPPFLAGS) $(bitsilver_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_cli-bitsilver-cli.obj `if test -f 'bitsilver-cli.cpp'; then $(CYGPATH_W) 'bitsilver-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-cli.cpp'; fi`

bitsilver_tx-bitsilver-tx.o: bitsilver-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_tx_CPPFLAGS) $(CPPFLAGS) $(bitsilver_tx_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_tx-bitsilver-tx.o -MD -MP -MF $(DEPDIR)/bitsilver_tx-bitsilver-tx.Tpo -c -o bitsilver_tx-bitsilver-tx.o `test -f 'bitsilver-tx.cpp' || echo '$(srcdir)/'`bitsilver-tx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_tx-bitsilver-tx.Tpo $(DEPDIR)/bitsilver_tx-bitsilver-tx.Po
#	$(AM_V_CXX)source='bitsilver-tx.cpp' object='bitsilver_tx-bitsilver-tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_tx_CPPFLAGS) $(CPPFLAGS) $(bitsilver_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_tx-bitsilver-tx.o `test -f 'bitsilver-tx.cpp' || echo '$(srcdir)/'`bitsilver-tx.cpp

bitsilver_tx-bitsilver-tx.obj: bitsilver-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_tx_CPPFLAGS) $(CPPFLAGS) $(bitsilver_tx_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_tx-bitsilver-tx.obj -MD -MP -MF $(DEPDIR)/bitsilver_tx-bitsilver-tx.Tpo -c -o bitsilver_tx-bitsilver-tx.obj `if test -f 'bitsilver-tx.cpp'; then $(CYGPATH_W) 'bitsilver-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-tx.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_tx-bitsilver-tx.Tpo $(DEPDIR)/bitsilver_tx-bitsilver-tx.Po
#	$(AM_V_CXX)source='bitsilver-tx.cpp' object='bitsilver_tx-bitsilver-tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_tx_CPPFLAGS) $(CPPFLAGS) $(bitsilver_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_tx-bitsilver-tx.obj `if test -f 'bitsilver-tx.cpp'; then $(CYGPATH_W) 'bitsilver-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-tx.cpp'; fi`

bitsilver_wallet-bitsilver-wallet.o: bitsilver-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_wallet_CPPFLAGS) $(CPPFLAGS) $(bitsilver_wallet_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_wallet-bitsilver-wallet.o -MD -MP -MF $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Tpo -c -o bitsilver_wallet-bitsilver-wallet.o `test -f 'bitsilver-wallet.cpp' || echo '$(srcdir)/'`bitsilver-wallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Tpo $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Po
#	$(AM_V_CXX)source='bitsilver-wallet.cpp' object='bitsilver_wallet-bitsilver-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_wallet_CPPFLAGS) $(CPPFLAGS) $(bitsilver_wallet_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_wallet-bitsilver-wallet.o `test -f 'bitsilver-wallet.cpp' || echo '$(srcdir)/'`bitsilver-wallet.cpp

bitsilver_wallet-bitsilver-wallet.obj: bitsilver-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_wallet_CPPFLAGS) $(CPPFLAGS) $(bitsilver_wallet_CXXFLAGS) $(CXXFLAGS) -MT bitsilver_wallet-bitsilver-wallet.obj -MD -MP -MF $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Tpo -c -o bitsilver_wallet-bitsilver-wallet.obj `if test -f 'bitsilver-wallet.cpp'; then $(CYGPATH_W) 'bitsilver-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Tpo $(DEPDIR)/bitsilver_wallet-bitsilver-wallet.Po
#	$(AM_V_CXX)source='bitsilver-wallet.cpp' object='bitsilver_wallet-bitsilver-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilver_wallet_CPPFLAGS) $(CPPFLAGS) $(bitsilver_wallet_CXXFLAGS) $(CXXFLAGS) -c -o bitsilver_wallet-bitsilver-wallet.obj `if test -f 'bitsilver-wallet.cpp'; then $(CYGPATH_W) 'bitsilver-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilver-wallet.cpp'; fi`

bitsilverd-bitsilverd.o: bitsilverd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilverd_CPPFLAGS) $(CPPFLAGS) $(bitsilverd_CXXFLAGS) $(CXXFLAGS) -MT bitsilverd-bitsilverd.o -MD -MP -MF $(DEPDIR)/bitsilverd-bitsilverd.Tpo -c -o bitsilverd-bitsilverd.o `test -f 'bitsilverd.cpp' || echo '$(srcdir)/'`bitsilverd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilverd-bitsilverd.Tpo $(DEPDIR)/bitsilverd-bitsilverd.Po
#	$(AM_V_CXX)source='bitsilverd.cpp' object='bitsilverd-bitsilverd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilverd_CPPFLAGS) $(CPPFLAGS) $(bitsilverd_CXXFLAGS) $(CXXFLAGS) -c -o bitsilverd-bitsilverd.o `test -f 'bitsilverd.cpp' || echo '$(srcdir)/'`bitsilverd.cpp

bitsilverd-bitsilverd.obj: bitsilverd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilverd_CPPFLAGS) $(CPPFLAGS) $(bitsilverd_CXXFLAGS) $(CXXFLAGS) -MT bitsilverd-bitsilverd.obj -MD -MP -MF $(DEPDIR)/bitsilverd-bitsilverd.Tpo -c -o bitsilverd-bitsilverd.obj `if test -f 'bitsilverd.cpp'; then $(CYGPATH_W) 'bitsilverd.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilverd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitsilverd-bitsilverd.Tpo $(DEPDIR)/bitsilverd-bitsilverd.Po
#	$(AM_V_CXX)source='bitsilverd.cpp' object='bitsilverd-bitsilverd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitsilverd_CPPFLAGS) $(CPPFLAGS) $(bitsilverd_CXXFLAGS) $(CXXFLAGS) -c -o bitsilverd-bitsilverd.obj `if test -f 'bitsilverd.cpp'; then $(CYGPATH_W) 'bitsilverd.cpp'; else $(CYGPATH_W) '$(srcdir)/bitsilverd.cpp'; fi`

qt/qt_bitsilver_qt-main.o: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_bitsilver_qt-main.o -MD -MP -MF qt/$(DEPDIR)/qt_bitsilver_qt-main.Tpo -c -o qt/qt_bitsilver_qt-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_bitsilver_qt-main.Tpo qt/$(DEPDIR)/qt_bitsilver_qt-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/qt_bitsilver_qt-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_bitsilver_qt-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp

qt/qt_bitsilver_qt-main.obj: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_bitsilver_qt-main.obj -MD -MP -MF qt/$(DEPDIR)/qt_bitsilver_qt-main.Tpo -c -o qt/qt_bitsilver_qt-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_bitsilver_qt-main.Tpo qt/$(DEPDIR)/qt_bitsilver_qt-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/qt_bitsilver_qt-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_bitsilver_qt-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-apptests.o: qt/test/apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-apptests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-apptests.o `test -f 'qt/test/apptests.cpp' || echo '$(srcdir)/'`qt/test/apptests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Po
#	$(AM_V_CXX)source='qt/test/apptests.cpp' object='qt/test/qt_test_test_bitsilver_qt-apptests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-apptests.o `test -f 'qt/test/apptests.cpp' || echo '$(srcdir)/'`qt/test/apptests.cpp

qt/test/qt_test_test_bitsilver_qt-apptests.obj: qt/test/apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-apptests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-apptests.obj `if test -f 'qt/test/apptests.cpp'; then $(CYGPATH_W) 'qt/test/apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/apptests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-apptests.Po
#	$(AM_V_CXX)source='qt/test/apptests.cpp' object='qt/test/qt_test_test_bitsilver_qt-apptests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-apptests.obj `if test -f 'qt/test/apptests.cpp'; then $(CYGPATH_W) 'qt/test/apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/apptests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-compattests.o: qt/test/compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Po
#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_bitsilver_qt-compattests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-compattests.o `test -f 'qt/test/compattests.cpp' || echo '$(srcdir)/'`qt/test/compattests.cpp

qt/test/qt_test_test_bitsilver_qt-compattests.obj: qt/test/compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-compattests.Po
#	$(AM_V_CXX)source='qt/test/compattests.cpp' object='qt/test/qt_test_test_bitsilver_qt-compattests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-compattests.obj `if test -f 'qt/test/compattests.cpp'; then $(CYGPATH_W) 'qt/test/compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/compattests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.o: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp

qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.obj: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-test_main.o: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitsilver_qt-test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp

qt/test/qt_test_test_bitsilver_qt-test_main.obj: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitsilver_qt-test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-uritests.o: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitsilver_qt-uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp

qt/test/qt_test_test_bitsilver_qt-uritests.obj: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitsilver_qt-uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-util.o: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-util.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_bitsilver_qt-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp

qt/test/qt_test_test_bitsilver_qt-util.obj: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-util.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_bitsilver_qt-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-addressbooktests.o: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_bitsilver_qt-addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp

qt/test/qt_test_test_bitsilver_qt-addressbooktests.obj: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_bitsilver_qt-addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-wallettests.o: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_bitsilver_qt-wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp

qt/test/qt_test_test_bitsilver_qt-wallettests.obj: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_bitsilver_qt-wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`

wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_bitsilver_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_bitsilver_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_apptests.o: qt/test/moc_apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_apptests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_apptests.o `test -f 'qt/test/moc_apptests.cpp' || echo '$(srcdir)/'`qt/test/moc_apptests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Po
#	$(AM_V_CXX)source='qt/test/moc_apptests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_apptests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_apptests.o `test -f 'qt/test/moc_apptests.cpp' || echo '$(srcdir)/'`qt/test/moc_apptests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_apptests.obj: qt/test/moc_apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_apptests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_apptests.obj `if test -f 'qt/test/moc_apptests.cpp'; then $(CYGPATH_W) 'qt/test/moc_apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_apptests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_apptests.Po
#	$(AM_V_CXX)source='qt/test/moc_apptests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_apptests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_apptests.obj `if test -f 'qt/test/moc_apptests.cpp'; then $(CYGPATH_W) 'qt/test/moc_apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_apptests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_compattests.o: qt/test/moc_compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_compattests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Po
#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_compattests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_compattests.o `test -f 'qt/test/moc_compattests.cpp' || echo '$(srcdir)/'`qt/test/moc_compattests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_compattests.obj: qt/test/moc_compattests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_compattests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_compattests.Po
#	$(AM_V_CXX)source='qt/test/moc_compattests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_compattests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_compattests.obj `if test -f 'qt/test/moc_compattests.cpp'; then $(CYGPATH_W) 'qt/test/moc_compattests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_compattests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.o: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.obj: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_uritests.o: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.o: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.obj: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`

qt/test/qt_test_test_bitsilver_qt-moc_wallettests.o: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp

qt/test/qt_test_test_bitsilver_qt-moc_wallettests.obj: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitsilver_qt-moc_wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_bitsilver_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitsilver_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_bitsilver_qt-moc_wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitsilver_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitsilver_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitsilver_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`

test/fuzz/test_fuzz_addr_info_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addr_info_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_addr_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_addr_info_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addr_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_addr_info_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addr_info_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_addr_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_addr_info_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addr_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_addr_info_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addr_info_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_addr_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_addr_info_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addr_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_addr_info_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addr_info_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_addr_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addr_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_addr_info_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addr_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addr_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addr_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_address_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_address_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_address_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_address_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_address_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_address_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_address_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_address_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_address_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_address_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_address_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_address_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_address_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_address_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_address_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_address_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_address_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_address_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_address_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_address_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_address_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_address_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_address_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_addrman_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addrman_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_addrman_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_addrman_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addrman_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_addrman_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addrman_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_addrman_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_addrman_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addrman_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_addrman_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addrman_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_addrman_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_addrman_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addrman_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_addrman_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_addrman_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_addrman_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_addrman_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_addrman_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_addrman_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_addrman_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_addrman_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_asmap-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_asmap-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Tpo -c -o test/fuzz/test_fuzz_asmap-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_asmap-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_asmap-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_asmap-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_asmap-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Tpo -c -o test/fuzz/test_fuzz_asmap-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_asmap-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_asmap-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_asmap-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_asmap-asmap.o: test/fuzz/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_asmap-asmap.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Tpo -c -o test/fuzz/test_fuzz_asmap-asmap.o `test -f 'test/fuzz/asmap.cpp' || echo '$(srcdir)/'`test/fuzz/asmap.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Tpo test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Po
#	$(AM_V_CXX)source='test/fuzz/asmap.cpp' object='test/fuzz/test_fuzz_asmap-asmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_asmap-asmap.o `test -f 'test/fuzz/asmap.cpp' || echo '$(srcdir)/'`test/fuzz/asmap.cpp

test/fuzz/test_fuzz_asmap-asmap.obj: test/fuzz/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_asmap-asmap.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Tpo -c -o test/fuzz/test_fuzz_asmap-asmap.obj `if test -f 'test/fuzz/asmap.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Tpo test/fuzz/$(DEPDIR)/test_fuzz_asmap-asmap.Po
#	$(AM_V_CXX)source='test/fuzz/asmap.cpp' object='test/fuzz/test_fuzz_asmap-asmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_asmap_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_asmap_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_asmap-asmap.obj `if test -f 'test/fuzz/asmap.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap.cpp'; fi`

test/fuzz/test_fuzz_banentry_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_banentry_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_banentry_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_banentry_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_banentry_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_banentry_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_banentry_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_banentry_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_banentry_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_banentry_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_banentry_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_banentry_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_banentry_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_banentry_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_banentry_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_banentry_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_banentry_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_banentry_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_banentry_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_banentry_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_banentry_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_banentry_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_banentry_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_base_encode_decode-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_base_encode_decode-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Tpo -c -o test/fuzz/test_fuzz_base_encode_decode-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_base_encode_decode-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_base_encode_decode-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_base_encode_decode-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_base_encode_decode-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Tpo -c -o test/fuzz/test_fuzz_base_encode_decode-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_base_encode_decode-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_base_encode_decode-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.o: test/fuzz/base_encode_decode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Tpo -c -o test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.o `test -f 'test/fuzz/base_encode_decode.cpp' || echo '$(srcdir)/'`test/fuzz/base_encode_decode.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Tpo test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Po
#	$(AM_V_CXX)source='test/fuzz/base_encode_decode.cpp' object='test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.o `test -f 'test/fuzz/base_encode_decode.cpp' || echo '$(srcdir)/'`test/fuzz/base_encode_decode.cpp

test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.obj: test/fuzz/base_encode_decode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Tpo -c -o test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.obj `if test -f 'test/fuzz/base_encode_decode.cpp'; then $(CYGPATH_W) 'test/fuzz/base_encode_decode.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/base_encode_decode.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Tpo test/fuzz/$(DEPDIR)/test_fuzz_base_encode_decode-base_encode_decode.Po
#	$(AM_V_CXX)source='test/fuzz/base_encode_decode.cpp' object='test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_base_encode_decode_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_base_encode_decode_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_base_encode_decode-base_encode_decode.obj `if test -f 'test/fuzz/base_encode_decode.cpp'; then $(CYGPATH_W) 'test/fuzz/base_encode_decode.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/base_encode_decode.cpp'; fi`

test/fuzz/test_fuzz_bech32-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bech32-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Tpo -c -o test/fuzz/test_fuzz_bech32-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bech32-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bech32-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_bech32-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bech32-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Tpo -c -o test/fuzz/test_fuzz_bech32-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bech32-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bech32-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bech32-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_bech32-bech32.o: test/fuzz/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bech32-bech32.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Tpo -c -o test/fuzz/test_fuzz_bech32-bech32.o `test -f 'test/fuzz/bech32.cpp' || echo '$(srcdir)/'`test/fuzz/bech32.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Po
#	$(AM_V_CXX)source='test/fuzz/bech32.cpp' object='test/fuzz/test_fuzz_bech32-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bech32-bech32.o `test -f 'test/fuzz/bech32.cpp' || echo '$(srcdir)/'`test/fuzz/bech32.cpp

test/fuzz/test_fuzz_bech32-bech32.obj: test/fuzz/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bech32-bech32.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Tpo -c -o test/fuzz/test_fuzz_bech32-bech32.obj `if test -f 'test/fuzz/bech32.cpp'; then $(CYGPATH_W) 'test/fuzz/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bech32-bech32.Po
#	$(AM_V_CXX)source='test/fuzz/bech32.cpp' object='test/fuzz/test_fuzz_bech32-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bech32_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bech32_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bech32-bech32.obj `if test -f 'test/fuzz/bech32.cpp'; then $(CYGPATH_W) 'test/fuzz/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bech32.cpp'; fi`

test/fuzz/test_fuzz_block-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Tpo -c -o test/fuzz/test_fuzz_block-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_block-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Tpo -c -o test/fuzz/test_fuzz_block-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_block-block.o: test/fuzz/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block-block.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block-block.Tpo -c -o test/fuzz/test_fuzz_block-block.o `test -f 'test/fuzz/block.cpp' || echo '$(srcdir)/'`test/fuzz/block.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block-block.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block-block.Po
#	$(AM_V_CXX)source='test/fuzz/block.cpp' object='test/fuzz/test_fuzz_block-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block-block.o `test -f 'test/fuzz/block.cpp' || echo '$(srcdir)/'`test/fuzz/block.cpp

test/fuzz/test_fuzz_block-block.obj: test/fuzz/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block-block.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block-block.Tpo -c -o test/fuzz/test_fuzz_block-block.obj `if test -f 'test/fuzz/block.cpp'; then $(CYGPATH_W) 'test/fuzz/block.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block-block.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block-block.Po
#	$(AM_V_CXX)source='test/fuzz/block.cpp' object='test/fuzz/test_fuzz_block-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block-block.obj `if test -f 'test/fuzz/block.cpp'; then $(CYGPATH_W) 'test/fuzz/block.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block.cpp'; fi`

test/fuzz/test_fuzz_block_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_block_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_block_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_block_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_file_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_file_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_file_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_file_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_file_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_block_filter_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_filter_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_filter_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_filter_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_filter_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_block_filter_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_filter_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_filter_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_filter_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_filter_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_block_filter_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_filter_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_filter_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_filter_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_filter_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_block_filter_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_filter_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_filter_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_filter_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_filter_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_filter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_filter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_filter_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_block_header_and_short_txids_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_block_header_and_short_txids_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blockheader_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockheader_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockheader_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockheader_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockheader_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blockheader_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockheader_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockheader_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockheader_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockheader_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blockheader_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockheader_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockheader_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockheader_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockheader_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blockheader_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockheader_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockheader_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockheader_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockheader_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockheader_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocklocator_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocklocator_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocklocator_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocklocator_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocklocator_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blockmerkleroot-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockmerkleroot-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockmerkleroot-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockmerkleroot-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockmerkleroot-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blockmerkleroot-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockmerkleroot-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockmerkleroot-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockmerkleroot-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockmerkleroot-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blockmerkleroot-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockmerkleroot-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockmerkleroot-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockmerkleroot-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockmerkleroot-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blockmerkleroot-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockmerkleroot-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockmerkleroot-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockmerkleroot-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockmerkleroot-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockmerkleroot_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockmerkleroot_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockmerkleroot-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactions_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactions_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactions_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactions_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blocktransactionsrequest_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blocktransactionsrequest_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_blockundo_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockundo_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockundo_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockundo_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockundo_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_blockundo_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockundo_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_blockundo_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_blockundo_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockundo_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_blockundo_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockundo_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockundo_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockundo_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockundo_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_blockundo_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_blockundo_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_blockundo_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_blockundo_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_blockundo_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_blockundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_blockundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_blockundo_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_bloom_filter-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloom_filter-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Tpo -c -o test/fuzz/test_fuzz_bloom_filter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bloom_filter-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloom_filter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_bloom_filter-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloom_filter-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Tpo -c -o test/fuzz/test_fuzz_bloom_filter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bloom_filter-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloom_filter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_bloom_filter-bloom_filter.o: test/fuzz/bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloom_filter-bloom_filter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Tpo -c -o test/fuzz/test_fuzz_bloom_filter-bloom_filter.o `test -f 'test/fuzz/bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/bloom_filter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/bloom_filter.cpp' object='test/fuzz/test_fuzz_bloom_filter-bloom_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloom_filter-bloom_filter.o `test -f 'test/fuzz/bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/bloom_filter.cpp

test/fuzz/test_fuzz_bloom_filter-bloom_filter.obj: test/fuzz/bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloom_filter-bloom_filter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Tpo -c -o test/fuzz/test_fuzz_bloom_filter-bloom_filter.obj `if test -f 'test/fuzz/bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bloom_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloom_filter-bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/bloom_filter.cpp' object='test/fuzz/test_fuzz_bloom_filter-bloom_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloom_filter-bloom_filter.obj `if test -f 'test/fuzz/bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bloom_filter.cpp'; fi`

test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_bloomfilter_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_bloomfilter_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_bloomfilter_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_bloomfilter_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_coins_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_coins_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_coins_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_coins_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_coins_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_coins_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_coins_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_coins_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_coins_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_coins_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_coins_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_coins_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_coins_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_coins_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_coins_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_coins_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_coins_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_coins_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_coins_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_coins_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_coins_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_coins_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_coins_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_decode_tx-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_decode_tx-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Tpo -c -o test/fuzz/test_fuzz_decode_tx-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_decode_tx-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_decode_tx-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_decode_tx-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_decode_tx-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Tpo -c -o test/fuzz/test_fuzz_decode_tx-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_decode_tx-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_decode_tx-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_decode_tx-decode_tx.o: test/fuzz/decode_tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_decode_tx-decode_tx.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Tpo -c -o test/fuzz/test_fuzz_decode_tx-decode_tx.o `test -f 'test/fuzz/decode_tx.cpp' || echo '$(srcdir)/'`test/fuzz/decode_tx.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Tpo test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Po
#	$(AM_V_CXX)source='test/fuzz/decode_tx.cpp' object='test/fuzz/test_fuzz_decode_tx-decode_tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_decode_tx-decode_tx.o `test -f 'test/fuzz/decode_tx.cpp' || echo '$(srcdir)/'`test/fuzz/decode_tx.cpp

test/fuzz/test_fuzz_decode_tx-decode_tx.obj: test/fuzz/decode_tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_decode_tx-decode_tx.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Tpo -c -o test/fuzz/test_fuzz_decode_tx-decode_tx.obj `if test -f 'test/fuzz/decode_tx.cpp'; then $(CYGPATH_W) 'test/fuzz/decode_tx.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/decode_tx.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Tpo test/fuzz/$(DEPDIR)/test_fuzz_decode_tx-decode_tx.Po
#	$(AM_V_CXX)source='test/fuzz/decode_tx.cpp' object='test/fuzz/test_fuzz_decode_tx-decode_tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_decode_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_decode_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_decode_tx-decode_tx.obj `if test -f 'test/fuzz/decode_tx.cpp'; then $(CYGPATH_W) 'test/fuzz/decode_tx.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/decode_tx.cpp'; fi`

test/fuzz/test_fuzz_descriptor_parse-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_descriptor_parse-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Tpo -c -o test/fuzz/test_fuzz_descriptor_parse-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_descriptor_parse-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_descriptor_parse-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_descriptor_parse-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_descriptor_parse-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Tpo -c -o test/fuzz/test_fuzz_descriptor_parse-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_descriptor_parse-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_descriptor_parse-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.o: test/fuzz/descriptor_parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Tpo -c -o test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.o `test -f 'test/fuzz/descriptor_parse.cpp' || echo '$(srcdir)/'`test/fuzz/descriptor_parse.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Tpo test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Po
#	$(AM_V_CXX)source='test/fuzz/descriptor_parse.cpp' object='test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.o `test -f 'test/fuzz/descriptor_parse.cpp' || echo '$(srcdir)/'`test/fuzz/descriptor_parse.cpp

test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.obj: test/fuzz/descriptor_parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Tpo -c -o test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.obj `if test -f 'test/fuzz/descriptor_parse.cpp'; then $(CYGPATH_W) 'test/fuzz/descriptor_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/descriptor_parse.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Tpo test/fuzz/$(DEPDIR)/test_fuzz_descriptor_parse-descriptor_parse.Po
#	$(AM_V_CXX)source='test/fuzz/descriptor_parse.cpp' object='test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_descriptor_parse_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_descriptor_parse_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_descriptor_parse-descriptor_parse.obj `if test -f 'test/fuzz/descriptor_parse.cpp'; then $(CYGPATH_W) 'test/fuzz/descriptor_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/descriptor_parse.cpp'; fi`

test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_diskblockindex_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_diskblockindex_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_diskblockindex_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_diskblockindex_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_eval_script-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_eval_script-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_eval_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_eval_script-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_eval_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_eval_script-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_eval_script-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_eval_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_eval_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_eval_script-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_eval_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_eval_script-eval_script.o: test/fuzz/eval_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_eval_script-eval_script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Tpo -c -o test/fuzz/test_fuzz_eval_script-eval_script.o `test -f 'test/fuzz/eval_script.cpp' || echo '$(srcdir)/'`test/fuzz/eval_script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Po
#	$(AM_V_CXX)source='test/fuzz/eval_script.cpp' object='test/fuzz/test_fuzz_eval_script-eval_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_eval_script-eval_script.o `test -f 'test/fuzz/eval_script.cpp' || echo '$(srcdir)/'`test/fuzz/eval_script.cpp

test/fuzz/test_fuzz_eval_script-eval_script.obj: test/fuzz/eval_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_eval_script-eval_script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Tpo -c -o test/fuzz/test_fuzz_eval_script-eval_script.obj `if test -f 'test/fuzz/eval_script.cpp'; then $(CYGPATH_W) 'test/fuzz/eval_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/eval_script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_eval_script-eval_script.Po
#	$(AM_V_CXX)source='test/fuzz/eval_script.cpp' object='test/fuzz/test_fuzz_eval_script-eval_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_eval_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_eval_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_eval_script-eval_script.obj `if test -f 'test/fuzz/eval_script.cpp'; then $(CYGPATH_W) 'test/fuzz/eval_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/eval_script.cpp'; fi`

test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fee_rate_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fee_rate_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fee_rate_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fee_rate_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fee_rate_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_flat_file_pos_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_flat_file_pos_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_flat_file_pos_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_flat_file_pos_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_float-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_float-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Tpo -c -o test/fuzz/test_fuzz_float-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_float-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_float-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_float-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_float-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Tpo -c -o test/fuzz/test_fuzz_float-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_float-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_float-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_float-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_float-float.o: test/fuzz/float.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_float-float.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_float-float.Tpo -c -o test/fuzz/test_fuzz_float-float.o `test -f 'test/fuzz/float.cpp' || echo '$(srcdir)/'`test/fuzz/float.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_float-float.Tpo test/fuzz/$(DEPDIR)/test_fuzz_float-float.Po
#	$(AM_V_CXX)source='test/fuzz/float.cpp' object='test/fuzz/test_fuzz_float-float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_float-float.o `test -f 'test/fuzz/float.cpp' || echo '$(srcdir)/'`test/fuzz/float.cpp

test/fuzz/test_fuzz_float-float.obj: test/fuzz/float.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_float-float.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_float-float.Tpo -c -o test/fuzz/test_fuzz_float-float.obj `if test -f 'test/fuzz/float.cpp'; then $(CYGPATH_W) 'test/fuzz/float.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/float.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_float-float.Tpo test/fuzz/$(DEPDIR)/test_fuzz_float-float.Po
#	$(AM_V_CXX)source='test/fuzz/float.cpp' object='test/fuzz/test_fuzz_float-float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_float_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_float_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_float-float.obj `if test -f 'test/fuzz/float.cpp'; then $(CYGPATH_W) 'test/fuzz/float.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/float.cpp'; fi`

test/fuzz/test_fuzz_hex-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_hex-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Tpo -c -o test/fuzz/test_fuzz_hex-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_hex-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_hex-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_hex-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_hex-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Tpo -c -o test/fuzz/test_fuzz_hex-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_hex-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_hex-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_hex-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_hex-hex.o: test/fuzz/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_hex-hex.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Tpo -c -o test/fuzz/test_fuzz_hex-hex.o `test -f 'test/fuzz/hex.cpp' || echo '$(srcdir)/'`test/fuzz/hex.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Tpo test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Po
#	$(AM_V_CXX)source='test/fuzz/hex.cpp' object='test/fuzz/test_fuzz_hex-hex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_hex-hex.o `test -f 'test/fuzz/hex.cpp' || echo '$(srcdir)/'`test/fuzz/hex.cpp

test/fuzz/test_fuzz_hex-hex.obj: test/fuzz/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_hex-hex.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Tpo -c -o test/fuzz/test_fuzz_hex-hex.obj `if test -f 'test/fuzz/hex.cpp'; then $(CYGPATH_W) 'test/fuzz/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/hex.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Tpo test/fuzz/$(DEPDIR)/test_fuzz_hex-hex.Po
#	$(AM_V_CXX)source='test/fuzz/hex.cpp' object='test/fuzz/test_fuzz_hex-hex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_hex_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_hex_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_hex-hex.obj `if test -f 'test/fuzz/hex.cpp'; then $(CYGPATH_W) 'test/fuzz/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/hex.cpp'; fi`

test/fuzz/test_fuzz_integer-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_integer-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Tpo -c -o test/fuzz/test_fuzz_integer-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_integer-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_integer-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_integer-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_integer-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Tpo -c -o test/fuzz/test_fuzz_integer-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_integer-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_integer-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_integer-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_integer-integer.o: test/fuzz/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_integer-integer.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Tpo -c -o test/fuzz/test_fuzz_integer-integer.o `test -f 'test/fuzz/integer.cpp' || echo '$(srcdir)/'`test/fuzz/integer.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Po
#	$(AM_V_CXX)source='test/fuzz/integer.cpp' object='test/fuzz/test_fuzz_integer-integer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_integer-integer.o `test -f 'test/fuzz/integer.cpp' || echo '$(srcdir)/'`test/fuzz/integer.cpp

test/fuzz/test_fuzz_integer-integer.obj: test/fuzz/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_integer-integer.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Tpo -c -o test/fuzz/test_fuzz_integer-integer.obj `if test -f 'test/fuzz/integer.cpp'; then $(CYGPATH_W) 'test/fuzz/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/integer.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_integer-integer.Po
#	$(AM_V_CXX)source='test/fuzz/integer.cpp' object='test/fuzz/test_fuzz_integer-integer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_integer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_integer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_integer-integer.obj `if test -f 'test/fuzz/integer.cpp'; then $(CYGPATH_W) 'test/fuzz/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/integer.cpp'; fi`

test/fuzz/test_fuzz_inv_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_inv_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_inv_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_inv_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_inv_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_inv_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_inv_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_inv_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_inv_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_inv_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_inv_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_inv_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_inv_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_inv_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_inv_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_inv_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_inv_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_inv_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_inv_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_inv_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_inv_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_inv_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_inv_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_key-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Tpo -c -o test/fuzz/test_fuzz_key-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_key-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Tpo -c -o test/fuzz/test_fuzz_key-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_key-key.o: test/fuzz/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key-key.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key-key.Tpo -c -o test/fuzz/test_fuzz_key-key.o `test -f 'test/fuzz/key.cpp' || echo '$(srcdir)/'`test/fuzz/key.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key-key.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key-key.Po
#	$(AM_V_CXX)source='test/fuzz/key.cpp' object='test/fuzz/test_fuzz_key-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key-key.o `test -f 'test/fuzz/key.cpp' || echo '$(srcdir)/'`test/fuzz/key.cpp

test/fuzz/test_fuzz_key-key.obj: test/fuzz/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key-key.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key-key.Tpo -c -o test/fuzz/test_fuzz_key-key.obj `if test -f 'test/fuzz/key.cpp'; then $(CYGPATH_W) 'test/fuzz/key.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key-key.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key-key.Po
#	$(AM_V_CXX)source='test/fuzz/key.cpp' object='test/fuzz/test_fuzz_key-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key-key.obj `if test -f 'test/fuzz/key.cpp'; then $(CYGPATH_W) 'test/fuzz/key.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key.cpp'; fi`

test/fuzz/test_fuzz_key_io-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_io-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Tpo -c -o test/fuzz/test_fuzz_key_io-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key_io-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_io-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_key_io-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_io-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Tpo -c -o test/fuzz/test_fuzz_key_io-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_io-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key_io-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_io-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_key_io-key_io.o: test/fuzz/key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_io-key_io.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Tpo -c -o test/fuzz/test_fuzz_key_io-key_io.o `test -f 'test/fuzz/key_io.cpp' || echo '$(srcdir)/'`test/fuzz/key_io.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Po
#	$(AM_V_CXX)source='test/fuzz/key_io.cpp' object='test/fuzz/test_fuzz_key_io-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_io-key_io.o `test -f 'test/fuzz/key_io.cpp' || echo '$(srcdir)/'`test/fuzz/key_io.cpp

test/fuzz/test_fuzz_key_io-key_io.obj: test/fuzz/key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_io-key_io.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Tpo -c -o test/fuzz/test_fuzz_key_io-key_io.obj `if test -f 'test/fuzz/key_io.cpp'; then $(CYGPATH_W) 'test/fuzz/key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_io-key_io.Po
#	$(AM_V_CXX)source='test/fuzz/key_io.cpp' object='test/fuzz/test_fuzz_key_io-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_io_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_io_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_io-key_io.obj `if test -f 'test/fuzz/key_io.cpp'; then $(CYGPATH_W) 'test/fuzz/key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key_io.cpp'; fi`

test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_key_origin_info_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_key_origin_info_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_key_origin_info_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_key_origin_info_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_locale-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_locale-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Tpo -c -o test/fuzz/test_fuzz_locale-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_locale-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_locale-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_locale-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_locale-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Tpo -c -o test/fuzz/test_fuzz_locale-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_locale-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_locale-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_locale-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_locale-locale.o: test/fuzz/locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_locale-locale.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Tpo -c -o test/fuzz/test_fuzz_locale-locale.o `test -f 'test/fuzz/locale.cpp' || echo '$(srcdir)/'`test/fuzz/locale.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Tpo test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Po
#	$(AM_V_CXX)source='test/fuzz/locale.cpp' object='test/fuzz/test_fuzz_locale-locale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_locale-locale.o `test -f 'test/fuzz/locale.cpp' || echo '$(srcdir)/'`test/fuzz/locale.cpp

test/fuzz/test_fuzz_locale-locale.obj: test/fuzz/locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_locale-locale.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Tpo -c -o test/fuzz/test_fuzz_locale-locale.obj `if test -f 'test/fuzz/locale.cpp'; then $(CYGPATH_W) 'test/fuzz/locale.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/locale.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Tpo test/fuzz/$(DEPDIR)/test_fuzz_locale-locale.Po
#	$(AM_V_CXX)source='test/fuzz/locale.cpp' object='test/fuzz/test_fuzz_locale-locale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_locale_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_locale_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_locale-locale.obj `if test -f 'test/fuzz/locale.cpp'; then $(CYGPATH_W) 'test/fuzz/locale.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/locale.cpp'; fi`

test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_merkle_block_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_merkle_block_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_merkle_block_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_merkle_block_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_merkle_block_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_messageheader_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_messageheader_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_messageheader_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_messageheader_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_messageheader_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_messageheader_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_messageheader_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_messageheader_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_messageheader_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_messageheader_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_messageheader_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_messageheader_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_messageheader_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_messageheader_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_messageheader_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_messageheader_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_messageheader_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_messageheader_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_messageheader_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_messageheader_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_messageheader_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_messageheader_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_messageheader_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_netaddr_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddr_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_netaddr_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_netaddr_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddr_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_netaddr_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddr_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_netaddr_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_netaddr_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddr_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_netaddr_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddr_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_netaddr_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_netaddr_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddr_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_netaddr_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddr_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_netaddr_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddr_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_netaddr_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddr_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddr_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddr_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_netaddress-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddress-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Tpo -c -o test/fuzz/test_fuzz_netaddress-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_netaddress-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddress-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_netaddress-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddress-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Tpo -c -o test/fuzz/test_fuzz_netaddress-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddress-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_netaddress-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddress-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_netaddress-netaddress.o: test/fuzz/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddress-netaddress.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Tpo -c -o test/fuzz/test_fuzz_netaddress-netaddress.o `test -f 'test/fuzz/netaddress.cpp' || echo '$(srcdir)/'`test/fuzz/netaddress.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Po
#	$(AM_V_CXX)source='test/fuzz/netaddress.cpp' object='test/fuzz/test_fuzz_netaddress-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddress-netaddress.o `test -f 'test/fuzz/netaddress.cpp' || echo '$(srcdir)/'`test/fuzz/netaddress.cpp

test/fuzz/test_fuzz_netaddress-netaddress.obj: test/fuzz/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_netaddress-netaddress.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Tpo -c -o test/fuzz/test_fuzz_netaddress-netaddress.obj `if test -f 'test/fuzz/netaddress.cpp'; then $(CYGPATH_W) 'test/fuzz/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Tpo test/fuzz/$(DEPDIR)/test_fuzz_netaddress-netaddress.Po
#	$(AM_V_CXX)source='test/fuzz/netaddress.cpp' object='test/fuzz/test_fuzz_netaddress-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_netaddress_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_netaddress_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_netaddress-netaddress.obj `if test -f 'test/fuzz/netaddress.cpp'; then $(CYGPATH_W) 'test/fuzz/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netaddress.cpp'; fi`

test/fuzz/test_fuzz_out_point_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_out_point_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_out_point_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_out_point_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_out_point_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_out_point_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_out_point_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_out_point_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_out_point_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_out_point_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_out_point_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_out_point_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_out_point_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_out_point_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_out_point_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_out_point_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_out_point_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_out_point_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_out_point_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_out_point_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_out_point_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_out_point_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_out_point_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Tpo -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Tpo -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.o: test/fuzz/p2p_transport_deserializer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Tpo -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.o `test -f 'test/fuzz/p2p_transport_deserializer.cpp' || echo '$(srcdir)/'`test/fuzz/p2p_transport_deserializer.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Po
#	$(AM_V_CXX)source='test/fuzz/p2p_transport_deserializer.cpp' object='test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.o `test -f 'test/fuzz/p2p_transport_deserializer.cpp' || echo '$(srcdir)/'`test/fuzz/p2p_transport_deserializer.cpp

test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.obj: test/fuzz/p2p_transport_deserializer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Tpo -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.obj `if test -f 'test/fuzz/p2p_transport_deserializer.cpp'; then $(CYGPATH_W) 'test/fuzz/p2p_transport_deserializer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/p2p_transport_deserializer.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.Po
#	$(AM_V_CXX)source='test/fuzz/p2p_transport_deserializer.cpp' object='test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_p2p_transport_deserializer_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_p2p_transport_deserializer_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_p2p_transport_deserializer-p2p_transport_deserializer.obj `if test -f 'test/fuzz/p2p_transport_deserializer.cpp'; then $(CYGPATH_W) 'test/fuzz/p2p_transport_deserializer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/p2p_transport_deserializer.cpp'; fi`

test/fuzz/test_fuzz_parse_hd_keypath-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_hd_keypath-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_hd_keypath-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_hd_keypath-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_hd_keypath-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_parse_hd_keypath-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_hd_keypath-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_hd_keypath-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_hd_keypath-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_hd_keypath-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.o: test/fuzz/parse_hd_keypath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Tpo -c -o test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.o `test -f 'test/fuzz/parse_hd_keypath.cpp' || echo '$(srcdir)/'`test/fuzz/parse_hd_keypath.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Po
#	$(AM_V_CXX)source='test/fuzz/parse_hd_keypath.cpp' object='test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.o `test -f 'test/fuzz/parse_hd_keypath.cpp' || echo '$(srcdir)/'`test/fuzz/parse_hd_keypath.cpp

test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.obj: test/fuzz/parse_hd_keypath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Tpo -c -o test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.obj `if test -f 'test/fuzz/parse_hd_keypath.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_hd_keypath.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_hd_keypath.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_hd_keypath-parse_hd_keypath.Po
#	$(AM_V_CXX)source='test/fuzz/parse_hd_keypath.cpp' object='test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_hd_keypath_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_hd_keypath_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_hd_keypath-parse_hd_keypath.obj `if test -f 'test/fuzz/parse_hd_keypath.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_hd_keypath.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_hd_keypath.cpp'; fi`

test/fuzz/test_fuzz_parse_iso8601-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_iso8601-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_iso8601-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_iso8601-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_iso8601-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_parse_iso8601-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_iso8601-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_iso8601-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_iso8601-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_iso8601-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.o: test/fuzz/parse_iso8601.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Tpo -c -o test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.o `test -f 'test/fuzz/parse_iso8601.cpp' || echo '$(srcdir)/'`test/fuzz/parse_iso8601.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Po
#	$(AM_V_CXX)source='test/fuzz/parse_iso8601.cpp' object='test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.o `test -f 'test/fuzz/parse_iso8601.cpp' || echo '$(srcdir)/'`test/fuzz/parse_iso8601.cpp

test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.obj: test/fuzz/parse_iso8601.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Tpo -c -o test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.obj `if test -f 'test/fuzz/parse_iso8601.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_iso8601.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_iso8601.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_iso8601-parse_iso8601.Po
#	$(AM_V_CXX)source='test/fuzz/parse_iso8601.cpp' object='test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_iso8601_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_iso8601_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_iso8601-parse_iso8601.obj `if test -f 'test/fuzz/parse_iso8601.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_iso8601.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_iso8601.cpp'; fi`

test/fuzz/test_fuzz_parse_numbers-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_numbers-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_numbers-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_numbers-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_numbers-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_parse_numbers-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_numbers-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_numbers-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_numbers-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_numbers-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_parse_numbers-parse_numbers.o: test/fuzz/parse_numbers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_numbers-parse_numbers.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Tpo -c -o test/fuzz/test_fuzz_parse_numbers-parse_numbers.o `test -f 'test/fuzz/parse_numbers.cpp' || echo '$(srcdir)/'`test/fuzz/parse_numbers.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Po
#	$(AM_V_CXX)source='test/fuzz/parse_numbers.cpp' object='test/fuzz/test_fuzz_parse_numbers-parse_numbers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_numbers-parse_numbers.o `test -f 'test/fuzz/parse_numbers.cpp' || echo '$(srcdir)/'`test/fuzz/parse_numbers.cpp

test/fuzz/test_fuzz_parse_numbers-parse_numbers.obj: test/fuzz/parse_numbers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_numbers-parse_numbers.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Tpo -c -o test/fuzz/test_fuzz_parse_numbers-parse_numbers.obj `if test -f 'test/fuzz/parse_numbers.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_numbers.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_numbers.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_numbers-parse_numbers.Po
#	$(AM_V_CXX)source='test/fuzz/parse_numbers.cpp' object='test/fuzz/test_fuzz_parse_numbers-parse_numbers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_numbers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_numbers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_numbers-parse_numbers.obj `if test -f 'test/fuzz/parse_numbers.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_numbers.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_numbers.cpp'; fi`

test/fuzz/test_fuzz_parse_script-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_script-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_script-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_parse_script-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_script-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_script-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_parse_script-parse_script.o: test/fuzz/parse_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_script-parse_script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Tpo -c -o test/fuzz/test_fuzz_parse_script-parse_script.o `test -f 'test/fuzz/parse_script.cpp' || echo '$(srcdir)/'`test/fuzz/parse_script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Po
#	$(AM_V_CXX)source='test/fuzz/parse_script.cpp' object='test/fuzz/test_fuzz_parse_script-parse_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_script-parse_script.o `test -f 'test/fuzz/parse_script.cpp' || echo '$(srcdir)/'`test/fuzz/parse_script.cpp

test/fuzz/test_fuzz_parse_script-parse_script.obj: test/fuzz/parse_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_script-parse_script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Tpo -c -o test/fuzz/test_fuzz_parse_script-parse_script.obj `if test -f 'test/fuzz/parse_script.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_script-parse_script.Po
#	$(AM_V_CXX)source='test/fuzz/parse_script.cpp' object='test/fuzz/test_fuzz_parse_script-parse_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_script-parse_script.obj `if test -f 'test/fuzz/parse_script.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_script.cpp'; fi`

test/fuzz/test_fuzz_parse_univalue-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_univalue-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_univalue-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_univalue-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_univalue-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_parse_univalue-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_univalue-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Tpo -c -o test/fuzz/test_fuzz_parse_univalue-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_parse_univalue-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_univalue-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_parse_univalue-parse_univalue.o: test/fuzz/parse_univalue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_univalue-parse_univalue.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Tpo -c -o test/fuzz/test_fuzz_parse_univalue-parse_univalue.o `test -f 'test/fuzz/parse_univalue.cpp' || echo '$(srcdir)/'`test/fuzz/parse_univalue.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Po
#	$(AM_V_CXX)source='test/fuzz/parse_univalue.cpp' object='test/fuzz/test_fuzz_parse_univalue-parse_univalue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_univalue-parse_univalue.o `test -f 'test/fuzz/parse_univalue.cpp' || echo '$(srcdir)/'`test/fuzz/parse_univalue.cpp

test/fuzz/test_fuzz_parse_univalue-parse_univalue.obj: test/fuzz/parse_univalue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_parse_univalue-parse_univalue.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Tpo -c -o test/fuzz/test_fuzz_parse_univalue-parse_univalue.obj `if test -f 'test/fuzz/parse_univalue.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_univalue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_univalue.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_parse_univalue-parse_univalue.Po
#	$(AM_V_CXX)source='test/fuzz/parse_univalue.cpp' object='test/fuzz/test_fuzz_parse_univalue-parse_univalue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_parse_univalue_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_parse_univalue_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_parse_univalue-parse_univalue.obj `if test -f 'test/fuzz/parse_univalue.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_univalue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_univalue.cpp'; fi`

test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partial_merkle_tree_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partial_merkle_tree_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_partially_signed_transaction_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_partially_signed_transaction_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_prefilled_transaction_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_prefilled_transaction_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_prefilled_transaction_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_prefilled_transaction_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_process_message-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_addr-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_addr-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_addr-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_addr-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_addr-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_addr-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_addr-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_addr-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_addr-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_addr-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_addr-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_addr-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_addr-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_addr-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_addr-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_addr-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_addr-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_addr-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_addr-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_addr-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_addr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_addr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_addr-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_block-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_block-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_block-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_block-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_block-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_block-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_block-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_block-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_block-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_block-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_block-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_block-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_block-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_block-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_block-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_block-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_block-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_block-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_block-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_block-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_block_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_block_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_block-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_blocktxn-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_blocktxn-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_blocktxn-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_blocktxn-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_blocktxn-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_blocktxn-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_blocktxn-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_blocktxn-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_blocktxn-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_blocktxn-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_blocktxn-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_blocktxn-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_blocktxn-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_blocktxn-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_blocktxn-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_blocktxn-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_blocktxn-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_blocktxn-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_blocktxn-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_blocktxn-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_blocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_blocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_blocktxn-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_cmpctblock-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_cmpctblock-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_cmpctblock-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_cmpctblock-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_cmpctblock-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_cmpctblock-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_cmpctblock-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_cmpctblock-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_cmpctblock-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_cmpctblock-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_cmpctblock-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_cmpctblock_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_cmpctblock_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_cmpctblock-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_feefilter-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_feefilter-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_feefilter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_feefilter-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_feefilter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_feefilter-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_feefilter-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_feefilter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_feefilter-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_feefilter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_feefilter-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_feefilter-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_feefilter-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_feefilter-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_feefilter-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_feefilter-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_feefilter-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_feefilter-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_feefilter-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_feefilter-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_feefilter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_feefilter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_feefilter-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_filteradd-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filteradd-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filteradd-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filteradd-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filteradd-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_filteradd-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filteradd-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filteradd-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filteradd-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filteradd-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_filteradd-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filteradd-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filteradd-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filteradd-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filteradd-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_filteradd-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filteradd-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filteradd-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filteradd-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filteradd-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filteradd_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filteradd_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filteradd-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_filterclear-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterclear-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filterclear-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filterclear-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterclear-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_filterclear-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterclear-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filterclear-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filterclear-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterclear-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_filterclear-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterclear-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filterclear-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filterclear-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterclear-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_filterclear-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterclear-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filterclear-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterclear-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filterclear-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterclear_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterclear_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterclear-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_filterload-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterload-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filterload-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filterload-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterload-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_filterload-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterload-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_filterload-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_filterload-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterload-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_filterload-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterload-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filterload-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filterload-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterload-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_filterload-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_filterload-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_filterload-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_filterload-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_filterload-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_filterload_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_filterload_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_filterload-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_getaddr-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getaddr-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getaddr-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getaddr-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getaddr-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_getaddr-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getaddr-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getaddr-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getaddr-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getaddr-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_getaddr-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getaddr-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getaddr-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getaddr-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getaddr-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_getaddr-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getaddr-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getaddr-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getaddr-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getaddr-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getaddr_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getaddr_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getaddr-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_getblocks-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocks-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocks-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getblocks-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocks-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_getblocks-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocks-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocks-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getblocks-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocks-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_getblocks-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocks-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocks-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getblocks-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocks-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_getblocks-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocks-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocks-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocks-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getblocks-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocks_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocks_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocks-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocktxn-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_getblocktxn-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocktxn-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocktxn-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getblocktxn-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocktxn-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_getblocktxn-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getblocktxn-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getblocktxn-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getblocktxn-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getblocktxn-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getblocktxn_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getblocktxn_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getblocktxn-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_getdata-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getdata-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getdata-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getdata-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getdata-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_getdata-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getdata-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getdata-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getdata-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getdata-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_getdata-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getdata-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getdata-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getdata-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getdata-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_getdata-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getdata-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getdata-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getdata-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getdata-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getdata_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getdata_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getdata-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_getheaders-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getheaders-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getheaders-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getheaders-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getheaders-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_getheaders-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getheaders-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_getheaders-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_getheaders-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getheaders-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_getheaders-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getheaders-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getheaders-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getheaders-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getheaders-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_getheaders-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_getheaders-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_getheaders-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_getheaders-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_getheaders-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_getheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_getheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_getheaders-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_headers-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_headers-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_headers-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_headers-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_headers-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_headers-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_headers-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_headers-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_headers-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_headers-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_headers-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_headers-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_headers-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_headers-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_headers-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_headers-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_headers-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_headers-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_headers-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_headers-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_headers_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_headers_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_headers-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_inv-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_inv-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_inv-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_inv-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_inv-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_inv-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_inv-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_inv-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_inv-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_inv-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_inv-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_inv-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_inv-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_inv-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_inv-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_inv-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_inv-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_inv-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_inv-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_inv-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_inv_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_inv_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_inv-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_mempool-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_mempool-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_mempool-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_mempool-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_mempool-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_mempool-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_mempool-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_mempool-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_mempool-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_mempool-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_mempool-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_mempool-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_mempool-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_mempool-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_mempool-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_mempool-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_mempool-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_mempool-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_mempool-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_mempool-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_mempool_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_mempool_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_mempool-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_notfound-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_notfound-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_notfound-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_notfound-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_notfound-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_notfound-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_notfound-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_notfound-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_notfound-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_notfound-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_notfound-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_notfound-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_notfound-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_notfound-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_notfound-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_notfound-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_notfound-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_notfound-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_notfound-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_notfound-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_notfound_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_notfound_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_notfound-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_ping-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_ping-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_ping-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_ping-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_ping-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_ping-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_ping-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_ping-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_ping-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_ping-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_ping-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_ping-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_ping-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_ping-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_ping-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_ping-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_ping-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_ping-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_ping-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_ping-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_ping_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_ping_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_ping-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_pong-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_pong-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_pong-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_pong-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_pong-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_pong-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_pong-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_pong-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_pong-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_pong-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_pong-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_pong-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_pong-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_pong-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_pong-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_pong-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_pong-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_pong-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_pong-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_pong-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_pong_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_pong_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_pong-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendcmpct-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_sendcmpct-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendcmpct-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_sendcmpct-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_sendcmpct-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendcmpct-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_sendcmpct-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendcmpct-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_sendcmpct-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendcmpct-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_sendcmpct-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendcmpct_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendcmpct_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendcmpct-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_sendheaders-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendheaders-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_sendheaders-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_sendheaders-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendheaders-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_sendheaders-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendheaders-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_sendheaders-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_sendheaders-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendheaders-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_sendheaders-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendheaders-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_sendheaders-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_sendheaders-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendheaders-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_sendheaders-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_sendheaders-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_sendheaders-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_sendheaders-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_sendheaders-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_sendheaders_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_sendheaders_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_sendheaders-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_tx-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_tx-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_tx-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_tx-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_tx-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_tx-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_tx-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_tx-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_tx-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_tx-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_tx-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_tx-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_tx-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_tx-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_tx-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_tx-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_tx-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_tx-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_tx-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_tx-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_tx_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_tx_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_tx-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_verack-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_verack-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_verack-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_verack-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_verack-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_verack-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_verack-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_verack-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_verack-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_verack-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_verack-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_verack-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_verack-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_verack-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_verack-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_verack-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_verack-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_verack-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_verack-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_verack-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_verack_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_verack_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_verack-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_process_message_version-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_version-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_version-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_version-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_version-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_process_message_version-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_version-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Tpo -c -o test/fuzz/test_fuzz_process_message_version-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_process_message_version-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_version-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_process_message_version-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_version-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_version-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_version-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_version-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_process_message_version-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_process_message_version-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Tpo -c -o test/fuzz/test_fuzz_process_message_version-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_process_message_version-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_process_message_version-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_process_message_version_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_process_message_version_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_process_message_version-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_psbt-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_psbt-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_psbt-psbt.o: test/fuzz/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt-psbt.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Tpo -c -o test/fuzz/test_fuzz_psbt-psbt.o `test -f 'test/fuzz/psbt.cpp' || echo '$(srcdir)/'`test/fuzz/psbt.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Po
#	$(AM_V_CXX)source='test/fuzz/psbt.cpp' object='test/fuzz/test_fuzz_psbt-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt-psbt.o `test -f 'test/fuzz/psbt.cpp' || echo '$(srcdir)/'`test/fuzz/psbt.cpp

test/fuzz/test_fuzz_psbt-psbt.obj: test/fuzz/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt-psbt.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Tpo -c -o test/fuzz/test_fuzz_psbt-psbt.obj `if test -f 'test/fuzz/psbt.cpp'; then $(CYGPATH_W) 'test/fuzz/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt-psbt.Po
#	$(AM_V_CXX)source='test/fuzz/psbt.cpp' object='test/fuzz/test_fuzz_psbt-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt-psbt.obj `if test -f 'test/fuzz/psbt.cpp'; then $(CYGPATH_W) 'test/fuzz/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/psbt.cpp'; fi`

test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_input_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_input_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_input_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_input_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_input_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_output_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_psbt_output_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_psbt_output_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_psbt_output_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_psbt_output_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_pub_key_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_pub_key_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_pub_key_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_pub_key_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_pub_key_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_pub_key_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_pub_key_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_pub_key_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_pub_key_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_pub_key_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_pub_key_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_pub_key_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_pub_key_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_pub_key_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_pub_key_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_pub_key_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_pub_key_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_pub_key_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_pub_key_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_pub_key_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_pub_key_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_pub_key_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_pub_key_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Tpo -c -o test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Tpo -c -o test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_rolling_bloom_filter-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.o: test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Tpo -c -o test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.o `test -f 'test/fuzz/rolling_bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/rolling_bloom_filter.cpp' object='test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.o `test -f 'test/fuzz/rolling_bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/rolling_bloom_filter.cpp

test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.obj: test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Tpo -c -o test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.obj `if test -f 'test/fuzz/rolling_bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/rolling_bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rolling_bloom_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/rolling_bloom_filter.cpp' object='test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_rolling_bloom_filter_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_rolling_bloom_filter_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_rolling_bloom_filter-rolling_bloom_filter.obj `if test -f 'test/fuzz/rolling_bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/rolling_bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rolling_bloom_filter.cpp'; fi`

test/fuzz/test_fuzz_script-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_script-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Tpo -c -o test/fuzz/test_fuzz_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_script-script.o: test/fuzz/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script-script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script-script.Tpo -c -o test/fuzz/test_fuzz_script-script.o `test -f 'test/fuzz/script.cpp' || echo '$(srcdir)/'`test/fuzz/script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script-script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script-script.Po
#	$(AM_V_CXX)source='test/fuzz/script.cpp' object='test/fuzz/test_fuzz_script-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script-script.o `test -f 'test/fuzz/script.cpp' || echo '$(srcdir)/'`test/fuzz/script.cpp

test/fuzz/test_fuzz_script-script.obj: test/fuzz/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script-script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script-script.Tpo -c -o test/fuzz/test_fuzz_script-script.obj `if test -f 'test/fuzz/script.cpp'; then $(CYGPATH_W) 'test/fuzz/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script-script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script-script.Po
#	$(AM_V_CXX)source='test/fuzz/script.cpp' object='test/fuzz/test_fuzz_script-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script-script.obj `if test -f 'test/fuzz/script.cpp'; then $(CYGPATH_W) 'test/fuzz/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script.cpp'; fi`

test/fuzz/test_fuzz_script_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_script_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_script_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_script_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_script_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_script_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_script_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_script_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_script_flags-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_flags-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_flags-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_flags-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_flags-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_script_flags-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_flags-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_flags-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_flags-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_flags-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_flags-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_script_flags-script_flags.o: test/fuzz/script_flags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_flags-script_flags.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Tpo -c -o test/fuzz/test_fuzz_script_flags-script_flags.o `test -f 'test/fuzz/script_flags.cpp' || echo '$(srcdir)/'`test/fuzz/script_flags.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Po
#	$(AM_V_CXX)source='test/fuzz/script_flags.cpp' object='test/fuzz/test_fuzz_script_flags-script_flags.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_flags-script_flags.o `test -f 'test/fuzz/script_flags.cpp' || echo '$(srcdir)/'`test/fuzz/script_flags.cpp

test/fuzz/test_fuzz_script_flags-script_flags.obj: test/fuzz/script_flags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_flags-script_flags.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Tpo -c -o test/fuzz/test_fuzz_script_flags-script_flags.obj `if test -f 'test/fuzz/script_flags.cpp'; then $(CYGPATH_W) 'test/fuzz/script_flags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_flags.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_flags-script_flags.Po
#	$(AM_V_CXX)source='test/fuzz/script_flags.cpp' object='test/fuzz/test_fuzz_script_flags-script_flags.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_flags_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_flags_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_flags-script_flags.obj `if test -f 'test/fuzz/script_flags.cpp'; then $(CYGPATH_W) 'test/fuzz/script_flags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_flags.cpp'; fi`

test/fuzz/test_fuzz_script_ops-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_ops-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_ops-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_ops-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_ops-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_script_ops-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_ops-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Tpo -c -o test/fuzz/test_fuzz_script_ops-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_ops-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_script_ops-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_ops-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_script_ops-script_ops.o: test/fuzz/script_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_ops-script_ops.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Tpo -c -o test/fuzz/test_fuzz_script_ops-script_ops.o `test -f 'test/fuzz/script_ops.cpp' || echo '$(srcdir)/'`test/fuzz/script_ops.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Po
#	$(AM_V_CXX)source='test/fuzz/script_ops.cpp' object='test/fuzz/test_fuzz_script_ops-script_ops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_ops-script_ops.o `test -f 'test/fuzz/script_ops.cpp' || echo '$(srcdir)/'`test/fuzz/script_ops.cpp

test/fuzz/test_fuzz_script_ops-script_ops.obj: test/fuzz/script_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_script_ops-script_ops.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Tpo -c -o test/fuzz/test_fuzz_script_ops-script_ops.obj `if test -f 'test/fuzz/script_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/script_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_ops.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_script_ops-script_ops.Po
#	$(AM_V_CXX)source='test/fuzz/script_ops.cpp' object='test/fuzz/test_fuzz_script_ops-script_ops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_script_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_script_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_script_ops-script_ops.obj `if test -f 'test/fuzz/script_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/script_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_ops.cpp'; fi`

test/fuzz/test_fuzz_scriptnum_ops-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_scriptnum_ops-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Tpo -c -o test/fuzz/test_fuzz_scriptnum_ops-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_scriptnum_ops-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_scriptnum_ops-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_scriptnum_ops-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_scriptnum_ops-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Tpo -c -o test/fuzz/test_fuzz_scriptnum_ops-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_scriptnum_ops-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_scriptnum_ops-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.o: test/fuzz/scriptnum_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Tpo -c -o test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.o `test -f 'test/fuzz/scriptnum_ops.cpp' || echo '$(srcdir)/'`test/fuzz/scriptnum_ops.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Po
#	$(AM_V_CXX)source='test/fuzz/scriptnum_ops.cpp' object='test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.o `test -f 'test/fuzz/scriptnum_ops.cpp' || echo '$(srcdir)/'`test/fuzz/scriptnum_ops.cpp

test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.obj: test/fuzz/scriptnum_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Tpo -c -o test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.obj `if test -f 'test/fuzz/scriptnum_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/scriptnum_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/scriptnum_ops.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_scriptnum_ops-scriptnum_ops.Po
#	$(AM_V_CXX)source='test/fuzz/scriptnum_ops.cpp' object='test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_scriptnum_ops_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_scriptnum_ops_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_scriptnum_ops-scriptnum_ops.obj `if test -f 'test/fuzz/scriptnum_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/scriptnum_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/scriptnum_ops.cpp'; fi`

test/fuzz/test_fuzz_service_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_service_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_service_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_service_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_service_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_service_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_service_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_service_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_service_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_service_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_service_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_service_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_service_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_service_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_service_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_service_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_service_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_service_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_service_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_service_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_service_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_service_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_service_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_snapshotmetadata_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_snapshotmetadata_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_snapshotmetadata_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_snapshotmetadata_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_spanparsing-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_spanparsing-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Tpo -c -o test/fuzz/test_fuzz_spanparsing-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_spanparsing-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_spanparsing-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_spanparsing-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_spanparsing-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Tpo -c -o test/fuzz/test_fuzz_spanparsing-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_spanparsing-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_spanparsing-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_spanparsing-spanparsing.o: test/fuzz/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_spanparsing-spanparsing.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Tpo -c -o test/fuzz/test_fuzz_spanparsing-spanparsing.o `test -f 'test/fuzz/spanparsing.cpp' || echo '$(srcdir)/'`test/fuzz/spanparsing.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Tpo test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Po
#	$(AM_V_CXX)source='test/fuzz/spanparsing.cpp' object='test/fuzz/test_fuzz_spanparsing-spanparsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_spanparsing-spanparsing.o `test -f 'test/fuzz/spanparsing.cpp' || echo '$(srcdir)/'`test/fuzz/spanparsing.cpp

test/fuzz/test_fuzz_spanparsing-spanparsing.obj: test/fuzz/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_spanparsing-spanparsing.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Tpo -c -o test/fuzz/test_fuzz_spanparsing-spanparsing.obj `if test -f 'test/fuzz/spanparsing.cpp'; then $(CYGPATH_W) 'test/fuzz/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/spanparsing.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Tpo test/fuzz/$(DEPDIR)/test_fuzz_spanparsing-spanparsing.Po
#	$(AM_V_CXX)source='test/fuzz/spanparsing.cpp' object='test/fuzz/test_fuzz_spanparsing-spanparsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_spanparsing_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_spanparsing_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_spanparsing-spanparsing.obj `if test -f 'test/fuzz/spanparsing.cpp'; then $(CYGPATH_W) 'test/fuzz/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/spanparsing.cpp'; fi`

test/fuzz/test_fuzz_strprintf-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_strprintf-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Tpo -c -o test/fuzz/test_fuzz_strprintf-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_strprintf-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_strprintf-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_strprintf-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_strprintf-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Tpo -c -o test/fuzz/test_fuzz_strprintf-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_strprintf-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_strprintf-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_strprintf-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_strprintf-strprintf.o: test/fuzz/strprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_strprintf-strprintf.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Tpo -c -o test/fuzz/test_fuzz_strprintf-strprintf.o `test -f 'test/fuzz/strprintf.cpp' || echo '$(srcdir)/'`test/fuzz/strprintf.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Po
#	$(AM_V_CXX)source='test/fuzz/strprintf.cpp' object='test/fuzz/test_fuzz_strprintf-strprintf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_strprintf-strprintf.o `test -f 'test/fuzz/strprintf.cpp' || echo '$(srcdir)/'`test/fuzz/strprintf.cpp

test/fuzz/test_fuzz_strprintf-strprintf.obj: test/fuzz/strprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_strprintf-strprintf.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Tpo -c -o test/fuzz/test_fuzz_strprintf-strprintf.obj `if test -f 'test/fuzz/strprintf.cpp'; then $(CYGPATH_W) 'test/fuzz/strprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/strprintf.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_strprintf-strprintf.Po
#	$(AM_V_CXX)source='test/fuzz/strprintf.cpp' object='test/fuzz/test_fuzz_strprintf-strprintf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_strprintf_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_strprintf_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_strprintf-strprintf.obj `if test -f 'test/fuzz/strprintf.cpp'; then $(CYGPATH_W) 'test/fuzz/strprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/strprintf.cpp'; fi`

test/fuzz/test_fuzz_sub_net_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_sub_net_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_sub_net_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_sub_net_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_sub_net_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_sub_net_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_sub_net_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_sub_net_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_sub_net_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_sub_net_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_sub_net_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_sub_net_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_sub_net_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_sub_net_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_sub_net_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_sub_net_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_sub_net_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_sub_net_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_sub_net_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_sub_net_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_sub_net_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_sub_net_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_sub_net_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_transaction-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_transaction-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Tpo -c -o test/fuzz/test_fuzz_transaction-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_transaction-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_transaction-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_transaction-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_transaction-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Tpo -c -o test/fuzz/test_fuzz_transaction-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_transaction-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_transaction-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_transaction-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_transaction-transaction.o: test/fuzz/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_transaction-transaction.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Tpo -c -o test/fuzz/test_fuzz_transaction-transaction.o `test -f 'test/fuzz/transaction.cpp' || echo '$(srcdir)/'`test/fuzz/transaction.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Po
#	$(AM_V_CXX)source='test/fuzz/transaction.cpp' object='test/fuzz/test_fuzz_transaction-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_transaction-transaction.o `test -f 'test/fuzz/transaction.cpp' || echo '$(srcdir)/'`test/fuzz/transaction.cpp

test/fuzz/test_fuzz_transaction-transaction.obj: test/fuzz/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_transaction-transaction.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Tpo -c -o test/fuzz/test_fuzz_transaction-transaction.obj `if test -f 'test/fuzz/transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_transaction-transaction.Po
#	$(AM_V_CXX)source='test/fuzz/transaction.cpp' object='test/fuzz/test_fuzz_transaction-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_transaction_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_transaction_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_transaction-transaction.obj `if test -f 'test/fuzz/transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/transaction.cpp'; fi`

test/fuzz/test_fuzz_tx_in-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_in-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_in-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_tx_in-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_in-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_in-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_tx_in-tx_in.o: test/fuzz/tx_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in-tx_in.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Tpo -c -o test/fuzz/test_fuzz_tx_in-tx_in.o `test -f 'test/fuzz/tx_in.cpp' || echo '$(srcdir)/'`test/fuzz/tx_in.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Po
#	$(AM_V_CXX)source='test/fuzz/tx_in.cpp' object='test/fuzz/test_fuzz_tx_in-tx_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in-tx_in.o `test -f 'test/fuzz/tx_in.cpp' || echo '$(srcdir)/'`test/fuzz/tx_in.cpp

test/fuzz/test_fuzz_tx_in-tx_in.obj: test/fuzz/tx_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in-tx_in.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Tpo -c -o test/fuzz/test_fuzz_tx_in-tx_in.obj `if test -f 'test/fuzz/tx_in.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_in.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_in.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in-tx_in.Po
#	$(AM_V_CXX)source='test/fuzz/tx_in.cpp' object='test/fuzz/test_fuzz_tx_in-tx_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in-tx_in.obj `if test -f 'test/fuzz/tx_in.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_in.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_in.cpp'; fi`

test/fuzz/test_fuzz_tx_in_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_in_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_in_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_tx_in_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_in_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_in_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_tx_in_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_tx_in_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_tx_in_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_tx_in_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_in_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_tx_in_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_in_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_tx_in_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_in_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_in_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_in_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_tx_out-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_out-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_out-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_out-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_out-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_tx_out-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_out-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Tpo -c -o test/fuzz/test_fuzz_tx_out-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_out-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_tx_out-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_out-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_tx_out-tx_out.o: test/fuzz/tx_out.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_out-tx_out.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Tpo -c -o test/fuzz/test_fuzz_tx_out-tx_out.o `test -f 'test/fuzz/tx_out.cpp' || echo '$(srcdir)/'`test/fuzz/tx_out.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Po
#	$(AM_V_CXX)source='test/fuzz/tx_out.cpp' object='test/fuzz/test_fuzz_tx_out-tx_out.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_out-tx_out.o `test -f 'test/fuzz/tx_out.cpp' || echo '$(srcdir)/'`test/fuzz/tx_out.cpp

test/fuzz/test_fuzz_tx_out-tx_out.obj: test/fuzz/tx_out.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_tx_out-tx_out.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Tpo -c -o test/fuzz/test_fuzz_tx_out-tx_out.obj `if test -f 'test/fuzz/tx_out.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_out.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_out.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Tpo test/fuzz/$(DEPDIR)/test_fuzz_tx_out-tx_out.Po
#	$(AM_V_CXX)source='test/fuzz/tx_out.cpp' object='test/fuzz/test_fuzz_tx_out-tx_out.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_tx_out_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_tx_out_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_tx_out-tx_out.obj `if test -f 'test/fuzz/tx_out.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_out.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_out.cpp'; fi`

test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txoutcompressor_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txoutcompressor_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txoutcompressor_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txoutcompressor_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_txundo_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txundo_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_txundo_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_txundo_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txundo_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_txundo_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txundo_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_txundo_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_txundo_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txundo_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_txundo_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txundo_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_txundo_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_txundo_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txundo_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_txundo_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_txundo_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_txundo_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_txundo_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_txundo_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_txundo_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_txundo_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_txundo_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_uint160_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint160_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_uint160_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_uint160_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint160_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_uint160_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint160_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_uint160_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_uint160_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint160_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_uint160_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint160_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_uint160_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_uint160_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint160_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_uint160_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint160_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_uint160_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint160_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_uint160_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint160_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint160_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint160_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_uint256_deserialize-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint256_deserialize-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_uint256_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_uint256_deserialize-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint256_deserialize-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/test_fuzz_uint256_deserialize-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint256_deserialize-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Tpo -c -o test/fuzz/test_fuzz_uint256_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/test_fuzz_uint256_deserialize-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint256_deserialize-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/test_fuzz_uint256_deserialize-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint256_deserialize-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_uint256_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_uint256_deserialize-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint256_deserialize-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_uint256_deserialize-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_uint256_deserialize-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Tpo -c -o test/fuzz/test_fuzz_uint256_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_uint256_deserialize-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_uint256_deserialize-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_uint256_deserialize_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_uint256_deserialize_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_uint256_deserialize-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/test_test_bitsilver-main.o: test/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-main.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-main.Tpo -c -o test/test_test_bitsilver-main.o `test -f 'test/main.cpp' || echo '$(srcdir)/'`test/main.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-main.Tpo test/$(DEPDIR)/test_test_bitsilver-main.Po
#	$(AM_V_CXX)source='test/main.cpp' object='test/test_test_bitsilver-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-main.o `test -f 'test/main.cpp' || echo '$(srcdir)/'`test/main.cpp

test/test_test_bitsilver-main.obj: test/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-main.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-main.Tpo -c -o test/test_test_bitsilver-main.obj `if test -f 'test/main.cpp'; then $(CYGPATH_W) 'test/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-main.Tpo test/$(DEPDIR)/test_test_bitsilver-main.Po
#	$(AM_V_CXX)source='test/main.cpp' object='test/test_test_bitsilver-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-main.obj `if test -f 'test/main.cpp'; then $(CYGPATH_W) 'test/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main.cpp'; fi`

test/gen/test_test_bitsilver-crypto_gen.o: test/gen/crypto_gen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/gen/test_test_bitsilver-crypto_gen.o -MD -MP -MF test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Tpo -c -o test/gen/test_test_bitsilver-crypto_gen.o `test -f 'test/gen/crypto_gen.cpp' || echo '$(srcdir)/'`test/gen/crypto_gen.cpp
	$(AM_V_at)$(am__mv) test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Tpo test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Po
#	$(AM_V_CXX)source='test/gen/crypto_gen.cpp' object='test/gen/test_test_bitsilver-crypto_gen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/gen/test_test_bitsilver-crypto_gen.o `test -f 'test/gen/crypto_gen.cpp' || echo '$(srcdir)/'`test/gen/crypto_gen.cpp

test/gen/test_test_bitsilver-crypto_gen.obj: test/gen/crypto_gen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/gen/test_test_bitsilver-crypto_gen.obj -MD -MP -MF test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Tpo -c -o test/gen/test_test_bitsilver-crypto_gen.obj `if test -f 'test/gen/crypto_gen.cpp'; then $(CYGPATH_W) 'test/gen/crypto_gen.cpp'; else $(CYGPATH_W) '$(srcdir)/test/gen/crypto_gen.cpp'; fi`
	$(AM_V_at)$(am__mv) test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Tpo test/gen/$(DEPDIR)/test_test_bitsilver-crypto_gen.Po
#	$(AM_V_CXX)source='test/gen/crypto_gen.cpp' object='test/gen/test_test_bitsilver-crypto_gen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/gen/test_test_bitsilver-crypto_gen.obj `if test -f 'test/gen/crypto_gen.cpp'; then $(CYGPATH_W) 'test/gen/crypto_gen.cpp'; else $(CYGPATH_W) '$(srcdir)/test/gen/crypto_gen.cpp'; fi`

wallet/test/test_test_bitsilver-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitsilver-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitsilver-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/test_test_bitsilver-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitsilver-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitsilver-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

wallet/test/test_test_bitsilver-init_test_fixture.o: wallet/test/init_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-init_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Tpo -c -o wallet/test/test_test_bitsilver-init_test_fixture.o `test -f 'wallet/test/init_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/init_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/init_test_fixture.cpp' object='wallet/test/test_test_bitsilver-init_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-init_test_fixture.o `test -f 'wallet/test/init_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/init_test_fixture.cpp

wallet/test/test_test_bitsilver-init_test_fixture.obj: wallet/test/init_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-init_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Tpo -c -o wallet/test/test_test_bitsilver-init_test_fixture.obj `if test -f 'wallet/test/init_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/init_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-init_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/init_test_fixture.cpp' object='wallet/test/test_test_bitsilver-init_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-init_test_fixture.obj `if test -f 'wallet/test/init_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/init_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_test_fixture.cpp'; fi`

test/test_test_bitsilver-arith_uint256_tests.o: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Tpo -c -o test/test_test_bitsilver-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitsilver-arith_uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp

test/test_test_bitsilver-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Tpo -c -o test/test_test_bitsilver-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitsilver-arith_uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`

test/test_test_bitsilver-addrman_tests.o: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Tpo -c -o test/test_test_bitsilver-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitsilver-addrman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp

test/test_test_bitsilver-addrman_tests.obj: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Tpo -c -o test/test_test_bitsilver-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitsilver-addrman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`

test/test_test_bitsilver-amount_tests.o: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-amount_tests.Tpo -c -o test/test_test_bitsilver-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-amount_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_bitsilver-amount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp

test/test_test_bitsilver-amount_tests.obj: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-amount_tests.Tpo -c -o test/test_test_bitsilver-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-amount_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_bitsilver-amount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`

test/test_test_bitsilver-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Tpo -c -o test/test_test_bitsilver-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitsilver-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_test_bitsilver-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Tpo -c -o test/test_test_bitsilver-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitsilver-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_test_bitsilver-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base32_tests.Tpo -c -o test/test_test_bitsilver-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitsilver-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_test_bitsilver-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base32_tests.Tpo -c -o test/test_test_bitsilver-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitsilver-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_test_bitsilver-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base58_tests.Tpo -c -o test/test_test_bitsilver-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base58_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitsilver-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_test_bitsilver-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base58_tests.Tpo -c -o test/test_test_bitsilver-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base58_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitsilver-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_test_bitsilver-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base64_tests.Tpo -c -o test/test_test_bitsilver-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base64_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitsilver-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_test_bitsilver-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-base64_tests.Tpo -c -o test/test_test_bitsilver-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-base64_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitsilver-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_test_bitsilver-bech32_tests.o: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bech32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Tpo -c -o test/test_test_bitsilver-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_bitsilver-bech32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp

test/test_test_bitsilver-bech32_tests.obj: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bech32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Tpo -c -o test/test_test_bitsilver-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_bitsilver-bech32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`

test/test_test_bitsilver-bip32_tests.o: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Tpo -c -o test/test_test_bitsilver-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitsilver-bip32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp

test/test_test_bitsilver-bip32_tests.obj: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Tpo -c -o test/test_test_bitsilver-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitsilver-bip32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`

test/test_test_bitsilver-blockchain_tests.o: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockchain_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Tpo -c -o test/test_test_bitsilver-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_bitsilver-blockchain_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp

test/test_test_bitsilver-blockchain_tests.obj: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockchain_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Tpo -c -o test/test_test_bitsilver-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_bitsilver-blockchain_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`

test/test_test_bitsilver-blockencodings_tests.o: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockencodings_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Tpo -c -o test/test_test_bitsilver-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_bitsilver-blockencodings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp

test/test_test_bitsilver-blockencodings_tests.obj: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockencodings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Tpo -c -o test/test_test_bitsilver-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_bitsilver-blockencodings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`

test/test_test_bitsilver-blockfilter_tests.o: test/blockfilter_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockfilter_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Tpo -c -o test/test_test_bitsilver-blockfilter_tests.o `test -f 'test/blockfilter_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_tests.cpp' object='test/test_test_bitsilver-blockfilter_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockfilter_tests.o `test -f 'test/blockfilter_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_tests.cpp

test/test_test_bitsilver-blockfilter_tests.obj: test/blockfilter_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockfilter_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Tpo -c -o test/test_test_bitsilver-blockfilter_tests.obj `if test -f 'test/blockfilter_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockfilter_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_tests.cpp' object='test/test_test_bitsilver-blockfilter_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockfilter_tests.obj `if test -f 'test/blockfilter_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_tests.cpp'; fi`

test/test_test_bitsilver-blockfilter_index_tests.o: test/blockfilter_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockfilter_index_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Tpo -c -o test/test_test_bitsilver-blockfilter_index_tests.o `test -f 'test/blockfilter_index_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_index_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_index_tests.cpp' object='test/test_test_bitsilver-blockfilter_index_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockfilter_index_tests.o `test -f 'test/blockfilter_index_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_index_tests.cpp

test/test_test_bitsilver-blockfilter_index_tests.obj: test/blockfilter_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-blockfilter_index_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Tpo -c -o test/test_test_bitsilver-blockfilter_index_tests.obj `if test -f 'test/blockfilter_index_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_index_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-blockfilter_index_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_index_tests.cpp' object='test/test_test_bitsilver-blockfilter_index_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-blockfilter_index_tests.obj `if test -f 'test/blockfilter_index_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_index_tests.cpp'; fi`

test/test_test_bitsilver-bloom_tests.o: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Tpo -c -o test/test_test_bitsilver-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitsilver-bloom_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp

test/test_test_bitsilver-bloom_tests.obj: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Tpo -c -o test/test_test_bitsilver-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitsilver-bloom_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`

test/test_test_bitsilver-bswap_tests.o: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Tpo -c -o test/test_test_bitsilver-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_bitsilver-bswap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp

test/test_test_bitsilver-bswap_tests.obj: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Tpo -c -o test/test_test_bitsilver-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_bitsilver-bswap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`

test/test_test_bitsilver-checkqueue_tests.o: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Tpo -c -o test/test_test_bitsilver-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_bitsilver-checkqueue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp

test/test_test_bitsilver-checkqueue_tests.obj: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Tpo -c -o test/test_test_bitsilver-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_bitsilver-checkqueue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`

test/test_test_bitsilver-coins_tests.o: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-coins_tests.Tpo -c -o test/test_test_bitsilver-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-coins_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitsilver-coins_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp

test/test_test_bitsilver-coins_tests.obj: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-coins_tests.Tpo -c -o test/test_test_bitsilver-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-coins_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitsilver-coins_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`

test/test_test_bitsilver-compilerbug_tests.o: test/compilerbug_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-compilerbug_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Tpo -c -o test/test_test_bitsilver-compilerbug_tests.o `test -f 'test/compilerbug_tests.cpp' || echo '$(srcdir)/'`test/compilerbug_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Po
#	$(AM_V_CXX)source='test/compilerbug_tests.cpp' object='test/test_test_bitsilver-compilerbug_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-compilerbug_tests.o `test -f 'test/compilerbug_tests.cpp' || echo '$(srcdir)/'`test/compilerbug_tests.cpp

test/test_test_bitsilver-compilerbug_tests.obj: test/compilerbug_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-compilerbug_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Tpo -c -o test/test_test_bitsilver-compilerbug_tests.obj `if test -f 'test/compilerbug_tests.cpp'; then $(CYGPATH_W) 'test/compilerbug_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compilerbug_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-compilerbug_tests.Po
#	$(AM_V_CXX)source='test/compilerbug_tests.cpp' object='test/test_test_bitsilver-compilerbug_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-compilerbug_tests.obj `if test -f 'test/compilerbug_tests.cpp'; then $(CYGPATH_W) 'test/compilerbug_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compilerbug_tests.cpp'; fi`

test/test_test_bitsilver-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-compress_tests.Tpo -c -o test/test_test_bitsilver-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-compress_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitsilver-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_test_bitsilver-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-compress_tests.Tpo -c -o test/test_test_bitsilver-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-compress_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitsilver-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_test_bitsilver-crypto_tests.o: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Tpo -c -o test/test_test_bitsilver-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitsilver-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp

test/test_test_bitsilver-crypto_tests.obj: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Tpo -c -o test/test_test_bitsilver-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitsilver-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`

test/test_test_bitsilver-cuckoocache_tests.o: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Tpo -c -o test/test_test_bitsilver-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_bitsilver-cuckoocache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp

test/test_test_bitsilver-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Tpo -c -o test/test_test_bitsilver-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_bitsilver-cuckoocache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`

test/test_test_bitsilver-denialofservice_tests.o: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-denialofservice_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Tpo -c -o test/test_test_bitsilver-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_bitsilver-denialofservice_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp

test/test_test_bitsilver-denialofservice_tests.obj: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-denialofservice_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Tpo -c -o test/test_test_bitsilver-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_bitsilver-denialofservice_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`

test/test_test_bitsilver-descriptor_tests.o: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-descriptor_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Tpo -c -o test/test_test_bitsilver-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_bitsilver-descriptor_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp

test/test_test_bitsilver-descriptor_tests.obj: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-descriptor_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Tpo -c -o test/test_test_bitsilver-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_bitsilver-descriptor_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`

test/test_test_bitsilver-flatfile_tests.o: test/flatfile_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-flatfile_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Tpo -c -o test/test_test_bitsilver-flatfile_tests.o `test -f 'test/flatfile_tests.cpp' || echo '$(srcdir)/'`test/flatfile_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Po
#	$(AM_V_CXX)source='test/flatfile_tests.cpp' object='test/test_test_bitsilver-flatfile_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-flatfile_tests.o `test -f 'test/flatfile_tests.cpp' || echo '$(srcdir)/'`test/flatfile_tests.cpp

test/test_test_bitsilver-flatfile_tests.obj: test/flatfile_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-flatfile_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Tpo -c -o test/test_test_bitsilver-flatfile_tests.obj `if test -f 'test/flatfile_tests.cpp'; then $(CYGPATH_W) 'test/flatfile_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/flatfile_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-flatfile_tests.Po
#	$(AM_V_CXX)source='test/flatfile_tests.cpp' object='test/test_test_bitsilver-flatfile_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-flatfile_tests.obj `if test -f 'test/flatfile_tests.cpp'; then $(CYGPATH_W) 'test/flatfile_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/flatfile_tests.cpp'; fi`

test/test_test_bitsilver-fs_tests.o: test/fs_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-fs_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-fs_tests.Tpo -c -o test/test_test_bitsilver-fs_tests.o `test -f 'test/fs_tests.cpp' || echo '$(srcdir)/'`test/fs_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-fs_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-fs_tests.Po
#	$(AM_V_CXX)source='test/fs_tests.cpp' object='test/test_test_bitsilver-fs_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-fs_tests.o `test -f 'test/fs_tests.cpp' || echo '$(srcdir)/'`test/fs_tests.cpp

test/test_test_bitsilver-fs_tests.obj: test/fs_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-fs_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-fs_tests.Tpo -c -o test/test_test_bitsilver-fs_tests.obj `if test -f 'test/fs_tests.cpp'; then $(CYGPATH_W) 'test/fs_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fs_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-fs_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-fs_tests.Po
#	$(AM_V_CXX)source='test/fs_tests.cpp' object='test/test_test_bitsilver-fs_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-fs_tests.obj `if test -f 'test/fs_tests.cpp'; then $(CYGPATH_W) 'test/fs_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fs_tests.cpp'; fi`

test/test_test_bitsilver-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Tpo -c -o test/test_test_bitsilver-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitsilver-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_test_bitsilver-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Tpo -c -o test/test_test_bitsilver-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitsilver-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_test_bitsilver-hash_tests.o: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-hash_tests.Tpo -c -o test/test_test_bitsilver-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-hash_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitsilver-hash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp

test/test_test_bitsilver-hash_tests.obj: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-hash_tests.Tpo -c -o test/test_test_bitsilver-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-hash_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitsilver-hash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`

test/test_test_bitsilver-key_io_tests.o: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_io_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Tpo -c -o test/test_test_bitsilver-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_bitsilver-key_io_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp

test/test_test_bitsilver-key_io_tests.obj: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_io_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Tpo -c -o test/test_test_bitsilver-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_bitsilver-key_io_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`

test/test_test_bitsilver-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_tests.Tpo -c -o test/test_test_bitsilver-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitsilver-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_test_bitsilver-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_tests.Tpo -c -o test/test_test_bitsilver-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitsilver-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_test_bitsilver-limitedmap_tests.o: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-limitedmap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Tpo -c -o test/test_test_bitsilver-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_bitsilver-limitedmap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp

test/test_test_bitsilver-limitedmap_tests.obj: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-limitedmap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Tpo -c -o test/test_test_bitsilver-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_test_bitsilver-limitedmap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`

test/test_test_bitsilver-logging_tests.o: test/logging_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-logging_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-logging_tests.Tpo -c -o test/test_test_bitsilver-logging_tests.o `test -f 'test/logging_tests.cpp' || echo '$(srcdir)/'`test/logging_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-logging_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-logging_tests.Po
#	$(AM_V_CXX)source='test/logging_tests.cpp' object='test/test_test_bitsilver-logging_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-logging_tests.o `test -f 'test/logging_tests.cpp' || echo '$(srcdir)/'`test/logging_tests.cpp

test/test_test_bitsilver-logging_tests.obj: test/logging_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-logging_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-logging_tests.Tpo -c -o test/test_test_bitsilver-logging_tests.obj `if test -f 'test/logging_tests.cpp'; then $(CYGPATH_W) 'test/logging_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/logging_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-logging_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-logging_tests.Po
#	$(AM_V_CXX)source='test/logging_tests.cpp' object='test/test_test_bitsilver-logging_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-logging_tests.obj `if test -f 'test/logging_tests.cpp'; then $(CYGPATH_W) 'test/logging_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/logging_tests.cpp'; fi`

test/test_test_bitsilver-dbwrapper_tests.o: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Tpo -c -o test/test_test_bitsilver-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_bitsilver-dbwrapper_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp

test/test_test_bitsilver-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Tpo -c -o test/test_test_bitsilver-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_bitsilver-dbwrapper_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`

test/test_test_bitsilver-validation_tests.o: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_tests.Tpo -c -o test/test_test_bitsilver-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_test_bitsilver-validation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp

test/test_test_bitsilver-validation_tests.obj: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_tests.Tpo -c -o test/test_test_bitsilver-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_test_bitsilver-validation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`

test/test_test_bitsilver-mempool_tests.o: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Tpo -c -o test/test_test_bitsilver-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitsilver-mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp

test/test_test_bitsilver-mempool_tests.obj: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Tpo -c -o test/test_test_bitsilver-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitsilver-mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`

test/test_test_bitsilver-merkle_tests.o: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Tpo -c -o test/test_test_bitsilver-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_bitsilver-merkle_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp

test/test_test_bitsilver-merkle_tests.obj: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Tpo -c -o test/test_test_bitsilver-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_bitsilver-merkle_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`

test/test_test_bitsilver-merkleblock_tests.o: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-merkleblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Tpo -c -o test/test_test_bitsilver-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_bitsilver-merkleblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp

test/test_test_bitsilver-merkleblock_tests.obj: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-merkleblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Tpo -c -o test/test_test_bitsilver-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_bitsilver-merkleblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`

test/test_test_bitsilver-miner_tests.o: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-miner_tests.Tpo -c -o test/test_test_bitsilver-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-miner_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitsilver-miner_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp

test/test_test_bitsilver-miner_tests.obj: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-miner_tests.Tpo -c -o test/test_test_bitsilver-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-miner_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitsilver-miner_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`

test/test_test_bitsilver-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Tpo -c -o test/test_test_bitsilver-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitsilver-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_test_bitsilver-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Tpo -c -o test/test_test_bitsilver-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitsilver-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_test_bitsilver-net_tests.o: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-net_tests.Tpo -c -o test/test_test_bitsilver-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-net_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_bitsilver-net_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp

test/test_test_bitsilver-net_tests.obj: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-net_tests.Tpo -c -o test/test_test_bitsilver-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-net_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_bitsilver-net_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`

test/test_test_bitsilver-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Tpo -c -o test/test_test_bitsilver-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitsilver-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_test_bitsilver-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Tpo -c -o test/test_test_bitsilver-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitsilver-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_test_bitsilver-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Tpo -c -o test/test_test_bitsilver-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitsilver-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_test_bitsilver-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Tpo -c -o test/test_test_bitsilver-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitsilver-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_test_bitsilver-policyestimator_tests.o: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Tpo -c -o test/test_test_bitsilver-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitsilver-policyestimator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp

test/test_test_bitsilver-policyestimator_tests.obj: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Tpo -c -o test/test_test_bitsilver-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitsilver-policyestimator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`

test/test_test_bitsilver-pow_tests.o: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-pow_tests.Tpo -c -o test/test_test_bitsilver-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-pow_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitsilver-pow_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp

test/test_test_bitsilver-pow_tests.obj: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-pow_tests.Tpo -c -o test/test_test_bitsilver-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-pow_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitsilver-pow_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`

test/test_test_bitsilver-prevector_tests.o: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Tpo -c -o test/test_test_bitsilver-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_bitsilver-prevector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp

test/test_test_bitsilver-prevector_tests.obj: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Tpo -c -o test/test_test_bitsilver-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_bitsilver-prevector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`

test/test_test_bitsilver-raii_event_tests.o: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Tpo -c -o test/test_test_bitsilver-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitsilver-raii_event_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp

test/test_test_bitsilver-raii_event_tests.obj: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Tpo -c -o test/test_test_bitsilver-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitsilver-raii_event_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`

test/test_test_bitsilver-random_tests.o: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-random_tests.Tpo -c -o test/test_test_bitsilver-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-random_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_bitsilver-random_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp

test/test_test_bitsilver-random_tests.obj: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-random_tests.Tpo -c -o test/test_test_bitsilver-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-random_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_bitsilver-random_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`

test/test_test_bitsilver-reverselock_tests.o: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Tpo -c -o test/test_test_bitsilver-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitsilver-reverselock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp

test/test_test_bitsilver-reverselock_tests.obj: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Tpo -c -o test/test_test_bitsilver-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitsilver-reverselock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`

test/test_test_bitsilver-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Tpo -c -o test/test_test_bitsilver-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitsilver-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_test_bitsilver-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Tpo -c -o test/test_test_bitsilver-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitsilver-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_test_bitsilver-sanity_tests.o: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Tpo -c -o test/test_test_bitsilver-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitsilver-sanity_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp

test/test_test_bitsilver-sanity_tests.obj: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Tpo -c -o test/test_test_bitsilver-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitsilver-sanity_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`

test/test_test_bitsilver-scheduler_tests.o: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Tpo -c -o test/test_test_bitsilver-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitsilver-scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp

test/test_test_bitsilver-scheduler_tests.obj: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Tpo -c -o test/test_test_bitsilver-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitsilver-scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`

test/test_test_bitsilver-script_p2sh_tests.o: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_p2sh_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Tpo -c -o test/test_test_bitsilver-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_bitsilver-script_p2sh_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp

test/test_test_bitsilver-script_p2sh_tests.obj: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_p2sh_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Tpo -c -o test/test_test_bitsilver-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_bitsilver-script_p2sh_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`

test/test_test_bitsilver-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_tests.Tpo -c -o test/test_test_bitsilver-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitsilver-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_test_bitsilver-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_tests.Tpo -c -o test/test_test_bitsilver-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitsilver-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_test_bitsilver-script_standard_tests.o: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_standard_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Tpo -c -o test/test_test_bitsilver-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_bitsilver-script_standard_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp

test/test_test_bitsilver-script_standard_tests.obj: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-script_standard_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Tpo -c -o test/test_test_bitsilver-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_bitsilver-script_standard_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`

test/test_test_bitsilver-scriptnum_tests.o: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Tpo -c -o test/test_test_bitsilver-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitsilver-scriptnum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp

test/test_test_bitsilver-scriptnum_tests.obj: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Tpo -c -o test/test_test_bitsilver-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitsilver-scriptnum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`

test/test_test_bitsilver-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Tpo -c -o test/test_test_bitsilver-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitsilver-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_test_bitsilver-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Tpo -c -o test/test_test_bitsilver-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitsilver-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_test_bitsilver-settings_tests.o: test/settings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-settings_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-settings_tests.Tpo -c -o test/test_test_bitsilver-settings_tests.o `test -f 'test/settings_tests.cpp' || echo '$(srcdir)/'`test/settings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-settings_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-settings_tests.Po
#	$(AM_V_CXX)source='test/settings_tests.cpp' object='test/test_test_bitsilver-settings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-settings_tests.o `test -f 'test/settings_tests.cpp' || echo '$(srcdir)/'`test/settings_tests.cpp

test/test_test_bitsilver-settings_tests.obj: test/settings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-settings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-settings_tests.Tpo -c -o test/test_test_bitsilver-settings_tests.obj `if test -f 'test/settings_tests.cpp'; then $(CYGPATH_W) 'test/settings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/settings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-settings_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-settings_tests.Po
#	$(AM_V_CXX)source='test/settings_tests.cpp' object='test/test_test_bitsilver-settings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-settings_tests.obj `if test -f 'test/settings_tests.cpp'; then $(CYGPATH_W) 'test/settings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/settings_tests.cpp'; fi`

test/test_test_bitsilver-sighash_tests.o: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Tpo -c -o test/test_test_bitsilver-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitsilver-sighash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp

test/test_test_bitsilver-sighash_tests.obj: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Tpo -c -o test/test_test_bitsilver-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitsilver-sighash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`

test/test_test_bitsilver-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Tpo -c -o test/test_test_bitsilver-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitsilver-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_test_bitsilver-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Tpo -c -o test/test_test_bitsilver-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitsilver-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_test_bitsilver-skiplist_tests.o: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Tpo -c -o test/test_test_bitsilver-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitsilver-skiplist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp

test/test_test_bitsilver-skiplist_tests.obj: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Tpo -c -o test/test_test_bitsilver-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitsilver-skiplist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`

test/test_test_bitsilver-streams_tests.o: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-streams_tests.Tpo -c -o test/test_test_bitsilver-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-streams_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_bitsilver-streams_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp

test/test_test_bitsilver-streams_tests.obj: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-streams_tests.Tpo -c -o test/test_test_bitsilver-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-streams_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_bitsilver-streams_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`

test/test_test_bitsilver-sync_tests.o: test/sync_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sync_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sync_tests.Tpo -c -o test/test_test_bitsilver-sync_tests.o `test -f 'test/sync_tests.cpp' || echo '$(srcdir)/'`test/sync_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sync_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sync_tests.Po
#	$(AM_V_CXX)source='test/sync_tests.cpp' object='test/test_test_bitsilver-sync_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sync_tests.o `test -f 'test/sync_tests.cpp' || echo '$(srcdir)/'`test/sync_tests.cpp

test/test_test_bitsilver-sync_tests.obj: test/sync_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-sync_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-sync_tests.Tpo -c -o test/test_test_bitsilver-sync_tests.obj `if test -f 'test/sync_tests.cpp'; then $(CYGPATH_W) 'test/sync_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sync_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-sync_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-sync_tests.Po
#	$(AM_V_CXX)source='test/sync_tests.cpp' object='test/test_test_bitsilver-sync_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-sync_tests.obj `if test -f 'test/sync_tests.cpp'; then $(CYGPATH_W) 'test/sync_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sync_tests.cpp'; fi`

test/test_test_bitsilver-util_threadnames_tests.o: test/util_threadnames_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-util_threadnames_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Tpo -c -o test/test_test_bitsilver-util_threadnames_tests.o `test -f 'test/util_threadnames_tests.cpp' || echo '$(srcdir)/'`test/util_threadnames_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Po
#	$(AM_V_CXX)source='test/util_threadnames_tests.cpp' object='test/test_test_bitsilver-util_threadnames_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-util_threadnames_tests.o `test -f 'test/util_threadnames_tests.cpp' || echo '$(srcdir)/'`test/util_threadnames_tests.cpp

test/test_test_bitsilver-util_threadnames_tests.obj: test/util_threadnames_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-util_threadnames_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Tpo -c -o test/test_test_bitsilver-util_threadnames_tests.obj `if test -f 'test/util_threadnames_tests.cpp'; then $(CYGPATH_W) 'test/util_threadnames_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_threadnames_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-util_threadnames_tests.Po
#	$(AM_V_CXX)source='test/util_threadnames_tests.cpp' object='test/test_test_bitsilver-util_threadnames_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-util_threadnames_tests.obj `if test -f 'test/util_threadnames_tests.cpp'; then $(CYGPATH_W) 'test/util_threadnames_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_threadnames_tests.cpp'; fi`

test/test_test_bitsilver-timedata_tests.o: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Tpo -c -o test/test_test_bitsilver-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitsilver-timedata_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp

test/test_test_bitsilver-timedata_tests.obj: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Tpo -c -o test/test_test_bitsilver-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitsilver-timedata_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`

test/test_test_bitsilver-torcontrol_tests.o: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Tpo -c -o test/test_test_bitsilver-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitsilver-torcontrol_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp

test/test_test_bitsilver-torcontrol_tests.obj: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Tpo -c -o test/test_test_bitsilver-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitsilver-torcontrol_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`

test/test_test_bitsilver-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Tpo -c -o test/test_test_bitsilver-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitsilver-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_test_bitsilver-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Tpo -c -o test/test_test_bitsilver-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitsilver-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_test_bitsilver-txindex_tests.o: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txindex_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Tpo -c -o test/test_test_bitsilver-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_bitsilver-txindex_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp

test/test_test_bitsilver-txindex_tests.obj: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txindex_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Tpo -c -o test/test_test_bitsilver-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_bitsilver-txindex_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`

test/test_test_bitsilver-txvalidation_tests.o: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txvalidation_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Tpo -c -o test/test_test_bitsilver-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_bitsilver-txvalidation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp

test/test_test_bitsilver-txvalidation_tests.obj: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txvalidation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Tpo -c -o test/test_test_bitsilver-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_bitsilver-txvalidation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`

test/test_test_bitsilver-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Tpo -c -o test/test_test_bitsilver-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_bitsilver-txvalidationcache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp

test/test_test_bitsilver-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Tpo -c -o test/test_test_bitsilver-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_bitsilver-txvalidationcache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`

test/test_test_bitsilver-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Tpo -c -o test/test_test_bitsilver-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitsilver-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_test_bitsilver-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Tpo -c -o test/test_test_bitsilver-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitsilver-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_test_bitsilver-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-util_tests.Tpo -c -o test/test_test_bitsilver-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-util_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitsilver-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_test_bitsilver-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-util_tests.Tpo -c -o test/test_test_bitsilver-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-util_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitsilver-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_test_bitsilver-validation_block_tests.o: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_block_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Tpo -c -o test/test_test_bitsilver-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_bitsilver-validation_block_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp

test/test_test_bitsilver-validation_block_tests.obj: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_block_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Tpo -c -o test/test_test_bitsilver-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_bitsilver-validation_block_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`

test/test_test_bitsilver-validation_flush_tests.o: test/validation_flush_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_flush_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Tpo -c -o test/test_test_bitsilver-validation_flush_tests.o `test -f 'test/validation_flush_tests.cpp' || echo '$(srcdir)/'`test/validation_flush_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Po
#	$(AM_V_CXX)source='test/validation_flush_tests.cpp' object='test/test_test_bitsilver-validation_flush_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_flush_tests.o `test -f 'test/validation_flush_tests.cpp' || echo '$(srcdir)/'`test/validation_flush_tests.cpp

test/test_test_bitsilver-validation_flush_tests.obj: test/validation_flush_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-validation_flush_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Tpo -c -o test/test_test_bitsilver-validation_flush_tests.obj `if test -f 'test/validation_flush_tests.cpp'; then $(CYGPATH_W) 'test/validation_flush_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_flush_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-validation_flush_tests.Po
#	$(AM_V_CXX)source='test/validation_flush_tests.cpp' object='test/test_test_bitsilver-validation_flush_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-validation_flush_tests.obj `if test -f 'test/validation_flush_tests.cpp'; then $(CYGPATH_W) 'test/validation_flush_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_flush_tests.cpp'; fi`

test/test_test_bitsilver-versionbits_tests.o: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-versionbits_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Tpo -c -o test/test_test_bitsilver-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_bitsilver-versionbits_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp

test/test_test_bitsilver-versionbits_tests.obj: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-versionbits_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Tpo -c -o test/test_test_bitsilver-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Tpo test/$(DEPDIR)/test_test_bitsilver-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_bitsilver-versionbits_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`

test/test_test_bitsilver-key_properties.o: test/key_properties.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_properties.o -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_properties.Tpo -c -o test/test_test_bitsilver-key_properties.o `test -f 'test/key_properties.cpp' || echo '$(srcdir)/'`test/key_properties.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_properties.Tpo test/$(DEPDIR)/test_test_bitsilver-key_properties.Po
#	$(AM_V_CXX)source='test/key_properties.cpp' object='test/test_test_bitsilver-key_properties.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_properties.o `test -f 'test/key_properties.cpp' || echo '$(srcdir)/'`test/key_properties.cpp

test/test_test_bitsilver-key_properties.obj: test/key_properties.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitsilver-key_properties.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitsilver-key_properties.Tpo -c -o test/test_test_bitsilver-key_properties.obj `if test -f 'test/key_properties.cpp'; then $(CYGPATH_W) 'test/key_properties.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_properties.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitsilver-key_properties.Tpo test/$(DEPDIR)/test_test_bitsilver-key_properties.Po
#	$(AM_V_CXX)source='test/key_properties.cpp' object='test/test_test_bitsilver-key_properties.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitsilver-key_properties.obj `if test -f 'test/key_properties.cpp'; then $(CYGPATH_W) 'test/key_properties.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_properties.cpp'; fi`

wallet/test/test_test_bitsilver-db_tests.o: wallet/test/db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-db_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Tpo -c -o wallet/test/test_test_bitsilver-db_tests.o `test -f 'wallet/test/db_tests.cpp' || echo '$(srcdir)/'`wallet/test/db_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Po
#	$(AM_V_CXX)source='wallet/test/db_tests.cpp' object='wallet/test/test_test_bitsilver-db_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-db_tests.o `test -f 'wallet/test/db_tests.cpp' || echo '$(srcdir)/'`wallet/test/db_tests.cpp

wallet/test/test_test_bitsilver-db_tests.obj: wallet/test/db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-db_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Tpo -c -o wallet/test/test_test_bitsilver-db_tests.obj `if test -f 'wallet/test/db_tests.cpp'; then $(CYGPATH_W) 'wallet/test/db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/db_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-db_tests.Po
#	$(AM_V_CXX)source='wallet/test/db_tests.cpp' object='wallet/test/test_test_bitsilver-db_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-db_tests.obj `if test -f 'wallet/test/db_tests.cpp'; then $(CYGPATH_W) 'wallet/test/db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/db_tests.cpp'; fi`

wallet/test/test_test_bitsilver-psbt_wallet_tests.o: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-psbt_wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_bitsilver-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_bitsilver-psbt_wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp

wallet/test/test_test_bitsilver-psbt_wallet_tests.obj: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-psbt_wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_bitsilver-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_bitsilver-psbt_wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`

wallet/test/test_test_bitsilver-wallet_tests.o: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Tpo -c -o wallet/test/test_test_bitsilver-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitsilver-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp

wallet/test/test_test_bitsilver-wallet_tests.obj: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Tpo -c -o wallet/test/test_test_bitsilver-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitsilver-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`

wallet/test/test_test_bitsilver-wallet_crypto_tests.o: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_bitsilver-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_bitsilver-wallet_crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp

wallet/test/test_test_bitsilver-wallet_crypto_tests.obj: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-wallet_crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_bitsilver-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_bitsilver-wallet_crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`

wallet/test/test_test_bitsilver-coinselector_tests.o: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-coinselector_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Tpo -c -o wallet/test/test_test_bitsilver-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_bitsilver-coinselector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp

wallet/test/test_test_bitsilver-coinselector_tests.obj: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-coinselector_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Tpo -c -o wallet/test/test_test_bitsilver-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_bitsilver-coinselector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`

wallet/test/test_test_bitsilver-init_tests.o: wallet/test/init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-init_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Tpo -c -o wallet/test/test_test_bitsilver-init_tests.o `test -f 'wallet/test/init_tests.cpp' || echo '$(srcdir)/'`wallet/test/init_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Po
#	$(AM_V_CXX)source='wallet/test/init_tests.cpp' object='wallet/test/test_test_bitsilver-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-init_tests.o `test -f 'wallet/test/init_tests.cpp' || echo '$(srcdir)/'`wallet/test/init_tests.cpp

wallet/test/test_test_bitsilver-init_tests.obj: wallet/test/init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-init_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Tpo -c -o wallet/test/test_test_bitsilver-init_tests.obj `if test -f 'wallet/test/init_tests.cpp'; then $(CYGPATH_W) 'wallet/test/init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-init_tests.Po
#	$(AM_V_CXX)source='wallet/test/init_tests.cpp' object='wallet/test/test_test_bitsilver-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-init_tests.obj `if test -f 'wallet/test/init_tests.cpp'; then $(CYGPATH_W) 'wallet/test/init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_tests.cpp'; fi`

wallet/test/test_test_bitsilver-ismine_tests.o: wallet/test/ismine_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-ismine_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Tpo -c -o wallet/test/test_test_bitsilver-ismine_tests.o `test -f 'wallet/test/ismine_tests.cpp' || echo '$(srcdir)/'`wallet/test/ismine_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Po
#	$(AM_V_CXX)source='wallet/test/ismine_tests.cpp' object='wallet/test/test_test_bitsilver-ismine_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-ismine_tests.o `test -f 'wallet/test/ismine_tests.cpp' || echo '$(srcdir)/'`wallet/test/ismine_tests.cpp

wallet/test/test_test_bitsilver-ismine_tests.obj: wallet/test/ismine_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-ismine_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Tpo -c -o wallet/test/test_test_bitsilver-ismine_tests.obj `if test -f 'wallet/test/ismine_tests.cpp'; then $(CYGPATH_W) 'wallet/test/ismine_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/ismine_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-ismine_tests.Po
#	$(AM_V_CXX)source='wallet/test/ismine_tests.cpp' object='wallet/test/test_test_bitsilver-ismine_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-ismine_tests.obj `if test -f 'wallet/test/ismine_tests.cpp'; then $(CYGPATH_W) 'wallet/test/ismine_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/ismine_tests.cpp'; fi`

wallet/test/test_test_bitsilver-scriptpubkeyman_tests.o: wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-scriptpubkeyman_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Tpo -c -o wallet/test/test_test_bitsilver-scriptpubkeyman_tests.o `test -f 'wallet/test/scriptpubkeyman_tests.cpp' || echo '$(srcdir)/'`wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Po
#	$(AM_V_CXX)source='wallet/test/scriptpubkeyman_tests.cpp' object='wallet/test/test_test_bitsilver-scriptpubkeyman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-scriptpubkeyman_tests.o `test -f 'wallet/test/scriptpubkeyman_tests.cpp' || echo '$(srcdir)/'`wallet/test/scriptpubkeyman_tests.cpp

wallet/test/test_test_bitsilver-scriptpubkeyman_tests.obj: wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitsilver-scriptpubkeyman_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Tpo -c -o wallet/test/test_test_bitsilver-scriptpubkeyman_tests.obj `if test -f 'wallet/test/scriptpubkeyman_tests.cpp'; then $(CYGPATH_W) 'wallet/test/scriptpubkeyman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/scriptpubkeyman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitsilver-scriptpubkeyman_tests.Po
#	$(AM_V_CXX)source='wallet/test/scriptpubkeyman_tests.cpp' object='wallet/test/test_test_bitsilver-scriptpubkeyman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitsilver_CPPFLAGS) $(CPPFLAGS) $(test_test_bitsilver_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitsilver-scriptpubkeyman_tests.obj `if test -f 'wallet/test/scriptpubkeyman_tests.cpp'; then $(CYGPATH_W) 'wallet/test/scriptpubkeyman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/scriptpubkeyman_tests.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.mm.o:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

qt/qt_libbitsilverqt_a-macdockiconhandler.o: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Tpo -c -o qt/qt_libbitsilverqt_a-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_libbitsilverqt_a-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm

qt/qt_libbitsilverqt_a-macdockiconhandler.obj: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Tpo -c -o qt/qt_libbitsilverqt_a-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_libbitsilverqt_a-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`

qt/qt_libbitsilverqt_a-macnotificationhandler.o: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Tpo -c -o qt/qt_libbitsilverqt_a-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_libbitsilverqt_a-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm

qt/qt_libbitsilverqt_a-macnotificationhandler.obj: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Tpo -c -o qt/qt_libbitsilverqt_a-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_libbitsilverqt_a-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`

qt/qt_libbitsilverqt_a-macos_appnap.o: qt/macos_appnap.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macos_appnap.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Tpo -c -o qt/qt_libbitsilverqt_a-macos_appnap.o `test -f 'qt/macos_appnap.mm' || echo '$(srcdir)/'`qt/macos_appnap.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Po
#	$(AM_V_OBJCXX)source='qt/macos_appnap.mm' object='qt/qt_libbitsilverqt_a-macos_appnap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macos_appnap.o `test -f 'qt/macos_appnap.mm' || echo '$(srcdir)/'`qt/macos_appnap.mm

qt/qt_libbitsilverqt_a-macos_appnap.obj: qt/macos_appnap.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitsilverqt_a-macos_appnap.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Tpo -c -o qt/qt_libbitsilverqt_a-macos_appnap.obj `if test -f 'qt/macos_appnap.mm'; then $(CYGPATH_W) 'qt/macos_appnap.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macos_appnap.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Tpo qt/$(DEPDIR)/qt_libbitsilverqt_a-macos_appnap.Po
#	$(AM_V_OBJCXX)source='qt/macos_appnap.mm' object='qt/qt_libbitsilverqt_a-macos_appnap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitsilverqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitsilverqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitsilverqt_a-macos_appnap.obj `if test -f 'qt/macos_appnap.mm'; then $(CYGPATH_W) 'qt/macos_appnap.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macos_appnap.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bench/.libs bench/_libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf consensus/.libs consensus/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf qt/.libs qt/_libs
	-rm -rf qt/test/.libs qt/test/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf support/.libs support/_libs
	-rm -rf test/.libs test/_libs
	-rm -rf test/fuzz/.libs test/fuzz/_libs
	-rm -rf util/.libs util/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
qt/test/test_bitsilver-qt.log: qt/test/test_bitsilver-qt$(EXEEXT)
	@p='qt/test/test_bitsilver-qt$(EXEEXT)'; \
	b='qt/test/test_bitsilver-qt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test$(EXEEXT).log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
#check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bench/$(DEPDIR)/$(am__dirstamp)
	-rm -f bench/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f crc32c/$(am__dirstamp)
	-rm -f crc32c/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f crc32c/src/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f index/$(DEPDIR)/$(am__dirstamp)
	-rm -f index/$(am__dirstamp)
	-rm -f interfaces/$(DEPDIR)/$(am__dirstamp)
	-rm -f interfaces/$(am__dirstamp)
	-rm -f leveldb/$(am__dirstamp)
	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/db/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(am__dirstamp)
	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/table/$(am__dirstamp)
	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/util/$(am__dirstamp)
	-rm -f node/$(DEPDIR)/$(am__dirstamp)
	-rm -f node/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f qt/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/$(am__dirstamp)
	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/res/$(am__dirstamp)
	-rm -f qt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/test/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f test/fuzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/fuzz/$(am__dirstamp)
	-rm -f test/gen/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/gen/$(am__dirstamp)
	-rm -f test/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/util/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f wallet/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crc32c/src/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) interfaces/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) node/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) test/fuzz/$(DEPDIR) test/gen/$(DEPDIR) test/util/$(DEPDIR) util/$(DEPDIR) wallet/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crc32c/src/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) interfaces/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) node/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) test/fuzz/$(DEPDIR) test/gen/$(DEPDIR) test/util/$(DEPDIR) util/$(DEPDIR) wallet/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

$(LIBSECP256K1): $(wildcard secp256k1/src/*.h) $(wildcard secp256k1/src/*.c) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

.PHONY: FORCE check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh "$(abs_top_builddir)/src/obj/build.h" \
	  "$(abs_top_srcdir)"
libbitsilver_util_a-clientversion.$(OBJEXT): obj/build.h

config/bitsilver-config.h: config/stamp-h1
	@$(MAKE) -C $(top_builddir) $(subdir)/$(@)
config/stamp-h1: $(top_srcdir)/$(subdir)/config/bitsilver-config.h.in $(top_builddir)/config.status
	$(AM_V_at)$(MAKE) -C $(top_builddir) $(subdir)/$(@)
$(top_srcdir)/$(subdir)/config/bitsilver-config.h.in:  $(am__configure_deps)
	$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/bitsilver-config.h.in

clean-local:
	-$(MAKE) -C secp256k1 clean
	-$(MAKE) -C univalue clean
	-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno
	-rm -f config.h
	-rm -rf test/__pycache__

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@

check-symbols: $(bin_PROGRAMS)
#	@echo "Checking macOS dynamic libraries..."
#	$(AM_V_at) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)

#	@echo "Checking glibc back compat..."
#	$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
	@echo "Checking binary security..."
	$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) OTOOL=$(OTOOL) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)

$(BITSILVER_TESTS): $(GENERATED_TEST_FILES)

bitsilver_test: $(TEST_BINARY)
#bitsilver_test: $(TEST_BINARY) $(BENCH_BINARY)
##bitsilver_test: $(TEST_BINARY)

bitsilver_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

bitsilver_test_clean : FORCE
	rm -f $(CLEAN_BITSILVER_TEST) $(test_test_bitsilver_OBJECTS) $(TEST_BINARY)

check-local: $(BITSILVER_TESTS:.cpp=.cpp.test)
	@echo "Running test/util/bitsilver-util-test.py..."
	$(PYTHON) $(top_builddir)/test/util/bitsilver-util-test.py
	@echo "Running test/util/rpcauth-test.py..."
	$(PYTHON) $(top_builddir)/test/util/rpcauth-test.py
#	@echo "Running bench/bench_bitsilver -evals=1 -scaling=0..."
#	$(BENCH_BINARY) -evals=1 -scaling=0 > /dev/null
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check

%.cpp.test: %.cpp
	@echo Running tests: `cat $< | grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1` from $<
	$(AM_V_at)$(TEST_BINARY) --catch_system_errors=no -l test_suite -t "`cat $< | grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1`" > $<.log 2>&1 || (cat $<.log && false)

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "namespace json_tests{" && \
	 echo "static unsigned const char $(*F)[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "static unsigned const char $(*F)_raw[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

bench/data.cpp: bench/data/block413567.raw.h

bitsilver_bench: $(BENCH_BINARY)

bench: $(BENCH_BINARY) FORCE
	$(BENCH_BINARY)

bitsilver_bench_clean : FORCE
	rm -f $(CLEAN_BITSILVER_BENCH) $(bench_bench_bitsilver_OBJECTS) $(BENCH_BINARY)

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "static unsigned const char $(*F)_raw[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libbitsilverqt_a_OBJECTS) $(qt_bitsilver_qt_OBJECTS) : | $(QT_MOC)

SECONDARY: $(QT_QM)

$(srcdir)/qt/bitsilverstrings.cpp: FORCE
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" $(PYTHON) ../share/qt/extract_strings_qt.py $(libbitsilver_server_a_SOURCES) $(libbitsilver_wallet_a_SOURCES) $(libbitsilver_common_a_SOURCES) $(libbitsilver_zmq_a_SOURCES) $(libbitsilver_consensus_a_SOURCES) $(libbitsilver_util_a_SOURCES)

translate: $(srcdir)/qt/bitsilverstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITSILVER_QT_BASE_CPP) qt/bitsilver.cpp $(BITSILVER_QT_WINDOWS_CPP) $(BITSILVER_QT_WALLET_CPP) $(BITSILVER_QT_H) $(BITSILVER_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/bitsilver_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitsilver_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitsilver $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

bitsilver_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libbitsilverqt_a_OBJECTS) $(qt_bitsilver_qt_OBJECTS) qt/bitsilver-qt$(EXEEXT) $(LIBBITSILVERQT)

bitsilver_qt : qt/bitsilver-qt$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@

test_bitsilver_qt : qt/test/test_bitsilver-qt$(EXEEXT)

test_bitsilver_qt_check : qt/test/test_bitsilver-qt$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_bitsilver_qt_clean: FORCE
	rm -f $(CLEAN_BITSILVER_QT_TEST) $(qt_test_test_bitsilver_qt_OBJECTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
